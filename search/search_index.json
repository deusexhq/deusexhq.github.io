{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Deus Ex Headquarters Knowledge Base 3.0. A few of the pages may be outdated as they were coppied from Alpha's original knowledge base and just adapted to the new format. If you think any pages are wrong, or see any broken formatting, let us know in the Discord! (Links in the sidebar!)","title":"Home"},{"location":"about/","text":"About Deus Ex (usually abbreviated \"DX\") is a first-person role-playing singleplayer game developed by Ion Storm's Austin office (the company was closed in 2005) and published by Eidos Interactive on June 22, 2000. The game uses heavily-modified Unreal Tournament '99 engine and although it was planned as solely a singleplayer game, the multiplayer was later added. The developer has also released a Software Development Kit (SDK), allowing players to modify the standard game and create add-ons. Singleplayer You play as a nano-augmented rookie UNATCO (\"United Nations Anti Terrorist Coalition\") agent with codename JC Denton in a dystopian world of the near future (2050s). The world is turned to chaos by global corporations, terrorism and cureless pandemia, called \"Gray Death\". Following the storyline, JC Denton finds out that things are not as simple, as they seem. Deus Ex has a very flexible gameplay, characterized by ability to choose in every its aspect: from a set of augmentations in JC's body to the world's future. All situations can be solved in a variety of ways dependent upon the individual playstyle and views of the player on the state of affairs. Deus Ex includes typical elements of RPG games, such as organizable inventory, skillpoints, division into minor and primary tasks, etc. Multiplayer The multiplayer mode of the game has inherited peculiarity of the singleplayer, including skillpoints and augmentations. Even though Deus Ex Multiplayer (usually abbreviated as \"DXMP\") has a remarkable gameplay compared with the mighty of the industry, it did not become so popular, as the singleplayer, mainly due to the difference between release dates. But although the community is small, it remains being lively and creative. It has also overcome geographical barriers and most of the games are played by people all over the world. There are plenty of mods, allowing to play the game in a variety of ways. Release Info Deus Ex was released for: Microsoft Windows, Mac OS (converted by Aspyr Media Inc ), Playstation 2 (published as \"Deus Ex: The Conspiracy\"). Deus Ex was supposed to be ported to Linux by Loki Software Inc , but the company went out of business before releasing it. However, you may run Deus Ex on Linux using Wine program loader. Deus Ex 2: Invisible War was released for PC and Xbox. Editions Deus Ex (the first game; released on 2000; latest version 1112fm or GOTY). Download 1112fm patch if you don't have it and your Deus Ex is not a GOTY edition. Free pre-release demo. Download (142 MB). Deus Ex (1002f). Deus Ex: GOTY (latest version) \u2014 \"Game Of The Year\" edition. Deus Ex / Deus Ex GOTY SoldOut. How to play without a CD? Deus Ex: The Conspiracy, for Playstation 2. Deus Ex: Invisible War (the original game sequel; released on 2004; latest version 1.2) Free pre-release demo. PC versions: 1.0. 1.2. If your version is lower, it's recommended that you update it . Patch 1.2 includes patch 1.1. Xbox version. Engines Deus Ex uses Unreal Engine 1.5, build 400\u2014436. Deus Ex: The Conspiracy (PS2 version of Deus Ex) uses Unreal Engine 1.5, build 436. Deus Ex: Invisible War uses Unreal Engine 2.0, build 777. Deus Ex Invisible War or Deus Ex 2 is a sequel, released in 2004. The protagonist of the game is \"Alex D\", a 21-year-old male or female (players can pick both Alex's gender and skin color). Some of the characters from the original game reprise their roles in this sequel, including Paul & JC Denton, Tracer Tong, Nicolette DuClare, and Chad Dumier. As in the original, the action takes place in a number of real-world locations, including Seattle, an arcology and a surrounding Medina in Cairo, the Black Gate and its environment in Trier in Germany, Antarctica, and concluding on an ice-bound Liberty Island, the starting point of the first game. Like its predecessor, the game features non-linear gameplay, while still retaining a largely linear central plot. Similarly, nanotechnology and conspiracy theories again play a major role in the action. The plot once more concerns the conflict between different secretive organizations, such as the WTO, The Order (both of which are later shown to be branches of The Illuminati) and The Knights Templar. However, some players feel that an in-depth story line took a back seat for more action. This is possibly due to the removal of some items from the original Deus Ex, such as computers that allow the player to read e-mail, as well as less character development. (Source: Wikipedia ). Is there a multiplayer for Deus Ex 2? No. The fact that multiplayer would not present in the game was announced already during early stages of development. Is there a SDK (editor) for Deus Ex 2? No. Ion Storm announced that it would be too hard to understand. However, they released a SDK for Thief 3, which uses the same engine. Is there going to be Deus Ex 3? The following is speculation, as there is no current proof that Deus Ex 3 will ever be made - No. When Deus Ex 2 was in development, Ion Storm (the developer) announced that Deus Ex 3 was in early stage of development. However Deus Ex 2 was a failure and Ion Storm was ceased as a company by Eidos Interactive (the publisher). There was no news about Deus Ex 3 afterwards and doubtfully Eidos is going to continue the series, after Warren Spector (the director of Deus Ex and Ion Storm) left to his own game design studio, and the rest of developers were assigned between other studios owned by Eidos. The IP (Intellectual Property) for Deus Ex is owned by Eidos. Update 03/12/07 - Although, recent activity from Eidos Montreal may be the introducing to Deus Ex 3, see the Forums, catagory Deus Ex 3 for details. Update Final - Deus Ex 3 was announced and released, as was Deus Ex 4, as Human Revolution and Mankind Divided respectively. Is Snowblind Deus Ex 3? Project: Snowblind was originally conceived as a multiplayer-focused third game in the Deus Ex series, Deus Ex: Clan Wars, but after the less than expected commercial performance of Deus Ex: Invisible War, it was decided to set the game in its own universe. It remains a spiritual sequel to Deus Ex and retains many visible links to its progenitors, although it's a completely different game and doesn't have a lot in common with Deus Ex Multiplayer.","title":"About"},{"location":"actor/","text":"Actor # abstract, native, nativereplication Actor: The base class of all actors. This is a built-in Unreal class and it shouldn't be modified. Properties # // DEUS_EX STM enum EAIEventState { EAISTATE_Begin, EAISTATE_End, EAISTATE_Pulse, EAISTATE_ChangeBest }; enum EAIEventType { EAITYPE_Visual, EAITYPE_Audio, EAITYPE_Olifactory }; struct XAIParams { var actor BestActor; var float Score; var float Visibility; var float Volume; var float Smell; }; // DEUS_EX AJY enum EBarkModes { BM_Idle, BM_CriticalDamage, BM_AreaSecure, BM_TargetAcquired, BM_TargetLost, BM_GoingForAlarm, BM_OutOfAmmo, BM_Scanning, BM_Futz, BM_OnFire, BM_TearGas, BM_Gore, BM_Surprise, BM_PreAttackSearching, BM_PreAttackSighting, BM_PostAttackSearching, BM_SearchGiveUp, BM_AllianceHostile, BM_AllianceFriendly }; // Flags. var(Advanced) const bool bStatic; // Does not move or change over time. var(Advanced) bool bHidden; // Is hidden during gameplay. var(Advanced) const bool bNoDelete; // Cannot be deleted during play. var bool bAnimFinished; // Unlooped animation sequence has finished. var bool bAnimLoop; // Whether animation is looping. var bool bAnimNotify; // Whether a notify is applied to the current sequence. var bool bAnimByOwner; // Animation dictated by owner. var const bool bDeleteMe; // About to be deleted. var transient const bool bAssimilated; // Actor dynamics are assimilated in world geometry. var transient const bool bTicked; // Actor has been updated. var transient bool bLightChanged; // Recalculate this light's lighting now. var bool bDynamicLight; // Temporarily treat this as a dynamic light. var bool bTimerLoop; // Timer loops (else is one-shot). // Other flags. var(Advanced) bool bCanTeleport; // This actor can be teleported. var(Advanced) bool bIsSecretGoal; // This actor counts in the \"secret\" total. var(Advanced) bool bIsKillGoal; // This actor counts in the \"death\" toll. var(Advanced) bool bIsItemGoal; // This actor counts in the \"item\" count. var(Advanced) bool bCollideWhenPlacing; // This actor collides with the world when placing. var(Advanced) bool bTravel; // Actor is capable of travelling among servers. var(Advanced) bool bMovable; // Actor is capable of travelling among servers. var(Advanced) bool bHighDetail; // Only show up on high-detail. var(Advanced) bool bStasis; // In StandAlone games, turn off if not in a recently rendered zone turned off if bCanStasis and physics = PHYS_None or PHYS_Rotating. var(Advanced) bool bForceStasis; // Force stasis when not recently rendered, even if physics not none or rotating. var const bool bIsPawn; // True only for pawns. var(Advanced) const bool bNetTemporary; // Tear-off simulation in network play. var(Advanced) const bool bNetOptional; // Actor should only be replicated if bandwidth available. var bool bReplicateInstigator; // Replicate instigator to client (used by bNetTemporary projectiles). var bool bTrailerSameRotation; // If PHYS_Trailer and true, have same rotation as owner. var bool bTrailerPrePivot; // If PHYS_Trailer and true, offset from owner by PrePivot. var bool bClientAnim; var bool bSimFall; // dumb proxy should simulate fall // DEUS_EX STM - added new flags var(Advanced) bool bBlockSight; // True if pawns can't see through this actor. var(Advanced) bool bDetectable; // True if this actor can be detected (by sight, sound, etc). var(Advanced) bool bTransient; // True if this actor should be destroyed when it goes into stasis var bool bIgnore; // True if this actor should be generally ignored; compliance is voluntary // Priority Parameters // Actor's current physics mode. var(Movement) const enum EPhysics { PHYS_None, PHYS_Walking, PHYS_Falling, PHYS_Swimming, PHYS_Flying, PHYS_Rotating, PHYS_Projectile, PHYS_Rolling, PHYS_Interpolating, PHYS_MovingBrush, PHYS_Spider, PHYS_Trailer } Physics; // Net variables. enum ENetRole { ROLE_None, // No role at all. ROLE_DumbProxy, // Dumb proxy of this actor. ROLE_SimulatedProxy, // Locally simulated proxy of this actor. ROLE_AutonomousProxy, // Locally autonomous proxy of this actor. ROLE_Authority, // Authoritative control over the actor. }; var ENetRole Role; var(Networking) ENetRole RemoteRole; // DEUS_EX STM - added for stasis var float LastRenderTime; var float DistanceFromPlayer; // Owner. var const Actor Owner; // Owner actor. var(Object) name InitialState; var(Object) name Group; // Execution and timer variables. var float TimerRate; // Timer event, 0=no timer. var const float TimerCounter; // Counts up until it reaches TimerRate. var(Advanced) float LifeSpan; // How old the object lives before dying, 0=forever. // Animation variables. var(Display) name AnimSequence; // Animation sequence we're playing. var(Display) float AnimFrame; // Current animation frame, 0.0 to 1.0. var(Display) float AnimRate; // Animation rate in frames per second, 0=none, negative=velocity scaled. var float TweenRate; // Tween-into rate. var(Display) float LODBias; // Blending animation variables - DEUS_EX CNN var name BlendAnimSequence[4]; var float BlendAnimFrame[4]; var float BlendAnimRate[4]; var float BlendTweenRate[4]; //----------------------------------------------------------------------------- // Structures. // Identifies a unique convex volume in the world. struct PointRegion { var zoneinfo Zone; // Zone. var int iLeaf; // Bsp leaf. var byte ZoneNumber; // Zone number. }; //----------------------------------------------------------------------------- // Major actor properties. // Scriptable. var const LevelInfo Level; // Level this actor is on. var transient const Level XLevel; // Level object. var(Events) name Tag; // Actor's tag name. var(Events) name Event; // The event this actor causes. var Actor Target; // Actor we're aiming at (other uses as well). var Pawn Instigator; // Pawn responsible for damage. var travel Inventory Inventory; // Inventory chain. (DEUS_EX STM - added \"travel\") var const Actor Base; // Moving brush actor we're standing on. var const PointRegion Region; // Region this actor is in. var(Movement) name AttachTag; // Internal. var const byte StandingCount; // Count of actors standing on this actor. var const byte MiscNumber; // Internal use. var const byte LatentByte; // Internal latent function use. var const int LatentInt; // Internal latent function use. var const float LatentFloat; // Internal latent function use. var const actor LatentActor; // Internal latent function use. var const actor Touching[4]; // List of touching actors. var const actor Deleted; // Next actor in just-deleted chain. // Internal tags. var const transient int CollisionTag, LightingTag, NetTag, OtherTag, ExtraTag, SpecialTag; // The actor's position and rotation. var(Movement) const vector Location; // Actor's location; use Move to set. var(Movement) const rotator Rotation; // Rotation. var const vector OldLocation; // Actor's old location one tick ago. var const vector ColLocation; // Actor's old location one move ago. var(Movement) vector Velocity; // Velocity. var vector Acceleration; // Acceleration. //Editing flags var(Advanced) bool bHiddenEd; // Is hidden during editing. var(Advanced) bool bDirectional; // Actor shows direction arrow during editing. var const bool bSelected; // Selected in UnrealEd. var const bool bMemorized; // Remembered in UnrealEd. var const bool bHighlighted; // Highlighted in UnrealEd. var bool bEdLocked; // Locked in editor (no movement or rotation). var(Advanced) bool bEdShouldSnap; // Snap to grid in editor. var transient bool bEdSnap; // Should snap to grid in UnrealEd. var transient const bool bTempEditor; // Internal UnrealEd. // What kind of gameplay scenarios to appear in. var(Filter) bool bDifficulty0; // Appear in difficulty 0. var(Filter) bool bDifficulty1; // Appear in difficulty 1. var(Filter) bool bDifficulty2; // Appear in difficulty 2. var(Filter) bool bDifficulty3; // Appear in difficulty 3. var(Filter) bool bSinglePlayer; // Appear in single player. var(Filter) bool bNet; // Appear in regular network play. var(Filter) bool bNetSpecial; // Appear in special network play mode. var(Filter) float OddsOfAppearing; // 0-1 - chance actor will appear in relevant game modes. //----------------------------------------------------------------------------- // Display properties. // Drawing effect. var(Display) enum EDrawType { DT_None, DT_Sprite, DT_Mesh, DT_Brush, DT_RopeSprite, DT_VerticalSprite, DT_Terraform, DT_SpriteAnimOnce, } DrawType; // Style for rendering sprites, meshes. var(Display) enum ERenderStyle { STY_None, STY_Normal, STY_Masked, STY_Translucent, STY_Modulated, } Style; // Other display properties. var(Display) texture Sprite; // Sprite texture if DrawType=DT_Sprite. var(Display) texture Texture; // Misc texture. var(Display) texture Skin; // Special skin or enviro map texture. var(Display) mesh Mesh; // Mesh if DrawType=DT_Mesh. var const export model Brush; // Brush if DrawType=DT_Brush. var(Display) float DrawScale; // Scaling factor, 1.0=normal size. var vector PrePivot; // Offset from box center for drawing. var(Display) float ScaleGlow; // Multiplies lighting. var(Display) byte AmbientGlow; // Ambient brightness, or 255=pulsing. var(Display) byte Fatness; // Fatness (mesh distortion). // Display. var(Display) bool bUnlit; // Lights don't affect actor. var(Display) bool bNoSmooth; // Don't smooth actor's texture. var(Display) bool bParticles; // Mesh is a particle system. var(Display) bool bRandomFrame; // Particles use a random texture from among the default texture and the multiskins textures var(Display) bool bMeshEnviroMap; // Environment-map the mesh. var(Display) bool bMeshCurvy; // Curvy mesh. var(Display) float VisibilityRadius;// Actor is drawn if viewer is within its visibility var(Display) float VisibilityHeight;// cylinder. Zero=infinite visibility. // Not yet implemented. var(Display) bool bShadowCast; // Casts shadows. // Advanced. var(Advanced) bool bOwnerNoSee; // Everything but the owner can see this actor. var(Advanced) bool bOnlyOwnerSee; // Only owner can see this actor. var Const bool bIsMover; // Is a mover. var(Advanced) bool bAlwaysRelevant; // Always relevant for network. var Const bool bAlwaysTick; // Update even when players-only. var bool bHurtEntry; // keep HurtRadius from being reentrant var(Advanced) bool bGameRelevant; // Always relevant for game var bool bCarriedItem; // being carried, and not responsible for displaying self, so don't replicated location and rotation var bool bForcePhysicsUpdate; // force a physics update for simulated pawns // Multiple skin support. var(Display) texture MultiSkins[8]; //----------------------------------------------------------------------------- // Sound. // Ambient sound. var(Sound) byte SoundRadius; // Radius of ambient sound. var(Sound) byte SoundVolume; // Volume of amient sound. var(Sound) byte SoundPitch; // Sound pitch shift, 64.0=none. var(Sound) sound AmbientSound; // Ambient sound effect. // Regular sounds. var(Sound) float TransientSoundVolume; var(Sound) float TransientSoundRadius; // Sound slots for actors. enum ESoundSlot { SLOT_None, SLOT_Misc, SLOT_Pain, SLOT_Interact, SLOT_Ambient, SLOT_Talk, SLOT_Interface, }; // Music transitions. enum EMusicTransition { MTRAN_None, MTRAN_Instant, MTRAN_Segue, MTRAN_Fade, MTRAN_FastFade, MTRAN_SlowFade, }; //----------------------------------------------------------------------------- // Collision. // Collision size. var(Collision) const float CollisionRadius; // Radius of collision cyllinder. var(Collision) const float CollisionHeight; // Half-height cyllinder. // Collision flags. var(Collision) const bool bCollideActors; // Collides with other actors. var(Collision) bool bCollideWorld; // Collides with the world. var(Collision) bool bBlockActors; // Blocks other nonplayer actors. var(Collision) bool bBlockPlayers; // Blocks other player actors. var(Collision) bool bProjTarget; // Projectiles should potentially target this actor. //----------------------------------------------------------------------------- // Lighting. // Light modulation. var(Lighting) enum ELightType { LT_None, LT_Steady, LT_Pulse, LT_Blink, LT_Flicker, LT_Strobe, LT_BackdropLight, LT_SubtlePulse, LT_TexturePaletteOnce, LT_TexturePaletteLoop } LightType; // Spatial light effect to use. var(Lighting) enum ELightEffect { LE_None, LE_TorchWaver, LE_FireWaver, LE_WateryShimmer, LE_Searchlight, LE_SlowWave, LE_FastWave, LE_CloudCast, LE_StaticSpot, LE_Shock, LE_Disco, LE_Warp, LE_Spotlight, LE_NonIncidence, LE_Shell, LE_OmniBumpMap, LE_Interference, LE_Cylinder, LE_Rotor, LE_Unused } LightEffect; // Lighting info. var(LightColor) byte LightBrightness, LightHue, LightSaturation; // Light properties. var(Lighting) byte LightRadius, LightPeriod, LightPhase, LightCone, VolumeBrightness, VolumeRadius, VolumeFog; // Lighting. var(Lighting) bool bSpecialLit; // Only affects special-lit surfaces. var(Lighting) bool bActorShadows; // Light casts actor shadows. var(Lighting) bool bCorona; // Light uses Skin as a corona. var(Lighting) bool bLensFlare; // Whether to use zone lens flare. //----------------------------------------------------------------------------- // Physics. // Options. var(Movement) bool bBounce; // Bounces when hits ground fast. var(Movement) bool bFixedRotationDir; // Fixed direction of rotation. var(Movement) bool bRotateToDesired; // Rotate to DesiredRotation. var bool bInterpolating; // Performing interpolating. var const bool bJustTeleported; // Used by engine physics - not valid for scripts. // Dodge move direction. var enum EDodgeDir { DODGE_None, DODGE_Left, DODGE_Right, DODGE_Forward, DODGE_Back, DODGE_Active, DODGE_Done } DodgeDir; // Physics properties. var(Movement) float Mass; // Mass of this actor. var(Movement) float Buoyancy; // Water buoyancy. var(Movement) rotator RotationRate; // Change in rotation per second. var(Movement) rotator DesiredRotation; // Physics will rotate pawn to this if bRotateToDesired. var float PhysAlpha; // Interpolating position, 0.0-1.0. var float PhysRate; // Interpolation rate per second. var Actor PendingTouch; // Actor touched during move which wants to add an effect after the movement completes //----------------------------------------------------------------------------- // Animation. // Animation control. var float AnimLast; // Last frame. var float AnimMinRate; // Minimum rate for velocity-scaled animation. var float OldAnimRate; // Animation rate of previous animation (= AnimRate until animation completes). var plane SimAnim; // replicated to simulated proxies. // Blending Animation control - DEUS_EX CNN var float BlendAnimLast[4]; // Last frame. var float BlendAnimMinRate[4]; // Minimum rate for velocity-scaled animation. var float OldBlendAnimRate[4]; // Animation rate of previous animation (= AnimRate until animation completes). var plane SimBlendAnim[4]; // replicated to simulated proxies. // Conversation Related Variables - DEUS_EX AJY var(Conversation) String BindName; // Used to bind conversations var(Conversation) String BarkBindName; // Used to bind Barks! var(Conversation) localized String FamiliarName; // For display in Conversations var(Conversation) localized String UnfamiliarName; // For display in Conversations var transient Object ConListItems; // List of ConListItems for this Actor var travel float LastConEndTime; // Time when last conversation ended var(Conversation) float ConStartInterval; // Amount of time required between two convos. // Additional variables for AI - DEUS_EX STM var float VisUpdateTime; var float CurrentVisibility; var float LastVisibility; var(Smell) class<SmellNode> SmellClass; var SmellNode LastSmellNode; var(Advanced) bool bOwned; // End additional variables - DEUS_EX STM // DEUS_EX AMSD Added to make vision aug run faster. If true, the vision aug needs to check this object more closely. // Used for heat sources as well as things that blind. var bool bVisionImportant; //----------------------------------------------------------------------------- // Networking. // Network control. var(Networking) float NetPriority; // Higher priorities means update it more frequently. var(Networking) float NetUpdateFrequency; // How many seconds between net updates. var(Networking) float RelevantRadius; //Radius in which things are always relevant. // Symmetric network flags, valid during replication only. var const bool bNetInitial; // Initial network update. var const bool bNetOwner; // Player owns this actor. var const bool bNetRelevant; // Actor is currently relevant. Only valid server side, only when replicating variables. var const bool bNetSee; // Player sees it in network play. var const bool bNetHear; // Player hears it in network play. var const bool bNetFeel; // Player collides with/feels it in network play. var const bool bSimulatedPawn; // True if Pawn and simulated proxy. var const bool bDemoRecording; // True we are currently demo recording var const bool bClientDemoRecording;// True we are currently recording a client-side demo var const bool bClientDemoNetFunc;// True if we're client-side demo recording and this call originated from the remote. //----------------------------------------------------------------------------- // Enums. // Travelling from server to server. enum ETravelType { TRAVEL_Absolute, // Absolute URL. TRAVEL_Partial, // Partial (carry name, reset server). TRAVEL_Relative, // Relative URL. }; // Input system states. enum EInputAction { IST_None, // Not performing special input processing. IST_Press, // Handling a keypress or button press. IST_Hold, // Handling holding a key or button. IST_Release, // Handling a key or button release. IST_Axis, // Handling analog axis movement. }; // Input keys. enum EInputKey { /*00*/ IK_None ,IK_LeftMouse ,IK_RightMouse ,IK_Cancel , /*04*/ IK_MiddleMouse ,IK_Unknown05 ,IK_Unknown06 ,IK_Unknown07 , /*08*/ IK_Backspace ,IK_Tab ,IK_Unknown0A ,IK_Unknown0B , /*0C*/ IK_Unknown0C ,IK_Enter ,IK_Unknown0E ,IK_Unknown0F , /*10*/ IK_Shift ,IK_Ctrl ,IK_Alt ,IK_Pause , /*14*/ IK_CapsLock ,IK_Unknown15 ,IK_Unknown16 ,IK_Unknown17 , /*18*/ IK_Unknown18 ,IK_Unknown19 ,IK_Unknown1A ,IK_Escape , /*1C*/ IK_Unknown1C ,IK_Unknown1D ,IK_Unknown1E ,IK_Unknown1F , /*20*/ IK_Space ,IK_PageUp ,IK_PageDown ,IK_End , /*24*/ IK_Home ,IK_Left ,IK_Up ,IK_Right , /*28*/ IK_Down ,IK_Select ,IK_Print ,IK_Execute , /*2C*/ IK_PrintScrn ,IK_Insert ,IK_Delete ,IK_Help , /*30*/ IK_0 ,IK_1 ,IK_2 ,IK_3 , /*34*/ IK_4 ,IK_5 ,IK_6 ,IK_7 , /*38*/ IK_8 ,IK_9 ,IK_Unknown3A ,IK_Unknown3B , /*3C*/ IK_Unknown3C ,IK_Unknown3D ,IK_Unknown3E ,IK_Unknown3F , /*40*/ IK_Unknown40 ,IK_A ,IK_B ,IK_C , /*44*/ IK_D ,IK_E ,IK_F ,IK_G , /*48*/ IK_H ,IK_I ,IK_J ,IK_K , /*4C*/ IK_L ,IK_M ,IK_N ,IK_O , /*50*/ IK_P ,IK_Q ,IK_R ,IK_S , /*54*/ IK_T ,IK_U ,IK_V ,IK_W , /*58*/ IK_X ,IK_Y ,IK_Z ,IK_Unknown5B , /*5C*/ IK_Unknown5C ,IK_Unknown5D ,IK_Unknown5E ,IK_Unknown5F , /*60*/ IK_NumPad0 ,IK_NumPad1 ,IK_NumPad2 ,IK_NumPad3 , /*64*/ IK_NumPad4 ,IK_NumPad5 ,IK_NumPad6 ,IK_NumPad7 , /*68*/ IK_NumPad8 ,IK_NumPad9 ,IK_GreyStar ,IK_GreyPlus , /*6C*/ IK_Separator ,IK_GreyMinus ,IK_NumPadPeriod,IK_GreySlash , /*70*/ IK_F1 ,IK_F2 ,IK_F3 ,IK_F4 , /*74*/ IK_F5 ,IK_F6 ,IK_F7 ,IK_F8 , /*78*/ IK_F9 ,IK_F10 ,IK_F11 ,IK_F12 , /*7C*/ IK_F13 ,IK_F14 ,IK_F15 ,IK_F16 , /*80*/ IK_F17 ,IK_F18 ,IK_F19 ,IK_F20 , /*84*/ IK_F21 ,IK_F22 ,IK_F23 ,IK_F24 , /*88*/ IK_Unknown88 ,IK_Unknown89 ,IK_Unknown8A ,IK_Unknown8B , /*8C*/ IK_Unknown8C ,IK_Unknown8D ,IK_Unknown8E ,IK_Unknown8F , /*90*/ IK_NumLock ,IK_ScrollLock ,IK_Unknown92 ,IK_Unknown93 , /*94*/ IK_Unknown94 ,IK_Unknown95 ,IK_Unknown96 ,IK_Unknown97 , /*98*/ IK_Unknown98 ,IK_Unknown99 ,IK_Unknown9A ,IK_Unknown9B , /*9C*/ IK_Unknown9C ,IK_Unknown9D ,IK_Unknown9E ,IK_Unknown9F , /*A0*/ IK_LShift ,IK_RShift ,IK_LControl ,IK_RControl , /*A4*/ IK_UnknownA4 ,IK_UnknownA5 ,IK_UnknownA6 ,IK_UnknownA7 , /*A8*/ IK_UnknownA8 ,IK_UnknownA9 ,IK_UnknownAA ,IK_UnknownAB , /*AC*/ IK_UnknownAC ,IK_UnknownAD ,IK_UnknownAE ,IK_UnknownAF , /*B0*/ IK_UnknownB0 ,IK_UnknownB1 ,IK_UnknownB2 ,IK_UnknownB3 , /*B4*/ IK_UnknownB4 ,IK_UnknownB5 ,IK_UnknownB6 ,IK_UnknownB7 , /*B8*/ IK_UnknownB8 ,IK_UnknownB9 ,IK_Semicolon ,IK_Equals , /*BC*/ IK_Comma ,IK_Minus ,IK_Period ,IK_Slash , /*C0*/ IK_Tilde ,IK_UnknownC1 ,IK_UnknownC2 ,IK_UnknownC3 , /*C4*/ IK_UnknownC4 ,IK_UnknownC5 ,IK_UnknownC6 ,IK_UnknownC7 , /*C8*/ IK_Joy1 ,IK_Joy2 ,IK_Joy3 ,IK_Joy4 , /*CC*/ IK_Joy5 ,IK_Joy6 ,IK_Joy7 ,IK_Joy8 , /*D0*/ IK_Joy9 ,IK_Joy10 ,IK_Joy11 ,IK_Joy12 , /*D4*/ IK_Joy13 ,IK_Joy14 ,IK_Joy15 ,IK_Joy16 , /*D8*/ IK_UnknownD8 ,IK_UnknownD9 ,IK_UnknownDA ,IK_LeftBracket , /*DC*/ IK_Backslash ,IK_RightBracket,IK_SingleQuote ,IK_UnknownDF , /*E0*/ IK_JoyX ,IK_JoyY ,IK_JoyZ ,IK_JoyR , /*E4*/ IK_MouseX ,IK_MouseY ,IK_MouseZ ,IK_MouseW , /*E8*/ IK_JoyU ,IK_JoyV ,IK_UnknownEA ,IK_UnknownEB , /*EC*/ IK_MouseWheelUp ,IK_MouseWheelDown,IK_Unknown10E,UK_Unknown10F , /*F0*/ IK_JoyPovUp ,IK_JoyPovDown ,IK_JoyPovLeft ,IK_JoyPovRight , /*F4*/ IK_UnknownF4 ,IK_UnknownF5 ,IK_Attn ,IK_CrSel , /*F8*/ IK_ExSel ,IK_ErEof ,IK_Play ,IK_Zoom , /*FC*/ IK_NoName ,IK_PA1 ,IK_OEMClear }; var(Display) class<RenderIterator> RenderIteratorClass; // class to instantiate as the actor's RenderInterface var transient RenderIterator RenderInterface; // abstract iterator initialized in the Rendering engine Network replication # replication { // Relationships. unreliable if( Role==ROLE_Authority ) Owner, Role, RemoteRole; unreliable if( bNetOwner && Role==ROLE_Authority ) bNetOwner, Inventory; unreliable if( bReplicateInstigator && (RemoteRole>=ROLE_SimulatedProxy) && (Role==ROLE_Authority) ) Instigator; // Ambient sound. unreliable if( (Role==ROLE_Authority) && (!bNetOwner || !bClientAnim) ) AmbientSound; unreliable if( AmbientSound!=None && Role==ROLE_Authority && (!bNetOwner || !bClientAnim) ) SoundRadius, SoundVolume, SoundPitch; unreliable if( bDemoRecording ) DemoPlaySound; // Collision. unreliable if( Role==ROLE_Authority ) bCollideActors, bCollideWorld; unreliable if( (bCollideActors || bCollideWorld) && Role==ROLE_Authority ) bProjTarget, bBlockActors, bBlockPlayers, CollisionRadius, CollisionHeight; // Location. unreliable if( !bCarriedItem && (bNetInitial || bSimulatedPawn || RemoteRole<ROLE_SimulatedProxy) && Role==ROLE_Authority ) Location; unreliable if( !bCarriedItem && (DrawType==DT_Mesh || DrawType==DT_Brush) && (bNetInitial || bSimulatedPawn || RemoteRole<ROLE_SimulatedProxy) && Role==ROLE_Authority ) Rotation; unreliable if( RemoteRole==ROLE_SimulatedProxy ) Base; // Events unreliable if( Role==ROLE_authority) Event, Tag; // Velocity. unreliable if( bSimFall || ((RemoteRole==ROLE_SimulatedProxy && (bNetInitial || bSimulatedPawn)) || bIsMover) ) Velocity; // Physics. unreliable if( bSimFall || (RemoteRole==ROLE_SimulatedProxy && bNetInitial && !bSimulatedPawn) ) Physics, Acceleration, bBounce; unreliable if( RemoteRole==ROLE_SimulatedProxy && Physics==PHYS_Rotating && bNetInitial ) bFixedRotationDir, bRotateToDesired, RotationRate, DesiredRotation; // Animation. unreliable if( DrawType==DT_Mesh && ((RemoteRole<=ROLE_SimulatedProxy && (!bNetOwner || !bClientAnim)) || bDemoRecording) ) AnimSequence, BlendAnimSequence; // blended anims added - DEUS_EX CNN unreliable if( DrawType==DT_Mesh && (RemoteRole==ROLE_SimulatedProxy)) bAnimNotify; unreliable if( DrawType==DT_Mesh && (RemoteRole<ROLE_SimulatedProxy)) SimAnim, AnimMinRate, SimBlendAnim, BlendAnimMinRate; // blended anims added - DEUS_EX CNN // Rendering. unreliable if( Role==ROLE_Authority ) bHidden, bOnlyOwnerSee; unreliable if( Role==ROLE_Authority ) Texture, DrawScale, PrePivot, DrawType, AmbientGlow, Fatness, ScaleGlow, bUnlit, Style; unreliable if( DrawType==DT_Sprite && !bHidden && (!bOnlyOwnerSee || bNetOwner) && Role==ROLE_Authority) Sprite; unreliable if( DrawType==DT_Mesh && Role==ROLE_Authority ) Mesh, bMeshEnviroMap, Skin, MultiSkins; unreliable if( DrawType==DT_Brush && Role==ROLE_Authority ) Brush; // Lighting. unreliable if( Role==ROLE_Authority ) LightType; unreliable if( LightType!=LT_None && Role==ROLE_Authority ) LightEffect, LightBrightness, LightHue, LightSaturation, LightRadius, LightPeriod, LightPhase, VolumeBrightness, VolumeRadius, bSpecialLit; // Messages reliable if( Role<ROLE_Authority ) BroadcastMessage, BroadcastLocalizedMessage; } Functions # ConsoleCommand # native function string ConsoleCommand( string Command ); Execute a console command in the context of the current level and game engine. Error # native(233) final function Error( coerce string S ); Actor error handling. Handle an error and kill this one actor. Sleep # native(256) final latent function Sleep( float Seconds ); Collision # native(262) final function SetCollision( optional bool NewColActors, optional bool NewBlockActors, optional bool NewBlockPlayers ); native(283) final function bool SetCollisionSize( float NewRadius, float NewHeight ); Movement # native(266) final function bool Move( vector Delta ); native(267) final function bool SetLocation( vector NewLocation ); native(299) final function bool SetRotation( rotator NewRotation ); native(3969) final function bool MoveSmooth( vector Delta ); native(3971) final function AutonomousPhysics(float DeltaSeconds); Relations # native(298) final function SetBase( actor NewBase ); native(272) final function SetOwner( actor NewOwner ); AI Functions # added DEUS_EX STM native(700) final function float AIGetLightLevel( vector Location ); native(701) final function float AIVisibility(optional bool bIncludeVelocity); native(710) final function AISetEventCallback(name eventName, name callback, optional name scoreCallback, optional bool bCheckVisibility, optional bool bCheckDir, optional bool bCheckCylinder, optional bool bCheckLOS); native(711) final function AIClearEventCallback(name eventName); native(713) final function AISendEvent(name eventName, EAIEventType eventType, optional float Value, optional float Radius); native(714) final function AIStartEvent(name eventName, EAIEventType eventType, optional float Value, optional float Radius); native(715) final function AIEndEvent(name eventName, EAIEventType eventType); native(716) final function AIClearEvent(name eventName); native(717) final function rotator RandomBiasedRotation(int centralYaw, float yawDistribution, int centralPitch, float pitchDistribution); native(718) final function bool IsOverlapping(actor checkActor); native(720) final function PlayerPawn GetPlayerPawn(); native(721) final function bool InStasis(); native(722) final function float ParabolicTrace(out vector finalLocation, optional vector startVelocity, optional vector startLocation, optional bool bCheckActors, optional vector cylinder, optional float maxTime, optional float elasticity, optional bool bBounce, optional float landingSpeed, optional float granularity); native(723) final function float LastRendered(); native(724) final function bool GetBoundingBox(out vector MinVect, out vector MaxVect, optional bool bExact, optional vector testLocation, optional rotator testRotation); Animation # native(259) final function PlayAnim( name Sequence, optional float Rate, optional float TweenTime ); native(260) final function LoopAnim( name Sequence, optional float Rate, optional float TweenTime, optional float MinRate ); native(294) final function TweenAnim( name Sequence, float Time ); native(282) final function bool IsAnimating(); native(293) final function name GetAnimGroup( name Sequence ); native(261) final latent function FinishAnim(); native(263) final function bool HasAnim( name Sequence ); // Blending animation function - DEUS_EX CNN native(1010) final function PlayBlendAnim( name Sequence, optional float Rate, optional float TweenTime, optional int BlendSlot ); native(1012) final function TweenBlendAnim( name Sequence, float Time, optional int BlendSlot ); // Gets any numbered texture from a mesh - DEUS_EX CNN native(1013) final function Texture GetMeshTexture( optional int texnum ); // Animation notifications. event AnimEnd(); Physics # // Physics control. native(301) final latent function FinishInterpolation(); // DEUS_EX STM - added optional param to SetPhysics() //native(3970) final function SetPhysics( EPhysics newPhysics ); native(3970) final function SetPhysics( EPhysics newPhysics, optional Actor newFloor ); Engine notification functions # Major notifications # Spawned # event Spawned(); Called when actor is Spawned. See also PostBeginPlay , BeginPlay , PreBeginPlay , PostPostBeginPlay . Destroyed # event Destroyed(); Called when actor is destroyed and removed from the game. Expired # event Expired(); Unknown. Children # event GainedChild( Actor Other ); event LostChild( Actor Other ); Called when actor gains/looses a child actor. Tick # event Tick( float DeltaTime ); Called every tick, or frame, of the game. Triggers # event Trigger( Actor Other, Pawn EventInstigator ); Called when actor is 'Triggered' by the Trigger function. event UnTrigger( Actor Other, Pawn EventInstigator ); Called when actor de-activates, e.i. triggered again to turn off. event BeginEvent(); event EndEvent(); Unknown effects. Physics & world interaction. # Timer # event Timer(); Called when SetTimer() expires. (See SetTimer ) HitWall # event HitWall( vector HitNormal, actor HitWall ); Called when object hits the wall. HitNormal : The vector direction that the actor hit from. HitWall : The wall being hit. Falling # event Falling(); Called when actor is falling through the air. Landed # event Landed( vector HitNormal ); Called when actor hits the ground. HitNormal : Firection actor landed from ZoneChange # event ZoneChange( ZoneInfo NewZone ); Called when actor changes between Zones in the world. NewZone : The ZoneInfo actor controlling the entered zone. Bump/Touch # event Bump( Actor Other ); event Touch( Actor Other ); Called when actor hits in to another actor physically. Other : The actor being touched. event PostTouch( Actor Other ); event UnTouch( Actor Other ); Called for PendingTouch actor after physics completes. BaseChange # event BaseChange(); Called when actor changes base, meaning the actor that is supporting this one. For example, players standing on a crate, and then standing on the floor, is a BaseChange. Attachment # event Attach( Actor Other ); event Detach( Actor Other ); Used for attaching and detaching actors from another. Mostly used for making buttons and switches follow elevators. KillCredit # event KillCredit( Actor Other ); Called when something is killed. Other : Actor being credited for a kill. Interpolating # event InterpolateEnd( actor Other ); Called when actor finishes its interpolating path. EndedRotation # event EndedRotation(); Called when actor stops rotating. Others # event Actor SpecialHandling(Pawn Other); event bool EncroachingOn( actor Other ); event EncroachedBy( actor Other ); DEUS_EX STM -- added BumpWall # event BumpWall( vector HitLocation, vector HitNormal ); Called when actor hits the wall. HitLocation : The location of the wall being hit. HitNormal : The direction being hit from. SupportActor # event SupportActor( actor StandingActor ) { StandingActor.SetBase( self ); } Called when actor is being stood on. OutOfWorld # event FellOutOfWorld() { SetPhysics(PHYS_None); Destroy(); } Called when actor falls out of the world, e.g. fell through the geometry and no longer is in the normal play area. Damage and kills # event KilledBy( pawn EventInstigator ); Called when actor is killed. EventInstigator : The pawn that killed this actor. event TakeDamage( int Damage, Pawn EventInstigator, vector HitLocation, vector Momentum, name DamageType); Called when the actor takes any damage. Damage : The raw damage being dealt to this actor. EventInstigator : The pawn dealing the damage. HitLocation : The location this actor was hit at. Momentum : The direction this actor will be pushed in. DamageType : The string damage type being dealt. Tracing # Trace # native(277) final function Actor Trace ( out vector HitLocation, out vector HitNormal, vector TraceEnd, optional vector TraceStart, optional bool bTraceActors, optional vector Extent ); Traces a line and see what it collides with first. Takes this actor's collision properties into account. Returns first hit actor, Level if hit level, or None if hit nothing. HitLocation : The location we've hit. ( out means the variable is usable after the function is called) HitNormal : Not sure. (WIP) TraceEnd : Where we want to trace to. TraceStart : Where the trace starts from. Uses <actor>.location if left out. bTraceActors : Where we collide with actors or not. Extent : The range of the trace (?) FastTrace # native(548) final function bool FastTrace ( vector TraceEnd, optional vector TraceStart ); returns true if did not hit world geometry TraceEnd : Where we want to trace to. TraceStart : Where the trace starts from. Uses <actor>.location if left out. Spawn # native(278) final function actor Spawn ( class<actor> SpawnClass, optional actor SpawnOwner, optional name SpawnTag, optional vector SpawnLocation, optional rotator SpawnRotation ); Spawn an actor. Returns an actor of the specified class, not of class Actor (this is hardcoded in the compiler). Returns None if the actor could not be spawned (either the actor wouldn't fit in the specified location, or the actor list is full). Defaults to spawning at the spawner's location. SpawnClass : The class we want to spawn. Example: class'DeusEx.Medkit' SpawnOwner : The actor that owns the newly spawned actor. SpawnTag : Sets the Tag of the new actor. SpawnLocation : Location to spawn at. Uses self.location if left out. SpawnRotation : Rocation to spawn at. Uses self.rotation if left out. Destroy # native(279) final function bool Destroy(); Destroy this actor. Returns true if destroyed, false if indestructable. Destruction is latent. It occurs at the end of the tick. Timer # native(280) final function SetTimer( float NewTimerRate, bool bLoop ); Triggers the Timer() event after NewTimerRate ticks. If bLoop is True then then timer will continue looping, else only triggers once. Sound # PlaySound # native(264) final function int PlaySound ( sound Sound, optional ESoundSlot Slot, optional float Volume, optional bool bNoOverride, optional float Radius, optional float Pitch ); //Same as PlaySound, but only plays for the client. (No server propogation) native simulated final function PlayOwnedSound(); //PlaySound call used for Demorec system. native simulated event DemoPlaySound(); Play a sound effect. *DEUS_EX - CNN* changed to return the channel ID of the sound so you can call StopSound later Sound : A sound class in the game. Example: sound'LogNoteAdded' ESoundSlot : The slot to play the sound in to. See ESoundSlot variable. Volume : Volume of the sound. bNoOverride : Wether this sound can be overwritten with other sounds on the same slot or not. Radius : Physical hearable radius of the sound. Pitch : Sounds pitch modifier. StopSound # native(265) final function StopSound(int Id); DEUS_EX CNN - Stop a sound given the sound's ID SetInstantVolume # native(268) final function SetInstantSoundVolume(byte newSoundVolume); native(269) final function SetInstantSpeechVolume(byte newSpeechVolume); native(270) final function SetInstantMusicVolume(byte newMusicVolume); DEUS_EX CNN - Set the sound system volumes without waiting for a tick event GetSoundDuration # native final function float GetSoundDuration( sound Sound ); Get a sound duration. AI functions. # MakeNoise # native(512) final function MakeNoise( float Loudness ); Inform other creatures that you've made a noise they might hear (they are sent a HearNoise message) Senders of MakeNoise should have an instigator if they are not pawns. PlayerCanSeeMe # native(532) final function bool PlayerCanSeeMe(); Returns true if some player has a line of sight to actor's location. Teleportation # event bool PreTeleport( Teleporter InTeleporter ); Called before actor teleports using a Teleporter actor. event PostTeleport( Teleporter OutTeleporter ); Called after actor teleports using a Teleporter actor. BeginPlay # event BeginPlay(); Called when actor enters the game. event PostBeginPlay(); Called immediately after gameplay begins. event PostPostBeginPlay(); DEUS_EX AJY Called immediately after Initial State, and always called when loading a map AND when loading savegame simulated event SetInitialState() { if( InitialState!='' ) GotoState( InitialState ); else GotoState( 'Auto' ); } Called after PostBeginPlay. simulated event PostNetBeginPlay(); MBCODE Called after a net game begins. event PreBeginPlay() { // fake shrink to fix faked collision with floor problems - DEUS_EX CNN if ((IsA('Decoration') || IsA('Inventory')) && (CollisionHeight > 0.75)) SetCollisionSize(CollisionRadius, CollisionHeight - 0.75); else if (IsA('Pawn')) { if (CollisionHeight > 9) SetCollisionSize(CollisionRadius, CollisionHeight - 4.5); else SetCollisionSize(CollisionRadius, CollisionHeight*0.5); } // Handle autodestruction if desired. if( !bGameRelevant && (Level.NetMode != NM_Client) && !Level.Game.IsRelevant(Self) ) Destroy(); } Called immediately before gameplay begins. Disk access. # // Find files. native(539) final function string GetMapName( string NameEnding, string MapName, int Dir ); native(545) final function GetNextSkin( string Prefix, string CurrentSkin, int Dir, out string SkinName, out string SkinDesc ); native(547) final function string GetURLMap(); native final function string GetNextInt( string ClassName, int Num ); native final function GetNextIntDesc( string ClassName, int Num, out string Entry, out string Description ); Iterator functions. # native(304) final iterator function AllActors ( class<actor> BaseClass, out actor Actor, optional name MatchTag ); native(305) final iterator function ChildActors ( class<actor> BaseClass, out actor Actor ); native(306) final iterator function BasedActors ( class<actor> BaseClass, out actor Actor ); native(307) final iterator function TouchingActors( class<actor> BaseClass, out actor Actor ); native(309) final iterator function TraceActors ( class<actor> BaseClass, out actor Actor, out vector HitLoc, out vector HitNorm, vector End, optional vector Start, optional vector Extent ); native(310) final iterator function RadiusActors ( class<actor> BaseClass, out actor Actor, float Radius, optional vector Loc ); native(311) final iterator function VisibleActors ( class<actor> BaseClass, out actor Actor, optional float Radius, optional vector Loc ); native(312) final iterator function VisibleCollidingActors ( class<actor> BaseClass, out actor Actor, optional float Radius, optional vector Loc, optional bool bIgnoreHidden ); // added by DEUS_EX CNN native(1000) final iterator function TraceTexture (class<actor> BaseClass, out actor Actor, out name texName, out name texGroup, out int flags, out vector HitLoc, out vector HitNorm, vector End, optional vector Start, optional vector Extent); // added by DEUS_EX STM native(1002) final iterator function CycleActors (class<actor> BaseClass, out actor Actor, out int Index ); native(1003) final iterator function TraceVisibleActors(class<actor> BaseClass, out actor Actor, out vector HitLoc, out vector HitNorm, vector End, optional vector Start, optional vector Extent ); Iterators are used in the format of; //Destroy all medkits local Medkit MD; foreach AllActors(class'DeusEx.Medkit', MD) MD.Destroy() Color operators # native(549) static final operator(20) color - ( color A, color B ); native(550) static final operator(16) color * ( float A, color B ); native(551) static final operator(20) color + ( color A, color B ); native(552) static final operator(16) color * ( color A, float B ); Scripted Actor functions # event RenderOverlays( canvas Canvas ); draw on canvas before flash and fog are applied (used for drawing weapons) BroadcastMessage # event BroadcastMessage( coerce string Msg, optional bool bBeep, optional name Type ) { local Pawn P; if (Type == '') Type = 'Event'; // if ( Level.Game.AllowsBroadcast(self, Len(Msg)) ) for( P=Level.PawnList; P!=None; P=P.nextPawn ) if( P.bIsPlayer || P.IsA('MessagingSpectator') ) P.ClientMessage( Msg, Type, bBeep ); } Broadcast a message to all players. Can be called as a function; BroadcastMessage(\"This is seen by everyone.\") bBeep : Defines if the message triggers a chat message beep. (Maybe doesn't work?) Type : Unsure. event BroadcastLocalizedMessage( class<LocalMessage> Message, optional int Switch, optional PlayerReplicationInfo RelatedPRI_1, optional PlayerReplicationInfo RelatedPRI_2, optional Object OptionalObject ) { local Pawn P; for ( P=Level.PawnList; P != None; P=P.nextPawn ) if ( P.bIsPlayer || P.IsA('MessagingSpectator') ) P.ReceiveLocalizedMessage( Message, Switch, RelatedPRI_1, RelatedPRI_2, OptionalObject ); } Broadcast a localized message to all players. Most message deal with 0 to 2 related PRIs. The LocalMessage class defines how the PRI's and optional actor are used. HurtRadius # final function HurtRadius( float DamageAmount, float DamageRadius, name DamageName, float Momentum, vector HitLocation, optional bool bIgnoreLOS ) { local actor Victims; local float damageScale, dist; local vector dir; // DEUS_EX CNN local Mover M; if( bHurtEntry ) return; bHurtEntry = true; if (!bIgnoreLOS) { foreach VisibleCollidingActors( class 'Actor', Victims, DamageRadius, HitLocation ) { if( Victims != self ) { dir = Victims.Location - HitLocation; dist = FMax(1,VSize(dir)); dir = dir/dist; damageScale = 1 - FMax(0,(dist - Victims.CollisionRadius)/DamageRadius); Victims.TakeDamage ( damageScale * DamageAmount, Instigator, Victims.Location - 0.5 * (Victims.CollisionHeight + Victims.CollisionRadius) * dir, (damageScale * Momentum * dir), DamageName ); } } } else { foreach RadiusActors(class 'Actor', Victims, DamageRadius, HitLocation ) { if( Victims != self ) { dir = Victims.Location - HitLocation; dist = FMax(1,VSize(dir)); dir = dir/dist; damageScale = 1 - FMax(0,(dist - Victims.CollisionRadius)/DamageRadius); Victims.TakeDamage ( damageScale * DamageAmount, Instigator, Victims.Location - 0.5 * (Victims.CollisionHeight + Victims.CollisionRadius) * dir, (damageScale * Momentum * dir), DamageName ); } } } // // DEUS_EX - CNN - damage the movers, also // foreach RadiusActors(class 'Mover', M, DamageRadius, HitLocation) { if( M != self ) { dir = M.Location - HitLocation; dist = FMax(1,VSize(dir)); dir = dir/dist; damageScale = 1 - FMax(0,(dist - M.CollisionRadius)/DamageRadius); M.TakeDamage ( damageScale * DamageAmount, Instigator, M.Location - 0.5 * (M.CollisionHeight + M.CollisionRadius) * dir, (damageScale * Momentum * dir), DamageName ); } } bHurtEntry = false; } Hurt actors within the radius. DamageAmount : Damage done to the actors. DamageRadius : Range of actors to damage. DamageName : Name of the damage. Momentum : Vector to push the damaged actor in. HitLocation : Location to deal the damage to. Only relevant for Pawn actors to damage body parts. bIgnoreLOS : Unsure. Travel # event TravelPreAccept(); Called when carried onto a new level, before AcceptInventory. event TravelPostAccept(); Called when carried into a new level, after AcceptInventory. Frob # function Frob(Actor Frobber, Inventory frobWith) { } DEUS_EX CNN Called to frob an object, the subclass is responsible for implementing this Frobber will be the actor frobbing this actor. frobWith : Unsure. StopBlendAnims # function StopBlendAnims() { local int i; for (i=0; i<ArrayCount(BlendAnimSequence); i++) BlendAnimSequence[i] = ''; } DEUS_EX CNN Stops animations from blending RenderTexture # event RenderTexture(ScriptedTexture Tex); Called when a scripted texture needs rendering BecomeViewTarget # function BecomeViewTarget(); Called by PlayerPawn when this actor becomes its ViewTarget. GetItemName # function String GetItemName( string FullName ) { local int pos; pos = InStr(FullName, \".\"); While ( pos != -1 ) { FullName = Right(FullName, Len(FullName) - pos - 1); pos = InStr(FullName, \".\"); } return FullName; } Returns the string representation of the name of an object without the package prefixes. GetHumanName # function String GetHumanName() { return GetItemName(string(class)); } Returns the human readable string representation of an object. SetDisplayProperties # function SetDisplayProperties(ERenderStyle NewStyle, texture NewTexture, bool bLighting, bool bEnviroMap ) { Style = NewStyle; texture = NewTexture; bUnlit = bLighting; bMeshEnviromap = bEnviromap; } function SetDefaultDisplayProperties() { Style = Default.Style; texture = Default.Texture; bUnlit = Default.bUnlit; bMeshEnviromap = Default.bMeshEnviromap; } Set the display properties of an actor. By setting them through this function, it allows the actor to modify other components (such as a Pawn's weapon) or to adjust the result based on other factors (such as a Pawn's other inventory wanting to affect the result) EndConversation # function EndConversation() { LastConEndTime = Level.TimeSeconds; } Save the time this conversation ended DEUS_EX AJY DefaultProperties # defaultproperties { bMovable=True bDetectable=True Role=ROLE_Authority RemoteRole=ROLE_DumbProxy LastRenderTime=-10.000000 LODBias=1.000000 bDifficulty0=True bDifficulty1=True bDifficulty2=True bDifficulty3=True bSinglePlayer=True bNet=True bNetSpecial=True OddsOfAppearing=1.000000 DrawType=DT_Sprite Style=STY_Normal Texture=Texture'Engine.S_Actor' DrawScale=1.000000 ScaleGlow=1.000000 Fatness=128 SoundRadius=32 SoundVolume=128 SoundPitch=64 TransientSoundVolume=1.000000 CollisionRadius=22.000000 CollisionHeight=22.000000 bJustTeleported=True Mass=100.000000 ConStartInterval=5.000000 NetPriority=1.000000 NetUpdateFrequency=100.000000 }","title":"Actor"},{"location":"actor/#actor","text":"abstract, native, nativereplication Actor: The base class of all actors. This is a built-in Unreal class and it shouldn't be modified.","title":"Actor"},{"location":"actor/#properties","text":"// DEUS_EX STM enum EAIEventState { EAISTATE_Begin, EAISTATE_End, EAISTATE_Pulse, EAISTATE_ChangeBest }; enum EAIEventType { EAITYPE_Visual, EAITYPE_Audio, EAITYPE_Olifactory }; struct XAIParams { var actor BestActor; var float Score; var float Visibility; var float Volume; var float Smell; }; // DEUS_EX AJY enum EBarkModes { BM_Idle, BM_CriticalDamage, BM_AreaSecure, BM_TargetAcquired, BM_TargetLost, BM_GoingForAlarm, BM_OutOfAmmo, BM_Scanning, BM_Futz, BM_OnFire, BM_TearGas, BM_Gore, BM_Surprise, BM_PreAttackSearching, BM_PreAttackSighting, BM_PostAttackSearching, BM_SearchGiveUp, BM_AllianceHostile, BM_AllianceFriendly }; // Flags. var(Advanced) const bool bStatic; // Does not move or change over time. var(Advanced) bool bHidden; // Is hidden during gameplay. var(Advanced) const bool bNoDelete; // Cannot be deleted during play. var bool bAnimFinished; // Unlooped animation sequence has finished. var bool bAnimLoop; // Whether animation is looping. var bool bAnimNotify; // Whether a notify is applied to the current sequence. var bool bAnimByOwner; // Animation dictated by owner. var const bool bDeleteMe; // About to be deleted. var transient const bool bAssimilated; // Actor dynamics are assimilated in world geometry. var transient const bool bTicked; // Actor has been updated. var transient bool bLightChanged; // Recalculate this light's lighting now. var bool bDynamicLight; // Temporarily treat this as a dynamic light. var bool bTimerLoop; // Timer loops (else is one-shot). // Other flags. var(Advanced) bool bCanTeleport; // This actor can be teleported. var(Advanced) bool bIsSecretGoal; // This actor counts in the \"secret\" total. var(Advanced) bool bIsKillGoal; // This actor counts in the \"death\" toll. var(Advanced) bool bIsItemGoal; // This actor counts in the \"item\" count. var(Advanced) bool bCollideWhenPlacing; // This actor collides with the world when placing. var(Advanced) bool bTravel; // Actor is capable of travelling among servers. var(Advanced) bool bMovable; // Actor is capable of travelling among servers. var(Advanced) bool bHighDetail; // Only show up on high-detail. var(Advanced) bool bStasis; // In StandAlone games, turn off if not in a recently rendered zone turned off if bCanStasis and physics = PHYS_None or PHYS_Rotating. var(Advanced) bool bForceStasis; // Force stasis when not recently rendered, even if physics not none or rotating. var const bool bIsPawn; // True only for pawns. var(Advanced) const bool bNetTemporary; // Tear-off simulation in network play. var(Advanced) const bool bNetOptional; // Actor should only be replicated if bandwidth available. var bool bReplicateInstigator; // Replicate instigator to client (used by bNetTemporary projectiles). var bool bTrailerSameRotation; // If PHYS_Trailer and true, have same rotation as owner. var bool bTrailerPrePivot; // If PHYS_Trailer and true, offset from owner by PrePivot. var bool bClientAnim; var bool bSimFall; // dumb proxy should simulate fall // DEUS_EX STM - added new flags var(Advanced) bool bBlockSight; // True if pawns can't see through this actor. var(Advanced) bool bDetectable; // True if this actor can be detected (by sight, sound, etc). var(Advanced) bool bTransient; // True if this actor should be destroyed when it goes into stasis var bool bIgnore; // True if this actor should be generally ignored; compliance is voluntary // Priority Parameters // Actor's current physics mode. var(Movement) const enum EPhysics { PHYS_None, PHYS_Walking, PHYS_Falling, PHYS_Swimming, PHYS_Flying, PHYS_Rotating, PHYS_Projectile, PHYS_Rolling, PHYS_Interpolating, PHYS_MovingBrush, PHYS_Spider, PHYS_Trailer } Physics; // Net variables. enum ENetRole { ROLE_None, // No role at all. ROLE_DumbProxy, // Dumb proxy of this actor. ROLE_SimulatedProxy, // Locally simulated proxy of this actor. ROLE_AutonomousProxy, // Locally autonomous proxy of this actor. ROLE_Authority, // Authoritative control over the actor. }; var ENetRole Role; var(Networking) ENetRole RemoteRole; // DEUS_EX STM - added for stasis var float LastRenderTime; var float DistanceFromPlayer; // Owner. var const Actor Owner; // Owner actor. var(Object) name InitialState; var(Object) name Group; // Execution and timer variables. var float TimerRate; // Timer event, 0=no timer. var const float TimerCounter; // Counts up until it reaches TimerRate. var(Advanced) float LifeSpan; // How old the object lives before dying, 0=forever. // Animation variables. var(Display) name AnimSequence; // Animation sequence we're playing. var(Display) float AnimFrame; // Current animation frame, 0.0 to 1.0. var(Display) float AnimRate; // Animation rate in frames per second, 0=none, negative=velocity scaled. var float TweenRate; // Tween-into rate. var(Display) float LODBias; // Blending animation variables - DEUS_EX CNN var name BlendAnimSequence[4]; var float BlendAnimFrame[4]; var float BlendAnimRate[4]; var float BlendTweenRate[4]; //----------------------------------------------------------------------------- // Structures. // Identifies a unique convex volume in the world. struct PointRegion { var zoneinfo Zone; // Zone. var int iLeaf; // Bsp leaf. var byte ZoneNumber; // Zone number. }; //----------------------------------------------------------------------------- // Major actor properties. // Scriptable. var const LevelInfo Level; // Level this actor is on. var transient const Level XLevel; // Level object. var(Events) name Tag; // Actor's tag name. var(Events) name Event; // The event this actor causes. var Actor Target; // Actor we're aiming at (other uses as well). var Pawn Instigator; // Pawn responsible for damage. var travel Inventory Inventory; // Inventory chain. (DEUS_EX STM - added \"travel\") var const Actor Base; // Moving brush actor we're standing on. var const PointRegion Region; // Region this actor is in. var(Movement) name AttachTag; // Internal. var const byte StandingCount; // Count of actors standing on this actor. var const byte MiscNumber; // Internal use. var const byte LatentByte; // Internal latent function use. var const int LatentInt; // Internal latent function use. var const float LatentFloat; // Internal latent function use. var const actor LatentActor; // Internal latent function use. var const actor Touching[4]; // List of touching actors. var const actor Deleted; // Next actor in just-deleted chain. // Internal tags. var const transient int CollisionTag, LightingTag, NetTag, OtherTag, ExtraTag, SpecialTag; // The actor's position and rotation. var(Movement) const vector Location; // Actor's location; use Move to set. var(Movement) const rotator Rotation; // Rotation. var const vector OldLocation; // Actor's old location one tick ago. var const vector ColLocation; // Actor's old location one move ago. var(Movement) vector Velocity; // Velocity. var vector Acceleration; // Acceleration. //Editing flags var(Advanced) bool bHiddenEd; // Is hidden during editing. var(Advanced) bool bDirectional; // Actor shows direction arrow during editing. var const bool bSelected; // Selected in UnrealEd. var const bool bMemorized; // Remembered in UnrealEd. var const bool bHighlighted; // Highlighted in UnrealEd. var bool bEdLocked; // Locked in editor (no movement or rotation). var(Advanced) bool bEdShouldSnap; // Snap to grid in editor. var transient bool bEdSnap; // Should snap to grid in UnrealEd. var transient const bool bTempEditor; // Internal UnrealEd. // What kind of gameplay scenarios to appear in. var(Filter) bool bDifficulty0; // Appear in difficulty 0. var(Filter) bool bDifficulty1; // Appear in difficulty 1. var(Filter) bool bDifficulty2; // Appear in difficulty 2. var(Filter) bool bDifficulty3; // Appear in difficulty 3. var(Filter) bool bSinglePlayer; // Appear in single player. var(Filter) bool bNet; // Appear in regular network play. var(Filter) bool bNetSpecial; // Appear in special network play mode. var(Filter) float OddsOfAppearing; // 0-1 - chance actor will appear in relevant game modes. //----------------------------------------------------------------------------- // Display properties. // Drawing effect. var(Display) enum EDrawType { DT_None, DT_Sprite, DT_Mesh, DT_Brush, DT_RopeSprite, DT_VerticalSprite, DT_Terraform, DT_SpriteAnimOnce, } DrawType; // Style for rendering sprites, meshes. var(Display) enum ERenderStyle { STY_None, STY_Normal, STY_Masked, STY_Translucent, STY_Modulated, } Style; // Other display properties. var(Display) texture Sprite; // Sprite texture if DrawType=DT_Sprite. var(Display) texture Texture; // Misc texture. var(Display) texture Skin; // Special skin or enviro map texture. var(Display) mesh Mesh; // Mesh if DrawType=DT_Mesh. var const export model Brush; // Brush if DrawType=DT_Brush. var(Display) float DrawScale; // Scaling factor, 1.0=normal size. var vector PrePivot; // Offset from box center for drawing. var(Display) float ScaleGlow; // Multiplies lighting. var(Display) byte AmbientGlow; // Ambient brightness, or 255=pulsing. var(Display) byte Fatness; // Fatness (mesh distortion). // Display. var(Display) bool bUnlit; // Lights don't affect actor. var(Display) bool bNoSmooth; // Don't smooth actor's texture. var(Display) bool bParticles; // Mesh is a particle system. var(Display) bool bRandomFrame; // Particles use a random texture from among the default texture and the multiskins textures var(Display) bool bMeshEnviroMap; // Environment-map the mesh. var(Display) bool bMeshCurvy; // Curvy mesh. var(Display) float VisibilityRadius;// Actor is drawn if viewer is within its visibility var(Display) float VisibilityHeight;// cylinder. Zero=infinite visibility. // Not yet implemented. var(Display) bool bShadowCast; // Casts shadows. // Advanced. var(Advanced) bool bOwnerNoSee; // Everything but the owner can see this actor. var(Advanced) bool bOnlyOwnerSee; // Only owner can see this actor. var Const bool bIsMover; // Is a mover. var(Advanced) bool bAlwaysRelevant; // Always relevant for network. var Const bool bAlwaysTick; // Update even when players-only. var bool bHurtEntry; // keep HurtRadius from being reentrant var(Advanced) bool bGameRelevant; // Always relevant for game var bool bCarriedItem; // being carried, and not responsible for displaying self, so don't replicated location and rotation var bool bForcePhysicsUpdate; // force a physics update for simulated pawns // Multiple skin support. var(Display) texture MultiSkins[8]; //----------------------------------------------------------------------------- // Sound. // Ambient sound. var(Sound) byte SoundRadius; // Radius of ambient sound. var(Sound) byte SoundVolume; // Volume of amient sound. var(Sound) byte SoundPitch; // Sound pitch shift, 64.0=none. var(Sound) sound AmbientSound; // Ambient sound effect. // Regular sounds. var(Sound) float TransientSoundVolume; var(Sound) float TransientSoundRadius; // Sound slots for actors. enum ESoundSlot { SLOT_None, SLOT_Misc, SLOT_Pain, SLOT_Interact, SLOT_Ambient, SLOT_Talk, SLOT_Interface, }; // Music transitions. enum EMusicTransition { MTRAN_None, MTRAN_Instant, MTRAN_Segue, MTRAN_Fade, MTRAN_FastFade, MTRAN_SlowFade, }; //----------------------------------------------------------------------------- // Collision. // Collision size. var(Collision) const float CollisionRadius; // Radius of collision cyllinder. var(Collision) const float CollisionHeight; // Half-height cyllinder. // Collision flags. var(Collision) const bool bCollideActors; // Collides with other actors. var(Collision) bool bCollideWorld; // Collides with the world. var(Collision) bool bBlockActors; // Blocks other nonplayer actors. var(Collision) bool bBlockPlayers; // Blocks other player actors. var(Collision) bool bProjTarget; // Projectiles should potentially target this actor. //----------------------------------------------------------------------------- // Lighting. // Light modulation. var(Lighting) enum ELightType { LT_None, LT_Steady, LT_Pulse, LT_Blink, LT_Flicker, LT_Strobe, LT_BackdropLight, LT_SubtlePulse, LT_TexturePaletteOnce, LT_TexturePaletteLoop } LightType; // Spatial light effect to use. var(Lighting) enum ELightEffect { LE_None, LE_TorchWaver, LE_FireWaver, LE_WateryShimmer, LE_Searchlight, LE_SlowWave, LE_FastWave, LE_CloudCast, LE_StaticSpot, LE_Shock, LE_Disco, LE_Warp, LE_Spotlight, LE_NonIncidence, LE_Shell, LE_OmniBumpMap, LE_Interference, LE_Cylinder, LE_Rotor, LE_Unused } LightEffect; // Lighting info. var(LightColor) byte LightBrightness, LightHue, LightSaturation; // Light properties. var(Lighting) byte LightRadius, LightPeriod, LightPhase, LightCone, VolumeBrightness, VolumeRadius, VolumeFog; // Lighting. var(Lighting) bool bSpecialLit; // Only affects special-lit surfaces. var(Lighting) bool bActorShadows; // Light casts actor shadows. var(Lighting) bool bCorona; // Light uses Skin as a corona. var(Lighting) bool bLensFlare; // Whether to use zone lens flare. //----------------------------------------------------------------------------- // Physics. // Options. var(Movement) bool bBounce; // Bounces when hits ground fast. var(Movement) bool bFixedRotationDir; // Fixed direction of rotation. var(Movement) bool bRotateToDesired; // Rotate to DesiredRotation. var bool bInterpolating; // Performing interpolating. var const bool bJustTeleported; // Used by engine physics - not valid for scripts. // Dodge move direction. var enum EDodgeDir { DODGE_None, DODGE_Left, DODGE_Right, DODGE_Forward, DODGE_Back, DODGE_Active, DODGE_Done } DodgeDir; // Physics properties. var(Movement) float Mass; // Mass of this actor. var(Movement) float Buoyancy; // Water buoyancy. var(Movement) rotator RotationRate; // Change in rotation per second. var(Movement) rotator DesiredRotation; // Physics will rotate pawn to this if bRotateToDesired. var float PhysAlpha; // Interpolating position, 0.0-1.0. var float PhysRate; // Interpolation rate per second. var Actor PendingTouch; // Actor touched during move which wants to add an effect after the movement completes //----------------------------------------------------------------------------- // Animation. // Animation control. var float AnimLast; // Last frame. var float AnimMinRate; // Minimum rate for velocity-scaled animation. var float OldAnimRate; // Animation rate of previous animation (= AnimRate until animation completes). var plane SimAnim; // replicated to simulated proxies. // Blending Animation control - DEUS_EX CNN var float BlendAnimLast[4]; // Last frame. var float BlendAnimMinRate[4]; // Minimum rate for velocity-scaled animation. var float OldBlendAnimRate[4]; // Animation rate of previous animation (= AnimRate until animation completes). var plane SimBlendAnim[4]; // replicated to simulated proxies. // Conversation Related Variables - DEUS_EX AJY var(Conversation) String BindName; // Used to bind conversations var(Conversation) String BarkBindName; // Used to bind Barks! var(Conversation) localized String FamiliarName; // For display in Conversations var(Conversation) localized String UnfamiliarName; // For display in Conversations var transient Object ConListItems; // List of ConListItems for this Actor var travel float LastConEndTime; // Time when last conversation ended var(Conversation) float ConStartInterval; // Amount of time required between two convos. // Additional variables for AI - DEUS_EX STM var float VisUpdateTime; var float CurrentVisibility; var float LastVisibility; var(Smell) class<SmellNode> SmellClass; var SmellNode LastSmellNode; var(Advanced) bool bOwned; // End additional variables - DEUS_EX STM // DEUS_EX AMSD Added to make vision aug run faster. If true, the vision aug needs to check this object more closely. // Used for heat sources as well as things that blind. var bool bVisionImportant; //----------------------------------------------------------------------------- // Networking. // Network control. var(Networking) float NetPriority; // Higher priorities means update it more frequently. var(Networking) float NetUpdateFrequency; // How many seconds between net updates. var(Networking) float RelevantRadius; //Radius in which things are always relevant. // Symmetric network flags, valid during replication only. var const bool bNetInitial; // Initial network update. var const bool bNetOwner; // Player owns this actor. var const bool bNetRelevant; // Actor is currently relevant. Only valid server side, only when replicating variables. var const bool bNetSee; // Player sees it in network play. var const bool bNetHear; // Player hears it in network play. var const bool bNetFeel; // Player collides with/feels it in network play. var const bool bSimulatedPawn; // True if Pawn and simulated proxy. var const bool bDemoRecording; // True we are currently demo recording var const bool bClientDemoRecording;// True we are currently recording a client-side demo var const bool bClientDemoNetFunc;// True if we're client-side demo recording and this call originated from the remote. //----------------------------------------------------------------------------- // Enums. // Travelling from server to server. enum ETravelType { TRAVEL_Absolute, // Absolute URL. TRAVEL_Partial, // Partial (carry name, reset server). TRAVEL_Relative, // Relative URL. }; // Input system states. enum EInputAction { IST_None, // Not performing special input processing. IST_Press, // Handling a keypress or button press. IST_Hold, // Handling holding a key or button. IST_Release, // Handling a key or button release. IST_Axis, // Handling analog axis movement. }; // Input keys. enum EInputKey { /*00*/ IK_None ,IK_LeftMouse ,IK_RightMouse ,IK_Cancel , /*04*/ IK_MiddleMouse ,IK_Unknown05 ,IK_Unknown06 ,IK_Unknown07 , /*08*/ IK_Backspace ,IK_Tab ,IK_Unknown0A ,IK_Unknown0B , /*0C*/ IK_Unknown0C ,IK_Enter ,IK_Unknown0E ,IK_Unknown0F , /*10*/ IK_Shift ,IK_Ctrl ,IK_Alt ,IK_Pause , /*14*/ IK_CapsLock ,IK_Unknown15 ,IK_Unknown16 ,IK_Unknown17 , /*18*/ IK_Unknown18 ,IK_Unknown19 ,IK_Unknown1A ,IK_Escape , /*1C*/ IK_Unknown1C ,IK_Unknown1D ,IK_Unknown1E ,IK_Unknown1F , /*20*/ IK_Space ,IK_PageUp ,IK_PageDown ,IK_End , /*24*/ IK_Home ,IK_Left ,IK_Up ,IK_Right , /*28*/ IK_Down ,IK_Select ,IK_Print ,IK_Execute , /*2C*/ IK_PrintScrn ,IK_Insert ,IK_Delete ,IK_Help , /*30*/ IK_0 ,IK_1 ,IK_2 ,IK_3 , /*34*/ IK_4 ,IK_5 ,IK_6 ,IK_7 , /*38*/ IK_8 ,IK_9 ,IK_Unknown3A ,IK_Unknown3B , /*3C*/ IK_Unknown3C ,IK_Unknown3D ,IK_Unknown3E ,IK_Unknown3F , /*40*/ IK_Unknown40 ,IK_A ,IK_B ,IK_C , /*44*/ IK_D ,IK_E ,IK_F ,IK_G , /*48*/ IK_H ,IK_I ,IK_J ,IK_K , /*4C*/ IK_L ,IK_M ,IK_N ,IK_O , /*50*/ IK_P ,IK_Q ,IK_R ,IK_S , /*54*/ IK_T ,IK_U ,IK_V ,IK_W , /*58*/ IK_X ,IK_Y ,IK_Z ,IK_Unknown5B , /*5C*/ IK_Unknown5C ,IK_Unknown5D ,IK_Unknown5E ,IK_Unknown5F , /*60*/ IK_NumPad0 ,IK_NumPad1 ,IK_NumPad2 ,IK_NumPad3 , /*64*/ IK_NumPad4 ,IK_NumPad5 ,IK_NumPad6 ,IK_NumPad7 , /*68*/ IK_NumPad8 ,IK_NumPad9 ,IK_GreyStar ,IK_GreyPlus , /*6C*/ IK_Separator ,IK_GreyMinus ,IK_NumPadPeriod,IK_GreySlash , /*70*/ IK_F1 ,IK_F2 ,IK_F3 ,IK_F4 , /*74*/ IK_F5 ,IK_F6 ,IK_F7 ,IK_F8 , /*78*/ IK_F9 ,IK_F10 ,IK_F11 ,IK_F12 , /*7C*/ IK_F13 ,IK_F14 ,IK_F15 ,IK_F16 , /*80*/ IK_F17 ,IK_F18 ,IK_F19 ,IK_F20 , /*84*/ IK_F21 ,IK_F22 ,IK_F23 ,IK_F24 , /*88*/ IK_Unknown88 ,IK_Unknown89 ,IK_Unknown8A ,IK_Unknown8B , /*8C*/ IK_Unknown8C ,IK_Unknown8D ,IK_Unknown8E ,IK_Unknown8F , /*90*/ IK_NumLock ,IK_ScrollLock ,IK_Unknown92 ,IK_Unknown93 , /*94*/ IK_Unknown94 ,IK_Unknown95 ,IK_Unknown96 ,IK_Unknown97 , /*98*/ IK_Unknown98 ,IK_Unknown99 ,IK_Unknown9A ,IK_Unknown9B , /*9C*/ IK_Unknown9C ,IK_Unknown9D ,IK_Unknown9E ,IK_Unknown9F , /*A0*/ IK_LShift ,IK_RShift ,IK_LControl ,IK_RControl , /*A4*/ IK_UnknownA4 ,IK_UnknownA5 ,IK_UnknownA6 ,IK_UnknownA7 , /*A8*/ IK_UnknownA8 ,IK_UnknownA9 ,IK_UnknownAA ,IK_UnknownAB , /*AC*/ IK_UnknownAC ,IK_UnknownAD ,IK_UnknownAE ,IK_UnknownAF , /*B0*/ IK_UnknownB0 ,IK_UnknownB1 ,IK_UnknownB2 ,IK_UnknownB3 , /*B4*/ IK_UnknownB4 ,IK_UnknownB5 ,IK_UnknownB6 ,IK_UnknownB7 , /*B8*/ IK_UnknownB8 ,IK_UnknownB9 ,IK_Semicolon ,IK_Equals , /*BC*/ IK_Comma ,IK_Minus ,IK_Period ,IK_Slash , /*C0*/ IK_Tilde ,IK_UnknownC1 ,IK_UnknownC2 ,IK_UnknownC3 , /*C4*/ IK_UnknownC4 ,IK_UnknownC5 ,IK_UnknownC6 ,IK_UnknownC7 , /*C8*/ IK_Joy1 ,IK_Joy2 ,IK_Joy3 ,IK_Joy4 , /*CC*/ IK_Joy5 ,IK_Joy6 ,IK_Joy7 ,IK_Joy8 , /*D0*/ IK_Joy9 ,IK_Joy10 ,IK_Joy11 ,IK_Joy12 , /*D4*/ IK_Joy13 ,IK_Joy14 ,IK_Joy15 ,IK_Joy16 , /*D8*/ IK_UnknownD8 ,IK_UnknownD9 ,IK_UnknownDA ,IK_LeftBracket , /*DC*/ IK_Backslash ,IK_RightBracket,IK_SingleQuote ,IK_UnknownDF , /*E0*/ IK_JoyX ,IK_JoyY ,IK_JoyZ ,IK_JoyR , /*E4*/ IK_MouseX ,IK_MouseY ,IK_MouseZ ,IK_MouseW , /*E8*/ IK_JoyU ,IK_JoyV ,IK_UnknownEA ,IK_UnknownEB , /*EC*/ IK_MouseWheelUp ,IK_MouseWheelDown,IK_Unknown10E,UK_Unknown10F , /*F0*/ IK_JoyPovUp ,IK_JoyPovDown ,IK_JoyPovLeft ,IK_JoyPovRight , /*F4*/ IK_UnknownF4 ,IK_UnknownF5 ,IK_Attn ,IK_CrSel , /*F8*/ IK_ExSel ,IK_ErEof ,IK_Play ,IK_Zoom , /*FC*/ IK_NoName ,IK_PA1 ,IK_OEMClear }; var(Display) class<RenderIterator> RenderIteratorClass; // class to instantiate as the actor's RenderInterface var transient RenderIterator RenderInterface; // abstract iterator initialized in the Rendering engine","title":"Properties"},{"location":"actor/#network-replication","text":"replication { // Relationships. unreliable if( Role==ROLE_Authority ) Owner, Role, RemoteRole; unreliable if( bNetOwner && Role==ROLE_Authority ) bNetOwner, Inventory; unreliable if( bReplicateInstigator && (RemoteRole>=ROLE_SimulatedProxy) && (Role==ROLE_Authority) ) Instigator; // Ambient sound. unreliable if( (Role==ROLE_Authority) && (!bNetOwner || !bClientAnim) ) AmbientSound; unreliable if( AmbientSound!=None && Role==ROLE_Authority && (!bNetOwner || !bClientAnim) ) SoundRadius, SoundVolume, SoundPitch; unreliable if( bDemoRecording ) DemoPlaySound; // Collision. unreliable if( Role==ROLE_Authority ) bCollideActors, bCollideWorld; unreliable if( (bCollideActors || bCollideWorld) && Role==ROLE_Authority ) bProjTarget, bBlockActors, bBlockPlayers, CollisionRadius, CollisionHeight; // Location. unreliable if( !bCarriedItem && (bNetInitial || bSimulatedPawn || RemoteRole<ROLE_SimulatedProxy) && Role==ROLE_Authority ) Location; unreliable if( !bCarriedItem && (DrawType==DT_Mesh || DrawType==DT_Brush) && (bNetInitial || bSimulatedPawn || RemoteRole<ROLE_SimulatedProxy) && Role==ROLE_Authority ) Rotation; unreliable if( RemoteRole==ROLE_SimulatedProxy ) Base; // Events unreliable if( Role==ROLE_authority) Event, Tag; // Velocity. unreliable if( bSimFall || ((RemoteRole==ROLE_SimulatedProxy && (bNetInitial || bSimulatedPawn)) || bIsMover) ) Velocity; // Physics. unreliable if( bSimFall || (RemoteRole==ROLE_SimulatedProxy && bNetInitial && !bSimulatedPawn) ) Physics, Acceleration, bBounce; unreliable if( RemoteRole==ROLE_SimulatedProxy && Physics==PHYS_Rotating && bNetInitial ) bFixedRotationDir, bRotateToDesired, RotationRate, DesiredRotation; // Animation. unreliable if( DrawType==DT_Mesh && ((RemoteRole<=ROLE_SimulatedProxy && (!bNetOwner || !bClientAnim)) || bDemoRecording) ) AnimSequence, BlendAnimSequence; // blended anims added - DEUS_EX CNN unreliable if( DrawType==DT_Mesh && (RemoteRole==ROLE_SimulatedProxy)) bAnimNotify; unreliable if( DrawType==DT_Mesh && (RemoteRole<ROLE_SimulatedProxy)) SimAnim, AnimMinRate, SimBlendAnim, BlendAnimMinRate; // blended anims added - DEUS_EX CNN // Rendering. unreliable if( Role==ROLE_Authority ) bHidden, bOnlyOwnerSee; unreliable if( Role==ROLE_Authority ) Texture, DrawScale, PrePivot, DrawType, AmbientGlow, Fatness, ScaleGlow, bUnlit, Style; unreliable if( DrawType==DT_Sprite && !bHidden && (!bOnlyOwnerSee || bNetOwner) && Role==ROLE_Authority) Sprite; unreliable if( DrawType==DT_Mesh && Role==ROLE_Authority ) Mesh, bMeshEnviroMap, Skin, MultiSkins; unreliable if( DrawType==DT_Brush && Role==ROLE_Authority ) Brush; // Lighting. unreliable if( Role==ROLE_Authority ) LightType; unreliable if( LightType!=LT_None && Role==ROLE_Authority ) LightEffect, LightBrightness, LightHue, LightSaturation, LightRadius, LightPeriod, LightPhase, VolumeBrightness, VolumeRadius, bSpecialLit; // Messages reliable if( Role<ROLE_Authority ) BroadcastMessage, BroadcastLocalizedMessage; }","title":"Network replication"},{"location":"actor/#functions","text":"","title":"Functions"},{"location":"actor/#consolecommand","text":"native function string ConsoleCommand( string Command ); Execute a console command in the context of the current level and game engine.","title":"ConsoleCommand"},{"location":"actor/#error","text":"native(233) final function Error( coerce string S ); Actor error handling. Handle an error and kill this one actor.","title":"Error"},{"location":"actor/#sleep","text":"native(256) final latent function Sleep( float Seconds );","title":"Sleep"},{"location":"actor/#collision","text":"native(262) final function SetCollision( optional bool NewColActors, optional bool NewBlockActors, optional bool NewBlockPlayers ); native(283) final function bool SetCollisionSize( float NewRadius, float NewHeight );","title":"Collision"},{"location":"actor/#movement","text":"native(266) final function bool Move( vector Delta ); native(267) final function bool SetLocation( vector NewLocation ); native(299) final function bool SetRotation( rotator NewRotation ); native(3969) final function bool MoveSmooth( vector Delta ); native(3971) final function AutonomousPhysics(float DeltaSeconds);","title":"Movement"},{"location":"actor/#relations","text":"native(298) final function SetBase( actor NewBase ); native(272) final function SetOwner( actor NewOwner );","title":"Relations"},{"location":"actor/#ai-functions","text":"added DEUS_EX STM native(700) final function float AIGetLightLevel( vector Location ); native(701) final function float AIVisibility(optional bool bIncludeVelocity); native(710) final function AISetEventCallback(name eventName, name callback, optional name scoreCallback, optional bool bCheckVisibility, optional bool bCheckDir, optional bool bCheckCylinder, optional bool bCheckLOS); native(711) final function AIClearEventCallback(name eventName); native(713) final function AISendEvent(name eventName, EAIEventType eventType, optional float Value, optional float Radius); native(714) final function AIStartEvent(name eventName, EAIEventType eventType, optional float Value, optional float Radius); native(715) final function AIEndEvent(name eventName, EAIEventType eventType); native(716) final function AIClearEvent(name eventName); native(717) final function rotator RandomBiasedRotation(int centralYaw, float yawDistribution, int centralPitch, float pitchDistribution); native(718) final function bool IsOverlapping(actor checkActor); native(720) final function PlayerPawn GetPlayerPawn(); native(721) final function bool InStasis(); native(722) final function float ParabolicTrace(out vector finalLocation, optional vector startVelocity, optional vector startLocation, optional bool bCheckActors, optional vector cylinder, optional float maxTime, optional float elasticity, optional bool bBounce, optional float landingSpeed, optional float granularity); native(723) final function float LastRendered(); native(724) final function bool GetBoundingBox(out vector MinVect, out vector MaxVect, optional bool bExact, optional vector testLocation, optional rotator testRotation);","title":"AI Functions"},{"location":"actor/#animation","text":"native(259) final function PlayAnim( name Sequence, optional float Rate, optional float TweenTime ); native(260) final function LoopAnim( name Sequence, optional float Rate, optional float TweenTime, optional float MinRate ); native(294) final function TweenAnim( name Sequence, float Time ); native(282) final function bool IsAnimating(); native(293) final function name GetAnimGroup( name Sequence ); native(261) final latent function FinishAnim(); native(263) final function bool HasAnim( name Sequence ); // Blending animation function - DEUS_EX CNN native(1010) final function PlayBlendAnim( name Sequence, optional float Rate, optional float TweenTime, optional int BlendSlot ); native(1012) final function TweenBlendAnim( name Sequence, float Time, optional int BlendSlot ); // Gets any numbered texture from a mesh - DEUS_EX CNN native(1013) final function Texture GetMeshTexture( optional int texnum ); // Animation notifications. event AnimEnd();","title":"Animation"},{"location":"actor/#physics","text":"// Physics control. native(301) final latent function FinishInterpolation(); // DEUS_EX STM - added optional param to SetPhysics() //native(3970) final function SetPhysics( EPhysics newPhysics ); native(3970) final function SetPhysics( EPhysics newPhysics, optional Actor newFloor );","title":"Physics"},{"location":"actor/#engine-notification-functions","text":"","title":"Engine notification functions"},{"location":"actor/#major-notifications","text":"","title":"Major notifications"},{"location":"actor/#spawned","text":"event Spawned(); Called when actor is Spawned. See also PostBeginPlay , BeginPlay , PreBeginPlay , PostPostBeginPlay .","title":"Spawned"},{"location":"actor/#destroyed","text":"event Destroyed(); Called when actor is destroyed and removed from the game.","title":"Destroyed"},{"location":"actor/#expired","text":"event Expired(); Unknown.","title":"Expired"},{"location":"actor/#children","text":"event GainedChild( Actor Other ); event LostChild( Actor Other ); Called when actor gains/looses a child actor.","title":"Children"},{"location":"actor/#tick","text":"event Tick( float DeltaTime ); Called every tick, or frame, of the game.","title":"Tick"},{"location":"actor/#triggers","text":"event Trigger( Actor Other, Pawn EventInstigator ); Called when actor is 'Triggered' by the Trigger function. event UnTrigger( Actor Other, Pawn EventInstigator ); Called when actor de-activates, e.i. triggered again to turn off. event BeginEvent(); event EndEvent(); Unknown effects.","title":"Triggers"},{"location":"actor/#physics-world-interaction","text":"","title":"Physics &amp; world interaction."},{"location":"actor/#timer","text":"event Timer(); Called when SetTimer() expires. (See SetTimer )","title":"Timer"},{"location":"actor/#hitwall","text":"event HitWall( vector HitNormal, actor HitWall ); Called when object hits the wall. HitNormal : The vector direction that the actor hit from. HitWall : The wall being hit.","title":"HitWall"},{"location":"actor/#falling","text":"event Falling(); Called when actor is falling through the air.","title":"Falling"},{"location":"actor/#landed","text":"event Landed( vector HitNormal ); Called when actor hits the ground. HitNormal : Firection actor landed from","title":"Landed"},{"location":"actor/#zonechange","text":"event ZoneChange( ZoneInfo NewZone ); Called when actor changes between Zones in the world. NewZone : The ZoneInfo actor controlling the entered zone.","title":"ZoneChange"},{"location":"actor/#bumptouch","text":"event Bump( Actor Other ); event Touch( Actor Other ); Called when actor hits in to another actor physically. Other : The actor being touched. event PostTouch( Actor Other ); event UnTouch( Actor Other ); Called for PendingTouch actor after physics completes.","title":"Bump/Touch"},{"location":"actor/#basechange","text":"event BaseChange(); Called when actor changes base, meaning the actor that is supporting this one. For example, players standing on a crate, and then standing on the floor, is a BaseChange.","title":"BaseChange"},{"location":"actor/#attachment","text":"event Attach( Actor Other ); event Detach( Actor Other ); Used for attaching and detaching actors from another. Mostly used for making buttons and switches follow elevators.","title":"Attachment"},{"location":"actor/#killcredit","text":"event KillCredit( Actor Other ); Called when something is killed. Other : Actor being credited for a kill.","title":"KillCredit"},{"location":"actor/#interpolating","text":"event InterpolateEnd( actor Other ); Called when actor finishes its interpolating path.","title":"Interpolating"},{"location":"actor/#endedrotation","text":"event EndedRotation(); Called when actor stops rotating.","title":"EndedRotation"},{"location":"actor/#others","text":"event Actor SpecialHandling(Pawn Other); event bool EncroachingOn( actor Other ); event EncroachedBy( actor Other ); DEUS_EX STM -- added","title":"Others"},{"location":"actor/#bumpwall","text":"event BumpWall( vector HitLocation, vector HitNormal ); Called when actor hits the wall. HitLocation : The location of the wall being hit. HitNormal : The direction being hit from.","title":"BumpWall"},{"location":"actor/#supportactor","text":"event SupportActor( actor StandingActor ) { StandingActor.SetBase( self ); } Called when actor is being stood on.","title":"SupportActor"},{"location":"actor/#outofworld","text":"event FellOutOfWorld() { SetPhysics(PHYS_None); Destroy(); } Called when actor falls out of the world, e.g. fell through the geometry and no longer is in the normal play area.","title":"OutOfWorld"},{"location":"actor/#damage-and-kills","text":"event KilledBy( pawn EventInstigator ); Called when actor is killed. EventInstigator : The pawn that killed this actor. event TakeDamage( int Damage, Pawn EventInstigator, vector HitLocation, vector Momentum, name DamageType); Called when the actor takes any damage. Damage : The raw damage being dealt to this actor. EventInstigator : The pawn dealing the damage. HitLocation : The location this actor was hit at. Momentum : The direction this actor will be pushed in. DamageType : The string damage type being dealt.","title":"Damage and kills"},{"location":"actor/#tracing","text":"","title":"Tracing"},{"location":"actor/#trace","text":"native(277) final function Actor Trace ( out vector HitLocation, out vector HitNormal, vector TraceEnd, optional vector TraceStart, optional bool bTraceActors, optional vector Extent ); Traces a line and see what it collides with first. Takes this actor's collision properties into account. Returns first hit actor, Level if hit level, or None if hit nothing. HitLocation : The location we've hit. ( out means the variable is usable after the function is called) HitNormal : Not sure. (WIP) TraceEnd : Where we want to trace to. TraceStart : Where the trace starts from. Uses <actor>.location if left out. bTraceActors : Where we collide with actors or not. Extent : The range of the trace (?)","title":"Trace"},{"location":"actor/#fasttrace","text":"native(548) final function bool FastTrace ( vector TraceEnd, optional vector TraceStart ); returns true if did not hit world geometry TraceEnd : Where we want to trace to. TraceStart : Where the trace starts from. Uses <actor>.location if left out.","title":"FastTrace"},{"location":"actor/#spawn","text":"native(278) final function actor Spawn ( class<actor> SpawnClass, optional actor SpawnOwner, optional name SpawnTag, optional vector SpawnLocation, optional rotator SpawnRotation ); Spawn an actor. Returns an actor of the specified class, not of class Actor (this is hardcoded in the compiler). Returns None if the actor could not be spawned (either the actor wouldn't fit in the specified location, or the actor list is full). Defaults to spawning at the spawner's location. SpawnClass : The class we want to spawn. Example: class'DeusEx.Medkit' SpawnOwner : The actor that owns the newly spawned actor. SpawnTag : Sets the Tag of the new actor. SpawnLocation : Location to spawn at. Uses self.location if left out. SpawnRotation : Rocation to spawn at. Uses self.rotation if left out.","title":"Spawn"},{"location":"actor/#destroy","text":"native(279) final function bool Destroy(); Destroy this actor. Returns true if destroyed, false if indestructable. Destruction is latent. It occurs at the end of the tick.","title":"Destroy"},{"location":"actor/#timer_1","text":"native(280) final function SetTimer( float NewTimerRate, bool bLoop ); Triggers the Timer() event after NewTimerRate ticks. If bLoop is True then then timer will continue looping, else only triggers once.","title":"Timer"},{"location":"actor/#sound","text":"","title":"Sound"},{"location":"actor/#playsound","text":"native(264) final function int PlaySound ( sound Sound, optional ESoundSlot Slot, optional float Volume, optional bool bNoOverride, optional float Radius, optional float Pitch ); //Same as PlaySound, but only plays for the client. (No server propogation) native simulated final function PlayOwnedSound(); //PlaySound call used for Demorec system. native simulated event DemoPlaySound(); Play a sound effect. *DEUS_EX - CNN* changed to return the channel ID of the sound so you can call StopSound later Sound : A sound class in the game. Example: sound'LogNoteAdded' ESoundSlot : The slot to play the sound in to. See ESoundSlot variable. Volume : Volume of the sound. bNoOverride : Wether this sound can be overwritten with other sounds on the same slot or not. Radius : Physical hearable radius of the sound. Pitch : Sounds pitch modifier.","title":"PlaySound"},{"location":"actor/#stopsound","text":"native(265) final function StopSound(int Id); DEUS_EX CNN - Stop a sound given the sound's ID","title":"StopSound"},{"location":"actor/#setinstantvolume","text":"native(268) final function SetInstantSoundVolume(byte newSoundVolume); native(269) final function SetInstantSpeechVolume(byte newSpeechVolume); native(270) final function SetInstantMusicVolume(byte newMusicVolume); DEUS_EX CNN - Set the sound system volumes without waiting for a tick event","title":"SetInstantVolume"},{"location":"actor/#getsoundduration","text":"native final function float GetSoundDuration( sound Sound ); Get a sound duration.","title":"GetSoundDuration"},{"location":"actor/#ai-functions_1","text":"","title":"AI functions."},{"location":"actor/#makenoise","text":"native(512) final function MakeNoise( float Loudness ); Inform other creatures that you've made a noise they might hear (they are sent a HearNoise message) Senders of MakeNoise should have an instigator if they are not pawns.","title":"MakeNoise"},{"location":"actor/#playercanseeme","text":"native(532) final function bool PlayerCanSeeMe(); Returns true if some player has a line of sight to actor's location.","title":"PlayerCanSeeMe"},{"location":"actor/#teleportation","text":"event bool PreTeleport( Teleporter InTeleporter ); Called before actor teleports using a Teleporter actor. event PostTeleport( Teleporter OutTeleporter ); Called after actor teleports using a Teleporter actor.","title":"Teleportation"},{"location":"actor/#beginplay","text":"event BeginPlay(); Called when actor enters the game. event PostBeginPlay(); Called immediately after gameplay begins. event PostPostBeginPlay(); DEUS_EX AJY Called immediately after Initial State, and always called when loading a map AND when loading savegame simulated event SetInitialState() { if( InitialState!='' ) GotoState( InitialState ); else GotoState( 'Auto' ); } Called after PostBeginPlay. simulated event PostNetBeginPlay(); MBCODE Called after a net game begins. event PreBeginPlay() { // fake shrink to fix faked collision with floor problems - DEUS_EX CNN if ((IsA('Decoration') || IsA('Inventory')) && (CollisionHeight > 0.75)) SetCollisionSize(CollisionRadius, CollisionHeight - 0.75); else if (IsA('Pawn')) { if (CollisionHeight > 9) SetCollisionSize(CollisionRadius, CollisionHeight - 4.5); else SetCollisionSize(CollisionRadius, CollisionHeight*0.5); } // Handle autodestruction if desired. if( !bGameRelevant && (Level.NetMode != NM_Client) && !Level.Game.IsRelevant(Self) ) Destroy(); } Called immediately before gameplay begins.","title":"BeginPlay"},{"location":"actor/#disk-access","text":"// Find files. native(539) final function string GetMapName( string NameEnding, string MapName, int Dir ); native(545) final function GetNextSkin( string Prefix, string CurrentSkin, int Dir, out string SkinName, out string SkinDesc ); native(547) final function string GetURLMap(); native final function string GetNextInt( string ClassName, int Num ); native final function GetNextIntDesc( string ClassName, int Num, out string Entry, out string Description );","title":"Disk access."},{"location":"actor/#iterator-functions","text":"native(304) final iterator function AllActors ( class<actor> BaseClass, out actor Actor, optional name MatchTag ); native(305) final iterator function ChildActors ( class<actor> BaseClass, out actor Actor ); native(306) final iterator function BasedActors ( class<actor> BaseClass, out actor Actor ); native(307) final iterator function TouchingActors( class<actor> BaseClass, out actor Actor ); native(309) final iterator function TraceActors ( class<actor> BaseClass, out actor Actor, out vector HitLoc, out vector HitNorm, vector End, optional vector Start, optional vector Extent ); native(310) final iterator function RadiusActors ( class<actor> BaseClass, out actor Actor, float Radius, optional vector Loc ); native(311) final iterator function VisibleActors ( class<actor> BaseClass, out actor Actor, optional float Radius, optional vector Loc ); native(312) final iterator function VisibleCollidingActors ( class<actor> BaseClass, out actor Actor, optional float Radius, optional vector Loc, optional bool bIgnoreHidden ); // added by DEUS_EX CNN native(1000) final iterator function TraceTexture (class<actor> BaseClass, out actor Actor, out name texName, out name texGroup, out int flags, out vector HitLoc, out vector HitNorm, vector End, optional vector Start, optional vector Extent); // added by DEUS_EX STM native(1002) final iterator function CycleActors (class<actor> BaseClass, out actor Actor, out int Index ); native(1003) final iterator function TraceVisibleActors(class<actor> BaseClass, out actor Actor, out vector HitLoc, out vector HitNorm, vector End, optional vector Start, optional vector Extent ); Iterators are used in the format of; //Destroy all medkits local Medkit MD; foreach AllActors(class'DeusEx.Medkit', MD) MD.Destroy()","title":"Iterator functions."},{"location":"actor/#color-operators","text":"native(549) static final operator(20) color - ( color A, color B ); native(550) static final operator(16) color * ( float A, color B ); native(551) static final operator(20) color + ( color A, color B ); native(552) static final operator(16) color * ( color A, float B );","title":"Color operators"},{"location":"actor/#scripted-actor-functions","text":"event RenderOverlays( canvas Canvas ); draw on canvas before flash and fog are applied (used for drawing weapons)","title":"Scripted Actor functions"},{"location":"actor/#broadcastmessage","text":"event BroadcastMessage( coerce string Msg, optional bool bBeep, optional name Type ) { local Pawn P; if (Type == '') Type = 'Event'; // if ( Level.Game.AllowsBroadcast(self, Len(Msg)) ) for( P=Level.PawnList; P!=None; P=P.nextPawn ) if( P.bIsPlayer || P.IsA('MessagingSpectator') ) P.ClientMessage( Msg, Type, bBeep ); } Broadcast a message to all players. Can be called as a function; BroadcastMessage(\"This is seen by everyone.\") bBeep : Defines if the message triggers a chat message beep. (Maybe doesn't work?) Type : Unsure. event BroadcastLocalizedMessage( class<LocalMessage> Message, optional int Switch, optional PlayerReplicationInfo RelatedPRI_1, optional PlayerReplicationInfo RelatedPRI_2, optional Object OptionalObject ) { local Pawn P; for ( P=Level.PawnList; P != None; P=P.nextPawn ) if ( P.bIsPlayer || P.IsA('MessagingSpectator') ) P.ReceiveLocalizedMessage( Message, Switch, RelatedPRI_1, RelatedPRI_2, OptionalObject ); } Broadcast a localized message to all players. Most message deal with 0 to 2 related PRIs. The LocalMessage class defines how the PRI's and optional actor are used.","title":"BroadcastMessage"},{"location":"actor/#hurtradius","text":"final function HurtRadius( float DamageAmount, float DamageRadius, name DamageName, float Momentum, vector HitLocation, optional bool bIgnoreLOS ) { local actor Victims; local float damageScale, dist; local vector dir; // DEUS_EX CNN local Mover M; if( bHurtEntry ) return; bHurtEntry = true; if (!bIgnoreLOS) { foreach VisibleCollidingActors( class 'Actor', Victims, DamageRadius, HitLocation ) { if( Victims != self ) { dir = Victims.Location - HitLocation; dist = FMax(1,VSize(dir)); dir = dir/dist; damageScale = 1 - FMax(0,(dist - Victims.CollisionRadius)/DamageRadius); Victims.TakeDamage ( damageScale * DamageAmount, Instigator, Victims.Location - 0.5 * (Victims.CollisionHeight + Victims.CollisionRadius) * dir, (damageScale * Momentum * dir), DamageName ); } } } else { foreach RadiusActors(class 'Actor', Victims, DamageRadius, HitLocation ) { if( Victims != self ) { dir = Victims.Location - HitLocation; dist = FMax(1,VSize(dir)); dir = dir/dist; damageScale = 1 - FMax(0,(dist - Victims.CollisionRadius)/DamageRadius); Victims.TakeDamage ( damageScale * DamageAmount, Instigator, Victims.Location - 0.5 * (Victims.CollisionHeight + Victims.CollisionRadius) * dir, (damageScale * Momentum * dir), DamageName ); } } } // // DEUS_EX - CNN - damage the movers, also // foreach RadiusActors(class 'Mover', M, DamageRadius, HitLocation) { if( M != self ) { dir = M.Location - HitLocation; dist = FMax(1,VSize(dir)); dir = dir/dist; damageScale = 1 - FMax(0,(dist - M.CollisionRadius)/DamageRadius); M.TakeDamage ( damageScale * DamageAmount, Instigator, M.Location - 0.5 * (M.CollisionHeight + M.CollisionRadius) * dir, (damageScale * Momentum * dir), DamageName ); } } bHurtEntry = false; } Hurt actors within the radius. DamageAmount : Damage done to the actors. DamageRadius : Range of actors to damage. DamageName : Name of the damage. Momentum : Vector to push the damaged actor in. HitLocation : Location to deal the damage to. Only relevant for Pawn actors to damage body parts. bIgnoreLOS : Unsure.","title":"HurtRadius"},{"location":"actor/#travel","text":"event TravelPreAccept(); Called when carried onto a new level, before AcceptInventory. event TravelPostAccept(); Called when carried into a new level, after AcceptInventory.","title":"Travel"},{"location":"actor/#frob","text":"function Frob(Actor Frobber, Inventory frobWith) { } DEUS_EX CNN Called to frob an object, the subclass is responsible for implementing this Frobber will be the actor frobbing this actor. frobWith : Unsure.","title":"Frob"},{"location":"actor/#stopblendanims","text":"function StopBlendAnims() { local int i; for (i=0; i<ArrayCount(BlendAnimSequence); i++) BlendAnimSequence[i] = ''; } DEUS_EX CNN Stops animations from blending","title":"StopBlendAnims"},{"location":"actor/#rendertexture","text":"event RenderTexture(ScriptedTexture Tex); Called when a scripted texture needs rendering","title":"RenderTexture"},{"location":"actor/#becomeviewtarget","text":"function BecomeViewTarget(); Called by PlayerPawn when this actor becomes its ViewTarget.","title":"BecomeViewTarget"},{"location":"actor/#getitemname","text":"function String GetItemName( string FullName ) { local int pos; pos = InStr(FullName, \".\"); While ( pos != -1 ) { FullName = Right(FullName, Len(FullName) - pos - 1); pos = InStr(FullName, \".\"); } return FullName; } Returns the string representation of the name of an object without the package prefixes.","title":"GetItemName"},{"location":"actor/#gethumanname","text":"function String GetHumanName() { return GetItemName(string(class)); } Returns the human readable string representation of an object.","title":"GetHumanName"},{"location":"actor/#setdisplayproperties","text":"function SetDisplayProperties(ERenderStyle NewStyle, texture NewTexture, bool bLighting, bool bEnviroMap ) { Style = NewStyle; texture = NewTexture; bUnlit = bLighting; bMeshEnviromap = bEnviromap; } function SetDefaultDisplayProperties() { Style = Default.Style; texture = Default.Texture; bUnlit = Default.bUnlit; bMeshEnviromap = Default.bMeshEnviromap; } Set the display properties of an actor. By setting them through this function, it allows the actor to modify other components (such as a Pawn's weapon) or to adjust the result based on other factors (such as a Pawn's other inventory wanting to affect the result)","title":"SetDisplayProperties"},{"location":"actor/#endconversation","text":"function EndConversation() { LastConEndTime = Level.TimeSeconds; } Save the time this conversation ended DEUS_EX AJY","title":"EndConversation"},{"location":"actor/#defaultproperties","text":"defaultproperties { bMovable=True bDetectable=True Role=ROLE_Authority RemoteRole=ROLE_DumbProxy LastRenderTime=-10.000000 LODBias=1.000000 bDifficulty0=True bDifficulty1=True bDifficulty2=True bDifficulty3=True bSinglePlayer=True bNet=True bNetSpecial=True OddsOfAppearing=1.000000 DrawType=DT_Sprite Style=STY_Normal Texture=Texture'Engine.S_Actor' DrawScale=1.000000 ScaleGlow=1.000000 Fatness=128 SoundRadius=32 SoundVolume=128 SoundPitch=64 TransientSoundVolume=1.000000 CollisionRadius=22.000000 CollisionHeight=22.000000 bJustTeleported=True Mass=100.000000 ConStartInterval=5.000000 NetPriority=1.000000 NetUpdateFrequency=100.000000 }","title":"DefaultProperties"},{"location":"coding/","text":"Intro # First off, setting up files; For editing code , you can either use Notepad (windows) or the Linux equivelant (Gedit usually), it works. But the alternative is Notepad++ and the USCRIPT syntax highlighting, which colours in the code to make it easier to understand, and also will be helpful for a few other aspects. Download Notepad++ and Language File for Uscript (Right click and save-as to avoid it opening in-browser) For Windows, install as normal. For Linux, run the installer under Wine. Once done and loaded, in Language drop down box, click User defined language and click Import, and select the .xml file. Save that and now any .uc files should load with the syntax highlighting. Another alternative for Linux is the Geany IDE , which basically feels like a native N++ for Linux. It is also available on Windows. For compiling code , install the SDK through whatever means you want. I recommend either Deus Ex Editing Pack 2.2 or Deus Ex Unreal Ed updated Installer. Same install instructions as Notepad++. Editing Pack includes a collection of software used for editing, most unneeded, but still handy. In the end, you should end up with a file in Deus Ex/System/ called ucc.exe. If thats there, its installed, and thats all we need. If you want a good base to start off, open up the SDK/Unreal Ed, and in the Classes browser, just click Export All. This decompiles the entire game source code in to the Deus Ex/ folder. If you have code you already want to compile, first, think of a name for the package, example MyMod , but maybe something more clever. Create a folder in Deus Ex directory called MyMod (or whatever you want to call it). Inside THAT, create a folder called Classes . Inside THAT, put your .uc files. Open DeusEx.ini file, search for the list of EditPackages, and at the bottom of that list, add your own, E.g. EditPackages=MyMod This next part varies based on setups, but the end goal is to have the command line of your OS directed to Deus Ex/System. Windows 7+ : Shift-Right Click the background of the System folder with no files selected, and click Open Command Line Here. Windows XP and earlier : Run > cmd.exe, and enter cd followed by the path to your DX system, e.g. cd C:/Deus Ex/System/ Linux : Theres many ways, the XP way works using the Terminal, but in the Thunar file editor, theres an option in the drop down box to Open Terminal Here. Once you're there, enter ucc make It'll attempt to compile the list, if the .u files exist, it'll skip it, so it'll ignore all the default DX files, and attempt your custom file. Useful Functions # Replicated Exec (How to remotely execute commands on players) # replication { //Replicating the function so it executes on the client, not the server reliable if (Role == ROLE_Authority) ReplExec; } //Replicated Exec simulated function ReplExec(DeusExPlayer Player, string Command) { SetOwner(Player); Player.ConsoleCommand(Command); SetOwner(self); } String Splitting # //Split - based on Python, by Kaiser //Takes the Original string, and returns the string found between LeftCut and RightCut, optionally having offsets on either side //Examples: //str = <message>!blah!</message> - Split(str, \"<message>\", \"</message>\") returns !blah! //str = <message>!blah!</message> - Split(str, \"<message>\", \"</message>\", 1, -1) returns blah function string Split(string Original, string LeftCut, string RightCut, optional int OffsetLeft, optional int OffsetRight) { local int leftline, rightline; leftline = InStr(Original, LeftCut); leftline += Len(LeftCut); leftline += OffsetLeft; rightline = InStr(Original, RightCut); rightline += OffsetRight; return Mid(Original, leftline, rightline-leftline); } String Replacing # //Repl - based on Unreal 2 function, backported by Kaiser //Takes the Original string, returns the string with every instance of Target replaced with ReplaceWith //Example: str = \"one two four\" - Repl(str, \"four\", \"three\") returns \"one two three\" function string Repl(string Original, string Target, string ReplaceWith) { local string TempMessage, TempLeft, TempRight, OutMessage, _TmpString; OutMessage=Original; while (instr(caps(outmessage), Target) != -1) { tempRight=(right(OutMessage, (len(OutMessage)-instr(caps(OutMessage), Target))-Len(Target))); tempLeft=(left(OutMessage, instr(caps(OutMessage), Target)) ); OutMessage=TempLeft$ReplaceWith$TempRight; } return OutMessage; } Getting some player variables # //Player variable functions //Gives you a readable name of whatever is inputted ~Kaiser function string GetReadableName(Actor A) { if(DeusExDecoration(A) != None) return DeusExDecoration(A).itemName; else if(Inventory(A) != None) return Inventory(A).itemName; else if(ScriptedPawn(A) != None) return ScriptedPawn(A).FamiliarName; else if(DeusExPlayer(A) != None) return DeusExPlayer(A).PlayerReplicationInfo.PlayerName; else if(DeusExMover(A) != None) return string(DeusExMover(A).Tag); else return \"\"; } //Quickly gives the name of the current pawn function string GetName(PlayerPawn P) { if(P != None) return P.PlayerReplicationInfo.PlayerName; else return \"[No player found]\"; } function string GetNameFromID(int id) { local PlayerPawn P; foreach AllActors(class'PlayerPawn', P) if(P.PlayerReplicationInfo.PlayerID == id) return P.PlayerReplicationInfo.PlayerName; } function string GetIDFromName(string playername) { local PlayerPawn P; foreach AllActors(class'PlayerPawn', P) if(instr(caps(P.PlayerReplicationInfo.PlayerName), caps(playername)) != -1) return P.PlayerReplicationInfo.PlayerID; } function int GetID(PlayerPawn P) { if(P != None) return P.PlayerReplicationInfo.PlayerID; else return -1; } function string GetIP(PlayerPawn P) { local string IP; if(P != None) { IP = P.GetPlayerNetworkAddress(); IP = Left(IP,InStr(IP,\":\")); return IP; } else return \"[No player found]\"; } function PlayerPawn GetPlayerFromID(int id) { local PlayerPawn P; foreach AllActors(class'PlayerPawn', P) if(P.PlayerReplicationInfo.PlayerID == id) return P; } function PlayerPawn GetPlayerFromName(string playername) { local PlayerPawn P; foreach AllActors(class'PlayerPawn', P) if(instr(caps(P.PlayerReplicationInfo.PlayerName), caps(playername)) != -1) return P; } Date/time # function string GetDate() { return level.day$\"/\"$level.month$\"/\"$level.year; } function string GetTime() { local string formattedmin; //We do this part here because of how int's are zeroed. //By default if we just take the level.minute as our time, //a time like \"11:09\" would show as \"11:9\", not so good, //this section inserts the 0 when needed. if(level.minute <= 9) { formattedmin = \"0\"$level.minute; } else { formattedmin = string(level.minute); } return level.hour$\":\"$formattedmin; } Laser/Scope keys # This hopes to teach a little about how to make your own cool functions out of the Ammo Switching, Scope, and Laser Sight functions. First off, identifying the functions that'll be needed to be changed to edit the functionality of these functions. First off: Scope. ScopeOn(); ScopeOff(); ScopeToggle(); and their codes are: function ScopeOn() { if (bHasScope && !bZoomed && (Owner != None) && Owner.IsA('DeusExPlayer')) { // Show the Scope View bZoomed = True; RefreshScopeDisplay(DeusExPlayer(Owner), False, bZoomed); } } function ScopeOff() { if (bHasScope && bZoomed && (Owner != None) && Owner.IsA('DeusExPlayer')) { bZoomed = False; // Hide the Scope View RefreshScopeDisplay(DeusExPlayer(Owner), False, bZoomed); //DeusExRootWindow(DeusExPlayer(Owner).rootWindow).scopeView.DeactivateView(); } } simulated function ScopeToggle() { if (IsInState('Idle')) { if (bHasScope && (Owner != None) && Owner.IsA('DeusExPlayer')) { if (bZoomed) ScopeOff(); else ScopeOn(); } } } However, you don't want a boring old scope button thingy, do you? No? Well then, hang about. I'm going to show you how to get it to do something intresting... ;-) First, we strip out as much crap as possible.. function ScopeOn() { } function ScopeOff() { } simulated function ScopeToggle() { if (bHasScope) { if (bZoomed) ScopeOff(); else ScopeOn(); } } Right, that's gotten rid of everything that the original scope needs. (Note, this'll mean you can no longer use a scope, so make something decent to replace it...) Now, to make it do something cool. Hmm... ideas ideas ideas... Well, I suppose summoning a Plasma Bolt will have to do. I can't think of anything better. function ScopeOn() { Spawn(class'PlasmaBolt',Pawn(Owner),,Pawn(Owner).Location,Pawn(Owner).ViewRotation); } function ScopeOff() { Spawn(class'PlasmaBolt',Pawn(Owner),,Pawn(Owner).Location,Pawn(Owner).ViewRotation); } simulated function ScopeToggle() { if (bHasScope) { if (bZoomed) ScopeOff(); else ScopeOn(); } } The Pawn(Owner) parts are being used to get the location and rotation to fire the projectile at. Also, this can be used to modify the owner of a weapon in several other 'interesting' ways... Now, if you have a weapon with a scope on it, and this code in it's source, the scope will, instead of zooming in, spit out plasma bolts. Written by [A]llan. Obtaining player's IP address # PlayerIP = Player.GetPlayerNetworkAddress(); PlayerIP=left(PlayerIP,instr(PlayerIP,\":\")); The first line gets your IP and port (e.g. 213.170.168.2:4000, where 213.170.168.2 is a IP and 4000 is a port) and the second line filters port leaving only an IP address. Recognising maps # if (Level.NetMode != NM_Standalone) { switch LevelString { case \"DXMP_CMD.LevelInfo0\": // Actions only for DXMP_CMD break; case \"DXMP_Area51Bunker.LevelInfo0\": // Actions only for DXMP_Area51Bunker break; } } Recognising custom parameters # If you're planning to make functions of your mutator recognise user typed string, like, for example, user ID on the server , that's how you can do it: function Mutate (String S, PlayerPawn Player) { local string usrstr; // The following code will obtain everything user // typed after command \"mutate typed\". If you // typed \"mutate typed blah\", it should return \"blah\" // in a client message if (mid(S, 0, 5) ~= \"typed \") { usrstr = mid(S, 5); Player.ClientMessage(\"You typed\"@usrstr); } Super.Mutate(S,Player); } Switching teams # The essence of MMSwitcher, the code of switching player's team without killing him or her and with updating his or her user.ini. Team IDs: 0 - UNATCO 1 - NSF local pawn victim; Level.Game.ChangeTeam(victim,0); // set to needed team PlayerPawn(victim).ClientChangeTeam(0); // set to needed team Spawning # That's how we can find a suitable for spawning spawn point (thanks to Nobody for the code): local navigationpoint navpoint; navpoint=Level.Game.FindPlayerStart(victim,0); // Move victim to it victim.setLocation(navpoint.location); Managing augmentations # If you want to delete all augs of a player and to add a specific one, that's how you can do it: local augmentation aug; DeusExPlayer(Owner).AugmentationSystem.ResetAugmentations(); aug = DeusExPlayer(Other).AugmentationSystem.Spawn(class'DeusEx.AugLight', DeusExPlayer(Other).AugmentationSystem); DeusExPlayer(Other).AugmentationSystem.FirstAug = aug; DeusExPlayer(Other).AugmentationSystem.GivePlayerAugmentation(class'DeusEx.AugLight') Written by Daedalus and Alex. Listed here are a few DeusEx type-fonts for use with ScriptedTextures and for making window text. Engine # Engine.BigFont Engine.LargeFont Engine.MedFont Engine.SmallFont DeusExUI # DeusExUI.FontComputer8x20_A DeusExUI.FontComputer8x20_B DeusExUI.FontComputer8x20_C DeusExUI.FontConversation DeusExUI.FontConversationBold DeusExUI.FontConversationLarge DeusExUI.FontConversationLargeBold DeusExUI.FontFixedWidthLocation DeusExUI.FontFixedWidthSmall DeusExUI.FontFixedWidthSmall_DS DeusExUI.FontHUDWingDings DeusExUI.FontLocation DeusExUI.FontMenuExtraLarge DeusExUI.FontMenuHeaders DeusExUI.FontMenuHeaders_DS DeusExUI.FontMenuSmall DeusExUI.FontMenuSmall_DS DeusExUI.FontMenuTitle DeusExUI.FontMenuSansSerif_8 DeusExUI.FontMenuSansSerif_8_Bold DeusExUI.FontTiny DeusExUI.FontSpinningDX DeusExUI.FontTitleLarge DeusExUI.FontMenuHeaders_DS If I find more, I'll post em :-) Written by [A]llan. Training Guns # The idea of so-called \"training guns\" seems to be flying around a lot lately among clans (perhaps because of the rift between skilled players, and average players?), and some strange solutions have been put forward. In this, I will show you the code needed to figure out what damage has been done to the player hit, as well as where it was done. This code is for classes branching from WeaponRifle: function ProcessTraceHit(Actor Other, Vector HitLocation, Vector HitNormal, Vector X, Vector Y, Vector Z) { local int MPHitLoc; // used to reference where we last hit. local float Multuplier; // stuff for superclass code (Code from a previous classes version of the code) // COPIED FROM DeusExWeapon.uc, so we can see the damage modification amount. // AugCombat increases our damage if hand to hand Multuplier = 1.0; // skill also affects our damage // GetWeaponSkill returns 0.0 to -0.7 (max skill/aug) Multuplier += -2.0 * GetWeaponSkill(); // END OF COPIED CODE Super.ProcessTraceHit(Other,Hitlocation,HitNormal,X,Y,Z); // Call all previous version of the code. if (DeusExPlayer(Other)!=None) { MPHitLoc = DeusExPlayer(Other).GetMPHitLocation(HitLocation); switch(MPHitLoc) { case 0: break; case 1: DeusExPlayer(Owner).ClientMessage(\"|cFF8000BOOM! HEADSHOT!!! 2x Damage!\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*2*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*2$\"\"); break; case 2: DeusExPlayer(Owner).ClientMessage(\"Body Shot\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 3: DeusExPlayer(Owner).ClientMessage(\"Arm Shot(Left)\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 4: DeusExPlayer(Owner).ClientMessage(\"Arm Shot(Right)\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 5: DeusExPlayer(Owner).ClientMessage(\"Leg Shot(Left)\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 6: DeusExPlayer(Owner).ClientMessage(\"Leg Shot(Right)\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; default: break; } } } Right... some explanation to how this works: // AugCombat increases our damage if hand to hand Multuplier = 1.0; // skill also affects our damage // GetWeaponSkill returns 0.0 to -0.7 (max skill/aug) Multuplier += -2.0 * GetWeaponSkill(); This is code to modify the amount of damage finally dealt. The proper version of this, that is used for damage modification is called in the Super. whatever call. MPHitLoc = DeusExPlayer(Other).GetMPHitLocation(HitLocation); This code checks if the actor referenced as \"Other\" (this is what you end up hitting with the weapon shot in this case) is a DeusExPlayer, and if it is, runs the function GetMPHitLocation from the player that you hit. This then sets the variable MPHitLoc at a certain value (1 to 6, 0 for special damage types (i.e.: PoisonEffect (lingering poison from darts, TearGas, etc) and EMP, and NanoVirus, even though it has no effect on humans)), where it is then used in a \"Switch\". switch(MPHitLoc) This runs through all the posibilities that you code into this section when it is called. If the value in the brackets of the switch (in this case, MPHitLoc) matches any of the coded values, something happens, based on what you coded, e.g.: case 4: DeusExPlayer(Owner).ClientMessage(\"Arm Shot(Right)\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; If the value MPHitLoc was 4, you would see a message saying you hit the player in their right arm. Then, you would be told how much damage you dealt. The formula is (if you're not scoped) \u2014 HitDamage(25)*Skill(0 to 3.4)*mpNoScopeMult(0.35)=Damage(?) However, if this is not to be used on a class branching off of WeaponRifle, you must use this code: function ProcessTraceHit(Actor Other, Vector HitLocation, Vector HitNormal, Vector X, Vector Y, Vector Z) { local int MPHitLoc; // used to reference where we last hit. local float Multuplier; // stuff for superclass code (Code from a previous classes version of the code) // COPIED FROM DeusExWeapon.uc, so we can see the damage modification amount. // AugCombat increases our damage if hand to hand Multuplier = 1.0; // skill also affects our damage // GetWeaponSkill returns 0.0 to -0.7 (max skill/aug) Multuplier += -2.0 * GetWeaponSkill(); // END OF COPIED CODE Super.ProcessTraceHit(Other,Hitlocation,HitNormal,X,Y,Z); // Call all previous version of the code. if (DeusExPlayer(Other)!=None) { MPHitLoc = DeusExPlayer(Other).GetMPHitLocation(HitLocation); switch(MPHitLoc) { case 0: break; case 1: DeusExPlayer(Owner).ClientMessage(\"|cFF8000BOOM! HEADSHOT!!! 2x Damage!\"); DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*2$\"\"); break; case 2: DeusExPlayer(Owner).ClientMessage(\"Body Shot\"); DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 3: DeusExPlayer(Owner).ClientMessage(\"Arm Shot(Left)\"); DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 4: DeusExPlayer(Owner).ClientMessage(\"Arm Shot(Right)\"); DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 5: DeusExPlayer(Owner).ClientMessage(\"Leg Shot(Left)\"); DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 6: DeusExPlayer(Owner).ClientMessage(\"Leg Shot(Right)\"); DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; default: break; } } } The difference in this code is, that there is no reference to mpNoScopeMult, as WeaponRifle is the only class to use it. That should be all for training guns. Peace! Written by Allan. Anatomy of a Source File # //This page is formatted so that it will compile when pasted directly in to a UC file. //=========================================== //Commenting: Lines starting with \"//\" //or paragraphs surrounded by /* and */ are Commented, meaning ignored by compilers. //Can be used for making your own notes to remember what things do class MyObject extends AmmoCrate; /*MyObject is the class name for this object, used for referencing this object in other functions, such as summoning, or accessing its functions and variables from another object. Make it whatever you want, but make sure to follow the rules of: * Keep it short, to save time typing it later * Make sure its unique, the game will get confused if you have two objects called the same thing. * No special characters, letters and numbers only. The `extends Actor` means it takes its functions, variables and base coding from that object. Example, Actor is the bare basic object, no inherited stuff, but if you extend DeusExWeapon, it becomes a base for a new weapon, or Mutator makes it function as a mutator. For this example, DeusExDecoration is used, making it act as a decoration, such as ammo crates or lamps. This is important depending on what you WANT it to do, but more specifically, AmmoCrate, because we want the specific properties of the crate as well. Making the line read \"class MyObject extends DeusExDecoration config(MyMod);\" turns the Config flag on, and will create an .ini file that contains all the config variables set below, allowing altering at any time, and the word inside the brackets decides the name of the config file, usually best practice is keeping it the same as the mod file, but you can make it anything else, even if it already exists. For example, entering Mutators will make it add on to the Mutators.ini file that most hosts already have, which can be helpful to keep the system tidy.*/ var() string Str; var int i; var DeusExPlayer DXP; /*Variables are pieces of information you want the file to remember later, they can be modified and stored but will reset between each instance, meaning every time a new version of this object is created ingame, it'll use the defaults or nothing. The purposes of variables vary, in this case, we are storing a String, meaning a word or words, int meaning Integer, numbers, and a DeusExPlayer, meaning a human player class. There's various options for creating variables. Making var in to var() makes the value modifiable in the SDK, when placed in maps through its properties, while making it var config means the value becomes global between all instances of this object and can be modified through an .ini file, only if the config flag is set at the top of the file though. A line starting with function is.. well, a function, basically a container for the actual code. In this case, we're only modifying a base function from the master class of DeusExDecoration. Frob is called when a player examines the object. If we were creating a new function, we'd need to Call it somewhere to actually make it happen, which we will do here. The parts inside the brackets are Atributes, slightly more complicated to explain, but in this case, Actor Frobber is set by the player class, telling this object that the Frobber is themself, they're basically temporary variables used for specific things, like telling another class to store a variable to use in one specific function or to send one temporary variable to another function. */ function Frob(Actor Frobber, Inventory frobWith) { /*We wont use it here, but you can create temporary variables inside any function using the same format as var x x, but instead as local x x, these are variables ONLY used inside this function, and will be reset and forgotten every time the function is called.*/ //A Failsafe, this line basically says If the frobber variable is not blank, //and there IS a frobber, continue if(DeusExPlayer(Frobber) != None) { /*A Function call, this is a function we're going to create, and as you can see its calling str as its atribute, this is the variable we set at the top of the file.*/ DoAThing(str); /*//this basically says, add one to i, meaning every time this function is called, every time someone frobs, the variable gets one bigger. Altering integers has many options, they can be formatted in more complex formulas such as 1+6*2, meaning 1 plus six then times by two, but 1++ is the same as 1+1. And if you have a variable integer, they can be used instead of raw numbers, like here, we're using i instead.*/ i++ //Storing the player class in a variable so we can access it later. DXP = DeusExPlayer(Frobber); } } /*Notice functions and \"if statements\" like this are surrounded by the brackets, this is important to tell the compiler that whats happening here is contained here, everything inside the the brackets only is accessed if the function above is passed, so in this example, the if statement is only checked if Frob is called, and the DoAThing is only called if the IF statement checks*/ /*Our custom function, defining our new variable, THING, which is set to whatever the classes Str variable is, because in the Frob function, when this function is called, its telling this variable to be that variable.*/ function DoAThing(String thing) { /*BroadcastMessage is a default function stored in Actor, so anything we want to make will have access to this, it basically prints a message to everyone.*/ BroadcastMessage(DXP.PlayerReplicationInfo.PlayerName$\" has frobbed the object! It has been frobbed \"$i$\" times!\"); DXP.ClientMessage(thing); /*Now, whats happening here.... In Broadcast, the variable from the Player we stored, specifically its PlayerName is being accessed, which will print out that players name in to the broadcast in the game, and further in, the i variable is also being accessed. As we know, this variable increased each time its frobbed. And then, ClientMessage, this is a function inside the player class, so we're calling DXP's function there and ClientMessage then tells that player whatever the variable is in a private client message.*/ } /*DefaultProperties, the block that sets the variables, basically. Any variable you define here becomes the default permenantly in the game. So here is where you set what you want the Str variable to tell the game, and also you can define other properties such as Health, its Mesh, HitPoints, ItemName etc. Most are self explanatory. * Formatting-wise, each property has its own layout or format, for numbers, it'd be plain i=2 etc. * For Strings, they need to be in quote marks, like below. * For more advanced things and if you ever don't know, check other classes for examples, any decoration or item will have Mesh or Texture examples.*/ defaultproperties { ItemName=\"Frob Counting Crate\" Str=\"Keep frobbing me, get that number higher\" }","title":"Coding"},{"location":"coding/#intro","text":"First off, setting up files; For editing code , you can either use Notepad (windows) or the Linux equivelant (Gedit usually), it works. But the alternative is Notepad++ and the USCRIPT syntax highlighting, which colours in the code to make it easier to understand, and also will be helpful for a few other aspects. Download Notepad++ and Language File for Uscript (Right click and save-as to avoid it opening in-browser) For Windows, install as normal. For Linux, run the installer under Wine. Once done and loaded, in Language drop down box, click User defined language and click Import, and select the .xml file. Save that and now any .uc files should load with the syntax highlighting. Another alternative for Linux is the Geany IDE , which basically feels like a native N++ for Linux. It is also available on Windows. For compiling code , install the SDK through whatever means you want. I recommend either Deus Ex Editing Pack 2.2 or Deus Ex Unreal Ed updated Installer. Same install instructions as Notepad++. Editing Pack includes a collection of software used for editing, most unneeded, but still handy. In the end, you should end up with a file in Deus Ex/System/ called ucc.exe. If thats there, its installed, and thats all we need. If you want a good base to start off, open up the SDK/Unreal Ed, and in the Classes browser, just click Export All. This decompiles the entire game source code in to the Deus Ex/ folder. If you have code you already want to compile, first, think of a name for the package, example MyMod , but maybe something more clever. Create a folder in Deus Ex directory called MyMod (or whatever you want to call it). Inside THAT, create a folder called Classes . Inside THAT, put your .uc files. Open DeusEx.ini file, search for the list of EditPackages, and at the bottom of that list, add your own, E.g. EditPackages=MyMod This next part varies based on setups, but the end goal is to have the command line of your OS directed to Deus Ex/System. Windows 7+ : Shift-Right Click the background of the System folder with no files selected, and click Open Command Line Here. Windows XP and earlier : Run > cmd.exe, and enter cd followed by the path to your DX system, e.g. cd C:/Deus Ex/System/ Linux : Theres many ways, the XP way works using the Terminal, but in the Thunar file editor, theres an option in the drop down box to Open Terminal Here. Once you're there, enter ucc make It'll attempt to compile the list, if the .u files exist, it'll skip it, so it'll ignore all the default DX files, and attempt your custom file.","title":"Intro"},{"location":"coding/#useful-functions","text":"","title":"Useful Functions"},{"location":"coding/#replicated-exec-how-to-remotely-execute-commands-on-players","text":"replication { //Replicating the function so it executes on the client, not the server reliable if (Role == ROLE_Authority) ReplExec; } //Replicated Exec simulated function ReplExec(DeusExPlayer Player, string Command) { SetOwner(Player); Player.ConsoleCommand(Command); SetOwner(self); }","title":"Replicated Exec (How to remotely execute commands on players)"},{"location":"coding/#string-splitting","text":"//Split - based on Python, by Kaiser //Takes the Original string, and returns the string found between LeftCut and RightCut, optionally having offsets on either side //Examples: //str = <message>!blah!</message> - Split(str, \"<message>\", \"</message>\") returns !blah! //str = <message>!blah!</message> - Split(str, \"<message>\", \"</message>\", 1, -1) returns blah function string Split(string Original, string LeftCut, string RightCut, optional int OffsetLeft, optional int OffsetRight) { local int leftline, rightline; leftline = InStr(Original, LeftCut); leftline += Len(LeftCut); leftline += OffsetLeft; rightline = InStr(Original, RightCut); rightline += OffsetRight; return Mid(Original, leftline, rightline-leftline); }","title":"String Splitting"},{"location":"coding/#string-replacing","text":"//Repl - based on Unreal 2 function, backported by Kaiser //Takes the Original string, returns the string with every instance of Target replaced with ReplaceWith //Example: str = \"one two four\" - Repl(str, \"four\", \"three\") returns \"one two three\" function string Repl(string Original, string Target, string ReplaceWith) { local string TempMessage, TempLeft, TempRight, OutMessage, _TmpString; OutMessage=Original; while (instr(caps(outmessage), Target) != -1) { tempRight=(right(OutMessage, (len(OutMessage)-instr(caps(OutMessage), Target))-Len(Target))); tempLeft=(left(OutMessage, instr(caps(OutMessage), Target)) ); OutMessage=TempLeft$ReplaceWith$TempRight; } return OutMessage; }","title":"String Replacing"},{"location":"coding/#getting-some-player-variables","text":"# //Player variable functions //Gives you a readable name of whatever is inputted ~Kaiser function string GetReadableName(Actor A) { if(DeusExDecoration(A) != None) return DeusExDecoration(A).itemName; else if(Inventory(A) != None) return Inventory(A).itemName; else if(ScriptedPawn(A) != None) return ScriptedPawn(A).FamiliarName; else if(DeusExPlayer(A) != None) return DeusExPlayer(A).PlayerReplicationInfo.PlayerName; else if(DeusExMover(A) != None) return string(DeusExMover(A).Tag); else return \"\"; } //Quickly gives the name of the current pawn function string GetName(PlayerPawn P) { if(P != None) return P.PlayerReplicationInfo.PlayerName; else return \"[No player found]\"; } function string GetNameFromID(int id) { local PlayerPawn P; foreach AllActors(class'PlayerPawn', P) if(P.PlayerReplicationInfo.PlayerID == id) return P.PlayerReplicationInfo.PlayerName; } function string GetIDFromName(string playername) { local PlayerPawn P; foreach AllActors(class'PlayerPawn', P) if(instr(caps(P.PlayerReplicationInfo.PlayerName), caps(playername)) != -1) return P.PlayerReplicationInfo.PlayerID; } function int GetID(PlayerPawn P) { if(P != None) return P.PlayerReplicationInfo.PlayerID; else return -1; } function string GetIP(PlayerPawn P) { local string IP; if(P != None) { IP = P.GetPlayerNetworkAddress(); IP = Left(IP,InStr(IP,\":\")); return IP; } else return \"[No player found]\"; } function PlayerPawn GetPlayerFromID(int id) { local PlayerPawn P; foreach AllActors(class'PlayerPawn', P) if(P.PlayerReplicationInfo.PlayerID == id) return P; } function PlayerPawn GetPlayerFromName(string playername) { local PlayerPawn P; foreach AllActors(class'PlayerPawn', P) if(instr(caps(P.PlayerReplicationInfo.PlayerName), caps(playername)) != -1) return P; }","title":"Getting some player variables"},{"location":"coding/#datetime","text":"function string GetDate() { return level.day$\"/\"$level.month$\"/\"$level.year; } function string GetTime() { local string formattedmin; //We do this part here because of how int's are zeroed. //By default if we just take the level.minute as our time, //a time like \"11:09\" would show as \"11:9\", not so good, //this section inserts the 0 when needed. if(level.minute <= 9) { formattedmin = \"0\"$level.minute; } else { formattedmin = string(level.minute); } return level.hour$\":\"$formattedmin; }","title":"Date/time"},{"location":"coding/#laserscope-keys","text":"This hopes to teach a little about how to make your own cool functions out of the Ammo Switching, Scope, and Laser Sight functions. First off, identifying the functions that'll be needed to be changed to edit the functionality of these functions. First off: Scope. ScopeOn(); ScopeOff(); ScopeToggle(); and their codes are: function ScopeOn() { if (bHasScope && !bZoomed && (Owner != None) && Owner.IsA('DeusExPlayer')) { // Show the Scope View bZoomed = True; RefreshScopeDisplay(DeusExPlayer(Owner), False, bZoomed); } } function ScopeOff() { if (bHasScope && bZoomed && (Owner != None) && Owner.IsA('DeusExPlayer')) { bZoomed = False; // Hide the Scope View RefreshScopeDisplay(DeusExPlayer(Owner), False, bZoomed); //DeusExRootWindow(DeusExPlayer(Owner).rootWindow).scopeView.DeactivateView(); } } simulated function ScopeToggle() { if (IsInState('Idle')) { if (bHasScope && (Owner != None) && Owner.IsA('DeusExPlayer')) { if (bZoomed) ScopeOff(); else ScopeOn(); } } } However, you don't want a boring old scope button thingy, do you? No? Well then, hang about. I'm going to show you how to get it to do something intresting... ;-) First, we strip out as much crap as possible.. function ScopeOn() { } function ScopeOff() { } simulated function ScopeToggle() { if (bHasScope) { if (bZoomed) ScopeOff(); else ScopeOn(); } } Right, that's gotten rid of everything that the original scope needs. (Note, this'll mean you can no longer use a scope, so make something decent to replace it...) Now, to make it do something cool. Hmm... ideas ideas ideas... Well, I suppose summoning a Plasma Bolt will have to do. I can't think of anything better. function ScopeOn() { Spawn(class'PlasmaBolt',Pawn(Owner),,Pawn(Owner).Location,Pawn(Owner).ViewRotation); } function ScopeOff() { Spawn(class'PlasmaBolt',Pawn(Owner),,Pawn(Owner).Location,Pawn(Owner).ViewRotation); } simulated function ScopeToggle() { if (bHasScope) { if (bZoomed) ScopeOff(); else ScopeOn(); } } The Pawn(Owner) parts are being used to get the location and rotation to fire the projectile at. Also, this can be used to modify the owner of a weapon in several other 'interesting' ways... Now, if you have a weapon with a scope on it, and this code in it's source, the scope will, instead of zooming in, spit out plasma bolts. Written by [A]llan.","title":"Laser/Scope keys"},{"location":"coding/#obtaining-players-ip-address","text":"PlayerIP = Player.GetPlayerNetworkAddress(); PlayerIP=left(PlayerIP,instr(PlayerIP,\":\")); The first line gets your IP and port (e.g. 213.170.168.2:4000, where 213.170.168.2 is a IP and 4000 is a port) and the second line filters port leaving only an IP address.","title":"Obtaining player's IP address"},{"location":"coding/#recognising-maps","text":"if (Level.NetMode != NM_Standalone) { switch LevelString { case \"DXMP_CMD.LevelInfo0\": // Actions only for DXMP_CMD break; case \"DXMP_Area51Bunker.LevelInfo0\": // Actions only for DXMP_Area51Bunker break; } }","title":"Recognising maps"},{"location":"coding/#recognising-custom-parameters","text":"If you're planning to make functions of your mutator recognise user typed string, like, for example, user ID on the server , that's how you can do it: function Mutate (String S, PlayerPawn Player) { local string usrstr; // The following code will obtain everything user // typed after command \"mutate typed\". If you // typed \"mutate typed blah\", it should return \"blah\" // in a client message if (mid(S, 0, 5) ~= \"typed \") { usrstr = mid(S, 5); Player.ClientMessage(\"You typed\"@usrstr); } Super.Mutate(S,Player); }","title":"Recognising custom parameters"},{"location":"coding/#switching-teams","text":"The essence of MMSwitcher, the code of switching player's team without killing him or her and with updating his or her user.ini. Team IDs: 0 - UNATCO 1 - NSF local pawn victim; Level.Game.ChangeTeam(victim,0); // set to needed team PlayerPawn(victim).ClientChangeTeam(0); // set to needed team","title":"Switching teams"},{"location":"coding/#spawning","text":"That's how we can find a suitable for spawning spawn point (thanks to Nobody for the code): local navigationpoint navpoint; navpoint=Level.Game.FindPlayerStart(victim,0); // Move victim to it victim.setLocation(navpoint.location);","title":"Spawning"},{"location":"coding/#managing-augmentations","text":"If you want to delete all augs of a player and to add a specific one, that's how you can do it: local augmentation aug; DeusExPlayer(Owner).AugmentationSystem.ResetAugmentations(); aug = DeusExPlayer(Other).AugmentationSystem.Spawn(class'DeusEx.AugLight', DeusExPlayer(Other).AugmentationSystem); DeusExPlayer(Other).AugmentationSystem.FirstAug = aug; DeusExPlayer(Other).AugmentationSystem.GivePlayerAugmentation(class'DeusEx.AugLight') Written by Daedalus and Alex. Listed here are a few DeusEx type-fonts for use with ScriptedTextures and for making window text.","title":"Managing augmentations"},{"location":"coding/#engine","text":"Engine.BigFont Engine.LargeFont Engine.MedFont Engine.SmallFont","title":"Engine"},{"location":"coding/#deusexui","text":"DeusExUI.FontComputer8x20_A DeusExUI.FontComputer8x20_B DeusExUI.FontComputer8x20_C DeusExUI.FontConversation DeusExUI.FontConversationBold DeusExUI.FontConversationLarge DeusExUI.FontConversationLargeBold DeusExUI.FontFixedWidthLocation DeusExUI.FontFixedWidthSmall DeusExUI.FontFixedWidthSmall_DS DeusExUI.FontHUDWingDings DeusExUI.FontLocation DeusExUI.FontMenuExtraLarge DeusExUI.FontMenuHeaders DeusExUI.FontMenuHeaders_DS DeusExUI.FontMenuSmall DeusExUI.FontMenuSmall_DS DeusExUI.FontMenuTitle DeusExUI.FontMenuSansSerif_8 DeusExUI.FontMenuSansSerif_8_Bold DeusExUI.FontTiny DeusExUI.FontSpinningDX DeusExUI.FontTitleLarge DeusExUI.FontMenuHeaders_DS If I find more, I'll post em :-) Written by [A]llan.","title":"DeusExUI"},{"location":"coding/#training-guns","text":"The idea of so-called \"training guns\" seems to be flying around a lot lately among clans (perhaps because of the rift between skilled players, and average players?), and some strange solutions have been put forward. In this, I will show you the code needed to figure out what damage has been done to the player hit, as well as where it was done. This code is for classes branching from WeaponRifle: function ProcessTraceHit(Actor Other, Vector HitLocation, Vector HitNormal, Vector X, Vector Y, Vector Z) { local int MPHitLoc; // used to reference where we last hit. local float Multuplier; // stuff for superclass code (Code from a previous classes version of the code) // COPIED FROM DeusExWeapon.uc, so we can see the damage modification amount. // AugCombat increases our damage if hand to hand Multuplier = 1.0; // skill also affects our damage // GetWeaponSkill returns 0.0 to -0.7 (max skill/aug) Multuplier += -2.0 * GetWeaponSkill(); // END OF COPIED CODE Super.ProcessTraceHit(Other,Hitlocation,HitNormal,X,Y,Z); // Call all previous version of the code. if (DeusExPlayer(Other)!=None) { MPHitLoc = DeusExPlayer(Other).GetMPHitLocation(HitLocation); switch(MPHitLoc) { case 0: break; case 1: DeusExPlayer(Owner).ClientMessage(\"|cFF8000BOOM! HEADSHOT!!! 2x Damage!\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*2*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*2$\"\"); break; case 2: DeusExPlayer(Owner).ClientMessage(\"Body Shot\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 3: DeusExPlayer(Owner).ClientMessage(\"Arm Shot(Left)\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 4: DeusExPlayer(Owner).ClientMessage(\"Arm Shot(Right)\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 5: DeusExPlayer(Owner).ClientMessage(\"Leg Shot(Left)\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 6: DeusExPlayer(Owner).ClientMessage(\"Leg Shot(Right)\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; default: break; } } } Right... some explanation to how this works: // AugCombat increases our damage if hand to hand Multuplier = 1.0; // skill also affects our damage // GetWeaponSkill returns 0.0 to -0.7 (max skill/aug) Multuplier += -2.0 * GetWeaponSkill(); This is code to modify the amount of damage finally dealt. The proper version of this, that is used for damage modification is called in the Super. whatever call. MPHitLoc = DeusExPlayer(Other).GetMPHitLocation(HitLocation); This code checks if the actor referenced as \"Other\" (this is what you end up hitting with the weapon shot in this case) is a DeusExPlayer, and if it is, runs the function GetMPHitLocation from the player that you hit. This then sets the variable MPHitLoc at a certain value (1 to 6, 0 for special damage types (i.e.: PoisonEffect (lingering poison from darts, TearGas, etc) and EMP, and NanoVirus, even though it has no effect on humans)), where it is then used in a \"Switch\". switch(MPHitLoc) This runs through all the posibilities that you code into this section when it is called. If the value in the brackets of the switch (in this case, MPHitLoc) matches any of the coded values, something happens, based on what you coded, e.g.: case 4: DeusExPlayer(Owner).ClientMessage(\"Arm Shot(Right)\"); If(!bZoomed) DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*mpNoScopeMult$\"\"); else DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; If the value MPHitLoc was 4, you would see a message saying you hit the player in their right arm. Then, you would be told how much damage you dealt. The formula is (if you're not scoped) \u2014 HitDamage(25)*Skill(0 to 3.4)*mpNoScopeMult(0.35)=Damage(?) However, if this is not to be used on a class branching off of WeaponRifle, you must use this code: function ProcessTraceHit(Actor Other, Vector HitLocation, Vector HitNormal, Vector X, Vector Y, Vector Z) { local int MPHitLoc; // used to reference where we last hit. local float Multuplier; // stuff for superclass code (Code from a previous classes version of the code) // COPIED FROM DeusExWeapon.uc, so we can see the damage modification amount. // AugCombat increases our damage if hand to hand Multuplier = 1.0; // skill also affects our damage // GetWeaponSkill returns 0.0 to -0.7 (max skill/aug) Multuplier += -2.0 * GetWeaponSkill(); // END OF COPIED CODE Super.ProcessTraceHit(Other,Hitlocation,HitNormal,X,Y,Z); // Call all previous version of the code. if (DeusExPlayer(Other)!=None) { MPHitLoc = DeusExPlayer(Other).GetMPHitLocation(HitLocation); switch(MPHitLoc) { case 0: break; case 1: DeusExPlayer(Owner).ClientMessage(\"|cFF8000BOOM! HEADSHOT!!! 2x Damage!\"); DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier*2$\"\"); break; case 2: DeusExPlayer(Owner).ClientMessage(\"Body Shot\"); DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 3: DeusExPlayer(Owner).ClientMessage(\"Arm Shot(Left)\"); DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 4: DeusExPlayer(Owner).ClientMessage(\"Arm Shot(Right)\"); DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 5: DeusExPlayer(Owner).ClientMessage(\"Leg Shot(Left)\"); DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; case 6: DeusExPlayer(Owner).ClientMessage(\"Leg Shot(Right)\"); DeusExPlayer(Owner).ClientMessage(\"Damage=\"$HitDamage*Multuplier$\"\"); break; default: break; } } } The difference in this code is, that there is no reference to mpNoScopeMult, as WeaponRifle is the only class to use it. That should be all for training guns. Peace! Written by Allan.","title":"Training Guns"},{"location":"coding/#anatomy-of-a-source-file","text":"//This page is formatted so that it will compile when pasted directly in to a UC file. //=========================================== //Commenting: Lines starting with \"//\" //or paragraphs surrounded by /* and */ are Commented, meaning ignored by compilers. //Can be used for making your own notes to remember what things do class MyObject extends AmmoCrate; /*MyObject is the class name for this object, used for referencing this object in other functions, such as summoning, or accessing its functions and variables from another object. Make it whatever you want, but make sure to follow the rules of: * Keep it short, to save time typing it later * Make sure its unique, the game will get confused if you have two objects called the same thing. * No special characters, letters and numbers only. The `extends Actor` means it takes its functions, variables and base coding from that object. Example, Actor is the bare basic object, no inherited stuff, but if you extend DeusExWeapon, it becomes a base for a new weapon, or Mutator makes it function as a mutator. For this example, DeusExDecoration is used, making it act as a decoration, such as ammo crates or lamps. This is important depending on what you WANT it to do, but more specifically, AmmoCrate, because we want the specific properties of the crate as well. Making the line read \"class MyObject extends DeusExDecoration config(MyMod);\" turns the Config flag on, and will create an .ini file that contains all the config variables set below, allowing altering at any time, and the word inside the brackets decides the name of the config file, usually best practice is keeping it the same as the mod file, but you can make it anything else, even if it already exists. For example, entering Mutators will make it add on to the Mutators.ini file that most hosts already have, which can be helpful to keep the system tidy.*/ var() string Str; var int i; var DeusExPlayer DXP; /*Variables are pieces of information you want the file to remember later, they can be modified and stored but will reset between each instance, meaning every time a new version of this object is created ingame, it'll use the defaults or nothing. The purposes of variables vary, in this case, we are storing a String, meaning a word or words, int meaning Integer, numbers, and a DeusExPlayer, meaning a human player class. There's various options for creating variables. Making var in to var() makes the value modifiable in the SDK, when placed in maps through its properties, while making it var config means the value becomes global between all instances of this object and can be modified through an .ini file, only if the config flag is set at the top of the file though. A line starting with function is.. well, a function, basically a container for the actual code. In this case, we're only modifying a base function from the master class of DeusExDecoration. Frob is called when a player examines the object. If we were creating a new function, we'd need to Call it somewhere to actually make it happen, which we will do here. The parts inside the brackets are Atributes, slightly more complicated to explain, but in this case, Actor Frobber is set by the player class, telling this object that the Frobber is themself, they're basically temporary variables used for specific things, like telling another class to store a variable to use in one specific function or to send one temporary variable to another function. */ function Frob(Actor Frobber, Inventory frobWith) { /*We wont use it here, but you can create temporary variables inside any function using the same format as var x x, but instead as local x x, these are variables ONLY used inside this function, and will be reset and forgotten every time the function is called.*/ //A Failsafe, this line basically says If the frobber variable is not blank, //and there IS a frobber, continue if(DeusExPlayer(Frobber) != None) { /*A Function call, this is a function we're going to create, and as you can see its calling str as its atribute, this is the variable we set at the top of the file.*/ DoAThing(str); /*//this basically says, add one to i, meaning every time this function is called, every time someone frobs, the variable gets one bigger. Altering integers has many options, they can be formatted in more complex formulas such as 1+6*2, meaning 1 plus six then times by two, but 1++ is the same as 1+1. And if you have a variable integer, they can be used instead of raw numbers, like here, we're using i instead.*/ i++ //Storing the player class in a variable so we can access it later. DXP = DeusExPlayer(Frobber); } } /*Notice functions and \"if statements\" like this are surrounded by the brackets, this is important to tell the compiler that whats happening here is contained here, everything inside the the brackets only is accessed if the function above is passed, so in this example, the if statement is only checked if Frob is called, and the DoAThing is only called if the IF statement checks*/ /*Our custom function, defining our new variable, THING, which is set to whatever the classes Str variable is, because in the Frob function, when this function is called, its telling this variable to be that variable.*/ function DoAThing(String thing) { /*BroadcastMessage is a default function stored in Actor, so anything we want to make will have access to this, it basically prints a message to everyone.*/ BroadcastMessage(DXP.PlayerReplicationInfo.PlayerName$\" has frobbed the object! It has been frobbed \"$i$\" times!\"); DXP.ClientMessage(thing); /*Now, whats happening here.... In Broadcast, the variable from the Player we stored, specifically its PlayerName is being accessed, which will print out that players name in to the broadcast in the game, and further in, the i variable is also being accessed. As we know, this variable increased each time its frobbed. And then, ClientMessage, this is a function inside the player class, so we're calling DXP's function there and ClientMessage then tells that player whatever the variable is in a private client message.*/ } /*DefaultProperties, the block that sets the variables, basically. Any variable you define here becomes the default permenantly in the game. So here is where you set what you want the Str variable to tell the game, and also you can define other properties such as Health, its Mesh, HitPoints, ItemName etc. Most are self explanatory. * Formatting-wise, each property has its own layout or format, for numbers, it'd be plain i=2 etc. * For Strings, they need to be in quote marks, like below. * For more advanced things and if you ever don't know, check other classes for examples, any decoration or item will have Mesh or Texture examples.*/ defaultproperties { ItemName=\"Frob Counting Crate\" Str=\"Keep frobbing me, get that number higher\" }","title":"Anatomy of a Source File"},{"location":"community/","text":"Discords # General # Deus Ex HQ: https://discord.gg/KUA8acb Frozen Hell: https://discord.gg/syg8q8Y Deus Ex Reddit's Server: https://discord.gg/FTCtTPw Off Topic Productions: https://discord.gg/ZxSpWHK Mods # Markieland/Vanilla Matters: https://discord.gg/GDcXCCw Deus Ex Revision: https://discord.gg/5pNtjXh GMDX: https://discord.gg/FfqNWSj Remakes # Deus Ex Reborn (Unreal Engine 2 Remake): https://discord.gg/xVWCUpj Deus Ex Machina (Unreal Engine 4 Remake): https://discord.gg/DDgWP8k Another Deus Ex UE4 Project: https://discord.gg/XhkDanf Terminology # Specific acronyms of Deus Ex community # 0aug, ATDM, BTDM, DXSG, DXAG \u2014 see popular gametypes . 2027 - Project: 2027 Augs = augmentations CRD = Caran D'Ache (mod) DX = DE = Deus Ex DX:R = Deus Ex Reborn (mod) DXAG = Deus Ex Arx Genus (mod) DXCBP = Deus Ex Community Based Patch (same as DXMTL) DXMP = Deus Ex Multiplayer DXMS = Deus Ex Mapping Society DXMTL = Deus Ex Mutator Loader (a widely used patch for the servers, which improves security and fixes many bugs on the game). DXPZ = Deus Ex PartyZone (mod) DXSG = Deus Ex Stargate (mod) FL = FunLine GOTY = Game Of The Year GPF = General Protection Fault GS = GameSpy HDTP = High Definition Texture Pack IW = Invisible War KB = Knowledge Base MM = MiniMachina (a set of mods and mutators), also Mainman's mod , Minty's mod Mod = modification MS = masterserver MS3D = Milkshape 3D ( a 3D modelling program ) SDK = Software Development Kit (a set of programs made by developer for further development of a specific program/game by 3d party). Sshot = screenshot UED = Unreal Editor Internet/gaming slang # afk = away from keyboard brb = be right back bs = bullshit cya = cu = see you (could be \"cover you ass\", by rarely used) ffs = for f*cks sake ftl = for the loss ftw = for the win fyi = for your information gf = good fight gg = good game (usually said in the end of the match or to emphasize one's sarcasm) gj = good job gl = good luck gr8 = great gs/ns = good/nice shot (could be just \"shot\") h8 = hate idk = I don't know IIRC = if I remember correctly IMO/IMHO/IMNSHO/IMAO - In my (humble / honest / not so humble / arrogant) opinion irl = in real life j/k = jk = just kidding (or \"jackass\") lol = laughing out loud m8 = mate np = no problem nvm = nevermind rofl = rolling on floor laughing stfu = shut the fuck up t = ty = thx = tnx = thank you/thanks ttyl = talk to you later wtf = what the fuck wth = what the hell Most of acronyms used during online gaming are common for all the communities and are available in the article called \u201cList of Internet slang phrases\u201d on Wikipedia. Please note that using AOL speak or net speak (\"dats wen u talk liek dat LOL\") gives you away as a newbie in the Internet or just immature. Editor's Note: The following is an archive of old KB pages which may no longer be relevant. Clans # To put the question simply, a clan is a group/society of people who fight together. The clan may have different beliefs of how to fight also. Almost any game has a society of clans, whether supported by the game or not. Some games (unlike Deus Ex) have features such as \"clan search\" and \"quick join clans\". Unlike in other games, Deus Ex clans sometimes also make maps and mods, besides fighting. A clan gives you an ability to participate in planned games such as trainings and clanwars, learn some in-game tricks and significantly improve. You may see the list of active clans on our \" Links \" page. Clanwars # A clanwar is a planned battle between clans. Planned games are nothing like normal games, because usually you play against a solid team of experienced players who also actively cooperate, and you won't be able to get \"easy kills\" of newbie players anymore. Team work is an important aspect of any clanwar. A weaker clan can always defeat the stronger one if there is a strong teamwork aspect in it. Usually clanwars are declared on the forums. To organise a clanwar you have to: Set up date and time and make sure all the players of your clan can make it Prepare \"backup\" players, in case someone doesn't show up in time Find a decent server which could handle a desired amount of players Find an administrator who would set up a password on it Clanwars are not easy to organise, yet they're fun to play. The more players participate, the harder it is to organise the war, and the enjoyable the clanwar is. Keep in mind that it's considered a bad form to insult members of opponent clan after the war ended. There is a place for sportsmanship, not for immature behaviour. The results vary \u2014 don't take them close to your heart. Sometimes a clan loses to another because of a server location (see \" factors worsening your gameplay \" article), or because the server hoster plays. When a server hoster plays on his or her server, the server will give him or her a big advantage and increase ping disadvantage to other players. Ideal clanwar Passworded server. At least 4 players in each team. 15+ minutes per map. Each side should be able to pick a map. Even teams. No flaming, rant; friendly atmosphere. The computer used for hosting isn't used for anything else. The hoster doesn't play. A neutral administrator, who watches the game, not plays. Here's a short list of commands which may be useful for watching: admin invisible true \u2014 enables invisibility ( admin invisible false disables it) admin ghost \u2014 enables ghost mode ( walk disables ghost mode) admin cheatview human \u2014 when enabled allows to watch other players, from 1st and 3d person views behindview 0 \u2014 toggles 1st person view behindview 1 \u2014 toggles 3d person view demorec random-file-name \u2014 to start a demo recording . It's risky when a player records a demorec by him- or herself because recording may decrease FPS and result in GPF (game crash). Therefore recordings of wars are usually done by such \"neutral administrators\". Links # Editors Note: This list is old. *OLD*. Any important links will eventually get moved to the updated list. It's not guaranteed that the list contains all the links about Deus Ex and also it may have some mistakes. PlanetDeusEx.com \u2014 official Deus Ex site in GameSpy Planet Network. The site was archived in 2005, which means no news are being posted anymore, but you can still access the rest of pages. There is also a very active forum mainly about the singleplayer. Deus Ex Gaming \u2014 the site about Deus Ex which belongs to Edge . It contains a lot of information about the singleplayer and the forum . Deus Ex Machina \u2014 the site of TTLG network. It contains a lot of interviews, news and a forum . Official # Eidos Interactive \u2014 the main publisher. The site doesn't contain much useful information, except for a forum . Aspyr media \u2014 Macintosh publisher. WestLake Interactive \u2014 the developer of Mac version of Deus Ex. Loki games \u2014 the developer of Linux version of Deus Ex (the project wasn't finished). Epic Games \u2014 Unreal Engine developers. Unreal Technology \u2014 the official Unreal Engine site. Portals # Deus Ex on imdb.com (see also: trivia , forum ). Deus Ex on Wikipedia ( see also : Deus Ex 2 ). Deus Ex on ModDB ( see also : Zodiac , 2027 , TNM , Reborn (UT'04 section) and the rest ) . Deus Ex on MobyGames ( see also : game credits , Deus Ex 2 , Ion Storm ). Deus Ex on Visual Walkthroughs \u2014 Deus E\u0445 visual walktrough. DXMP on frappr.com \u2014 the map with locations of DXMP players. Other languages # DeusExZone.info \u2014 German community. The site contains huge downloads archive and an active forum. DeusEx.pl \u2014 Polish community. Multiplayer # [A]lpha Deus Ex Mappers Society Community Improvement Zone \u2014 the site for multiplayer community. Wasn't updated for years. Casper's Deus Ex Place Host on multiple masterservers Modifications # Deus Ex MTL \u2014 the development of the DXMTL anticheat modification. Caran D'Ache \u2014 another anticheat modification (works with DXMTL) Zora's World \u2014 the site of Nephthys mod developer. The mod protects the servers and enables web-download for players. Hejhujka's Deus Ex mods The Sheep's site Smuggler's Deus Ex mods Blade's Deus Ex World Helio Waltons maps Geist's maps Kili's maps and mods Mantra's maps Party Zone Sly's DXMP Jaeger's room [N]Phase Templar Knight Syndicate Clans # All Deus Ex clans , from the beginning. In the list below we add only those clans, which have existed for over one year: [A] Alpha [3] [tBot] [III] Triad [CG] Common Ground {DXC} Deus Ex Council [EL] Elites & Legends [T]ranscend [Z] [MTX] Matrix [FGS] F*cking German Snipers Hunter Killers [REN] Renegades [N]ostalgia Inactive clans # [GODZ] [V]engeance Notable clans which started from Deus Ex, but later moved to other games # |GHOST| [DCSB] Dead Cows Strike Back Modifications (singleplayer only) Released Burden Of 80 Proof Redsun 2020 Hotel Carone The Cassandra Project \u2014 only the first part was released and the further development was officially stopped. Counterfeit \u2014 only the beta version was released and the further development was stopped. Hejhujka \u2014 minor add-ons as for singleplayer, as for multiplayer. World Of Kevo-sama \u2014 the site of Der Zeit Mann and Unknown Motives creator. Tristan 'Jherax' Blease \u2014 the site of Double Cross mod creator. The mod has won PlanetDeusEx Fan Mission Contest. Unleashed In development Project 2027 + Resurrection (see also: 2027 LJ community (Russian only)) . The Nameless Mod \u2014 the mod developed by Offtopic Productions . Deus Ex: Man in Black UNATCO Born Chronos \u2014 only the first mission was released. No information on current status. HDTP \u2014 \"High Definition Texture Pack\". Deus Ex: Reborn \u2014 conversion of Deus Ex to Unreal Tournament 2004 engine. Power and Love Stopped Klystron's Project Ghost In The Machine (see also: GITM World ) Deus Ex 2 Graphics by John P \u2014 texture packs. DX2 Rebirth File archives download.dxalpha.co.uk \u2014 the biggest file archive presently, with files for both Deus Ex and Deus Ex 2. dxmp.criminalsrpg.net \u2014 the file archive containing a lot of downloads for both singleplayer and multiplayer modes of Deus Ex 1 (author \u2014 moop, hoster \u2014 [A]lex ) . gravity-world.com \u2014 most multiplayer oriented archive (note that you have to register first) . deus-ex.net File Planet \u2014 the biggest file archive, ran by GameSpy (the link leads to \"Deus Ex series\" section; you need to be registered and logged in to download; registration is free) . File Shack File Front (see also: Deus Ex 2 ) . De2Files.com Programs Enhanced OpenGL renderer MilkShape 3D \u2014 a low poly modeling tool, great for the basics of DX modeling 3D Studio MAX - a high poly modeling tool, good for advanced stages of modeling in Deus Ex WOTGreal \u2014 the editing tool for UnrealEngine + the powerful resource extractor ModPlug \u2014 the program for editing and creating music in tracker format. Deus Ex Extractor \u2014 another powerful resource extractor, sharpened for Deus Ex (it can export even animations!) Dragon Unpacker \u2014 the sound/music extractor for Deus Ex 2. Nova Software Extractor \u2014 the sound/music extractor for Deus Ex 2. Winamp UMX plugin Deus Ex editing DX editing \u2014 the site about Deus Ex editing. Contains only a few articles, but an active forum . Tack's tutorials \u2014 the best site about Deus Ex editing by Steve Tack, Zodiac author. Constructor Unreal Wiki \u2014 the biggest Unreal Editing resource. Not much information about Deus Ex editing though. Endemia \u2014 an archive of textures and models. Prefab Lab \u2014 an archive of prefabs. The site is oriented to Unreal. unreal.gamedesign.net Lode's Unreal Wolf's Unreal Miscellaneous Deus Ex Continuity Bible Denton's Databank \u2014 the site with loads of information about singleplayer. SF Sounds \u2014 Steve Foxon's site, a musician of Zodiac and Redsun singleplayer mods. Deus-Ex.net Deus Ex Network Deus Ex Online Deus Ex Portal Redundant Weirdness Theos Ek Local Ditch Gaming Imporium Jimmycracker's Deus Ex Site Deus Ex Information Page nuwen.net \u2014 Deus Ex ChrisTheCynic Matthew's Deus Ex Page Snakey's site Sunglasses At Night Face Designs Invisible Online Deus Ex Tweak Guide Developers Witchboy's Cauldron \u2014 the homepage of Harvey \"witchboy\" Smith, the head designer of Deus Ex 1 and the manager of Deus Ex 2. Sheldon Pacotti \u2014 the page of Sheldon Pacotti, the conversation writer of Deus Ex 1. Frost Giant \u2014 Austin Grossman's homepage. He was doing additional conversations for Deus Ex. 7 Crows \u2014 Chris Todd, Deus Ex 1 text writer. The Tom Hall Press \u2014 Tom Hall's homepage. He was a voice actor for Howard Smith and Walton Simons. An Upset Spector named Warren \u2014 the page created by Warren Spector's fan. Stamford Hill \u2014 the page created by Reeves Gabrels ( American guitarist, writer of Deus Ex club tracks ) fan. On LiveJournal.com DeusExCommunity Project 2027 Reality FEMA \u2014 Federal Emergency Management Agency. World Trade Organization Castle Clinton NetHack \u2014 this game was mentioned by Austin Grossman in some of e-mails in Deus Ex. History (the links lead to web.archive.org ) DeusEx.com \u2014 the official flash site of the game. See also DXInvisibleWar.com , DeusEx2.com , TheConspiracy/ . Ion Storm \u2014 the website of Ion Storm, the developer of Deus Ex games. The company was ceased in 2005. Reeves Gabrels \u2014 the site of Reeves Gabrels, the creator club music in Deus Ex. unatco.com \u2014 the site had been created by the team of developers, but it was closed after 9/11. Deus Ex Center Unknown deus-ex.tanabi.org mj12.com bobpage.net contrast.150m.com/unatco Sources On planetdeusex.com forum On dxalpha.com forum Imperial's list of clans tda.mikwae.net/links.php home.kc.rr.com/bobfahey dusterstadl.de","title":"Community"},{"location":"community/#discords","text":"","title":"Discords"},{"location":"community/#general","text":"Deus Ex HQ: https://discord.gg/KUA8acb Frozen Hell: https://discord.gg/syg8q8Y Deus Ex Reddit's Server: https://discord.gg/FTCtTPw Off Topic Productions: https://discord.gg/ZxSpWHK","title":"General"},{"location":"community/#mods","text":"Markieland/Vanilla Matters: https://discord.gg/GDcXCCw Deus Ex Revision: https://discord.gg/5pNtjXh GMDX: https://discord.gg/FfqNWSj","title":"Mods"},{"location":"community/#remakes","text":"Deus Ex Reborn (Unreal Engine 2 Remake): https://discord.gg/xVWCUpj Deus Ex Machina (Unreal Engine 4 Remake): https://discord.gg/DDgWP8k Another Deus Ex UE4 Project: https://discord.gg/XhkDanf","title":"Remakes"},{"location":"community/#terminology","text":"","title":"Terminology"},{"location":"community/#specific-acronyms-of-deus-ex-community","text":"0aug, ATDM, BTDM, DXSG, DXAG \u2014 see popular gametypes . 2027 - Project: 2027 Augs = augmentations CRD = Caran D'Ache (mod) DX = DE = Deus Ex DX:R = Deus Ex Reborn (mod) DXAG = Deus Ex Arx Genus (mod) DXCBP = Deus Ex Community Based Patch (same as DXMTL) DXMP = Deus Ex Multiplayer DXMS = Deus Ex Mapping Society DXMTL = Deus Ex Mutator Loader (a widely used patch for the servers, which improves security and fixes many bugs on the game). DXPZ = Deus Ex PartyZone (mod) DXSG = Deus Ex Stargate (mod) FL = FunLine GOTY = Game Of The Year GPF = General Protection Fault GS = GameSpy HDTP = High Definition Texture Pack IW = Invisible War KB = Knowledge Base MM = MiniMachina (a set of mods and mutators), also Mainman's mod , Minty's mod Mod = modification MS = masterserver MS3D = Milkshape 3D ( a 3D modelling program ) SDK = Software Development Kit (a set of programs made by developer for further development of a specific program/game by 3d party). Sshot = screenshot UED = Unreal Editor","title":"Specific acronyms of Deus Ex community"},{"location":"community/#internetgaming-slang","text":"afk = away from keyboard brb = be right back bs = bullshit cya = cu = see you (could be \"cover you ass\", by rarely used) ffs = for f*cks sake ftl = for the loss ftw = for the win fyi = for your information gf = good fight gg = good game (usually said in the end of the match or to emphasize one's sarcasm) gj = good job gl = good luck gr8 = great gs/ns = good/nice shot (could be just \"shot\") h8 = hate idk = I don't know IIRC = if I remember correctly IMO/IMHO/IMNSHO/IMAO - In my (humble / honest / not so humble / arrogant) opinion irl = in real life j/k = jk = just kidding (or \"jackass\") lol = laughing out loud m8 = mate np = no problem nvm = nevermind rofl = rolling on floor laughing stfu = shut the fuck up t = ty = thx = tnx = thank you/thanks ttyl = talk to you later wtf = what the fuck wth = what the hell Most of acronyms used during online gaming are common for all the communities and are available in the article called \u201cList of Internet slang phrases\u201d on Wikipedia. Please note that using AOL speak or net speak (\"dats wen u talk liek dat LOL\") gives you away as a newbie in the Internet or just immature. Editor's Note: The following is an archive of old KB pages which may no longer be relevant.","title":"Internet/gaming slang"},{"location":"community/#clans","text":"To put the question simply, a clan is a group/society of people who fight together. The clan may have different beliefs of how to fight also. Almost any game has a society of clans, whether supported by the game or not. Some games (unlike Deus Ex) have features such as \"clan search\" and \"quick join clans\". Unlike in other games, Deus Ex clans sometimes also make maps and mods, besides fighting. A clan gives you an ability to participate in planned games such as trainings and clanwars, learn some in-game tricks and significantly improve. You may see the list of active clans on our \" Links \" page.","title":"Clans"},{"location":"community/#clanwars","text":"A clanwar is a planned battle between clans. Planned games are nothing like normal games, because usually you play against a solid team of experienced players who also actively cooperate, and you won't be able to get \"easy kills\" of newbie players anymore. Team work is an important aspect of any clanwar. A weaker clan can always defeat the stronger one if there is a strong teamwork aspect in it. Usually clanwars are declared on the forums. To organise a clanwar you have to: Set up date and time and make sure all the players of your clan can make it Prepare \"backup\" players, in case someone doesn't show up in time Find a decent server which could handle a desired amount of players Find an administrator who would set up a password on it Clanwars are not easy to organise, yet they're fun to play. The more players participate, the harder it is to organise the war, and the enjoyable the clanwar is. Keep in mind that it's considered a bad form to insult members of opponent clan after the war ended. There is a place for sportsmanship, not for immature behaviour. The results vary \u2014 don't take them close to your heart. Sometimes a clan loses to another because of a server location (see \" factors worsening your gameplay \" article), or because the server hoster plays. When a server hoster plays on his or her server, the server will give him or her a big advantage and increase ping disadvantage to other players. Ideal clanwar Passworded server. At least 4 players in each team. 15+ minutes per map. Each side should be able to pick a map. Even teams. No flaming, rant; friendly atmosphere. The computer used for hosting isn't used for anything else. The hoster doesn't play. A neutral administrator, who watches the game, not plays. Here's a short list of commands which may be useful for watching: admin invisible true \u2014 enables invisibility ( admin invisible false disables it) admin ghost \u2014 enables ghost mode ( walk disables ghost mode) admin cheatview human \u2014 when enabled allows to watch other players, from 1st and 3d person views behindview 0 \u2014 toggles 1st person view behindview 1 \u2014 toggles 3d person view demorec random-file-name \u2014 to start a demo recording . It's risky when a player records a demorec by him- or herself because recording may decrease FPS and result in GPF (game crash). Therefore recordings of wars are usually done by such \"neutral administrators\".","title":"Clanwars"},{"location":"community/#links","text":"Editors Note: This list is old. *OLD*. Any important links will eventually get moved to the updated list. It's not guaranteed that the list contains all the links about Deus Ex and also it may have some mistakes. PlanetDeusEx.com \u2014 official Deus Ex site in GameSpy Planet Network. The site was archived in 2005, which means no news are being posted anymore, but you can still access the rest of pages. There is also a very active forum mainly about the singleplayer. Deus Ex Gaming \u2014 the site about Deus Ex which belongs to Edge . It contains a lot of information about the singleplayer and the forum . Deus Ex Machina \u2014 the site of TTLG network. It contains a lot of interviews, news and a forum .","title":"Links"},{"location":"community/#official","text":"Eidos Interactive \u2014 the main publisher. The site doesn't contain much useful information, except for a forum . Aspyr media \u2014 Macintosh publisher. WestLake Interactive \u2014 the developer of Mac version of Deus Ex. Loki games \u2014 the developer of Linux version of Deus Ex (the project wasn't finished). Epic Games \u2014 Unreal Engine developers. Unreal Technology \u2014 the official Unreal Engine site.","title":"Official"},{"location":"community/#portals","text":"Deus Ex on imdb.com (see also: trivia , forum ). Deus Ex on Wikipedia ( see also : Deus Ex 2 ). Deus Ex on ModDB ( see also : Zodiac , 2027 , TNM , Reborn (UT'04 section) and the rest ) . Deus Ex on MobyGames ( see also : game credits , Deus Ex 2 , Ion Storm ). Deus Ex on Visual Walkthroughs \u2014 Deus E\u0445 visual walktrough. DXMP on frappr.com \u2014 the map with locations of DXMP players.","title":"Portals"},{"location":"community/#other-languages","text":"DeusExZone.info \u2014 German community. The site contains huge downloads archive and an active forum. DeusEx.pl \u2014 Polish community.","title":"Other languages"},{"location":"community/#multiplayer","text":"[A]lpha Deus Ex Mappers Society Community Improvement Zone \u2014 the site for multiplayer community. Wasn't updated for years. Casper's Deus Ex Place Host on multiple masterservers","title":"Multiplayer"},{"location":"community/#modifications","text":"Deus Ex MTL \u2014 the development of the DXMTL anticheat modification. Caran D'Ache \u2014 another anticheat modification (works with DXMTL) Zora's World \u2014 the site of Nephthys mod developer. The mod protects the servers and enables web-download for players. Hejhujka's Deus Ex mods The Sheep's site Smuggler's Deus Ex mods Blade's Deus Ex World Helio Waltons maps Geist's maps Kili's maps and mods Mantra's maps Party Zone Sly's DXMP Jaeger's room [N]Phase Templar Knight Syndicate","title":"Modifications"},{"location":"community/#clans_1","text":"All Deus Ex clans , from the beginning. In the list below we add only those clans, which have existed for over one year: [A] Alpha [3] [tBot] [III] Triad [CG] Common Ground {DXC} Deus Ex Council [EL] Elites & Legends [T]ranscend [Z] [MTX] Matrix [FGS] F*cking German Snipers Hunter Killers [REN] Renegades [N]ostalgia","title":"Clans"},{"location":"community/#inactive-clans","text":"[GODZ] [V]engeance","title":"Inactive clans"},{"location":"community/#notable-clans-which-started-from-deus-ex-but-later-moved-to-other-games","text":"|GHOST| [DCSB] Dead Cows Strike Back","title":"Notable clans which started from Deus Ex, but later moved to other games"},{"location":"dxms/","text":"The following steps can also be performed automatically! Click here to download the automatic fix. This executable does the exact same as described below, but makes the process easier by finding the DeusEx.ini by itself and applying the fix. Credits to Elliot/Machete for the patcher. What happened to the servers? # All servers in the game rely on something called a Masterserver to be displayed to players in-game. Originally, the servers were hosted by Gamespy, but at some point Gamespy shut down their service, and since then, the new host has been 333networks. Everything works as before, but in order to use the new masterserver, you need to change to it manually. How do I use the new masterserver? # Configuring the masterservers is done in the DeusEx.ini file. Finding the DeusEx.ini # The DeusEx.ini is usually in a directory named System in your DeusEx game directory. The DeusEx game directory can be in different locations: C:\\Deus Ex\\ C:\\GOG Games\\Deus Ex C:\\Program Files\\DeusEx\\ C:\\Program Files (x86)\\DeusEx\\ C:\\Program Files\\Steam\\SteamApps\\common\\Deus Ex C:\\Program Files (x86)\\Steam\\SteamApps\\common\\Deus Ex ..\\Somewhere in MyDocuments (If using Kenties Launcher) The above list uses the C partition as example. If you've picked a different location during installation, the above list of course does not apply. If you only play Deus Ex and never host a gameserver, this is the only step that is required. Open DeusEx.ini and find the following: [DeusEx.MenuScreenJoinGame] Beneath this line, there will be something in the sorts of MasterServerAddress= with a value behind it. This value will most likely be similar to: master0.gamespy.com Replace this value with the following: master.deusexnetwork.com or master.333networks.com Save the file and you're done! Everything should work without any problems but should you run into any issues or have further questions, feel free to leave a message via the Discord Configuring the gameserver # If you're also hosting a gameserver it's important to add the alternative masterserver to your server's uplink as well. This way players can also find your server on the new masterserver. Open DeusEx.ini and find the following: [DeusEx.DeusExGameEngine] Beneath this line, there will be one or multiple lines looking like the following: ServerActors=IpServer.UdpServerUplink MasterServerAddress= or ServerActors=Nephthys.NptServerUplink MasterServerAddress= You will have the first line if you don't use Nephthys (which you should, it adds vital protection to your server!), and second if you do use Nephthys. Change the value after MasterServerAddress= with either of the following: master.deusexnetwork.com or master.333networks.com The value MasterServerPort does not need to be modified. In the end, it should look something like this: ServerActors=IpServer.UdpServerUplink MasterServerAddress=master.333networks.com MasterServerPort=27900 ServerActors=IpServer.UdpServerUplink MasterServerAddress=master.epicgames.com MasterServerPort=27900 ServerActors=IpServer.UdpServerUplink MasterServerAddress=master.fragaholic.com MasterServerPort=27900 As long as one line contains either master.deusexnetwork.com or master.333networks.com , the server will connect. Save the file and you're done! Everything should work without any problems but should you run into any issues or have further questions, feel free to leave a message via the Discord .","title":"Masterserver Fix"},{"location":"dxms/#what-happened-to-the-servers","text":"All servers in the game rely on something called a Masterserver to be displayed to players in-game. Originally, the servers were hosted by Gamespy, but at some point Gamespy shut down their service, and since then, the new host has been 333networks. Everything works as before, but in order to use the new masterserver, you need to change to it manually.","title":"What happened to the servers?"},{"location":"dxms/#how-do-i-use-the-new-masterserver","text":"Configuring the masterservers is done in the DeusEx.ini file.","title":"How do I use the new masterserver?"},{"location":"dxms/#finding-the-deusexini","text":"The DeusEx.ini is usually in a directory named System in your DeusEx game directory. The DeusEx game directory can be in different locations: C:\\Deus Ex\\ C:\\GOG Games\\Deus Ex C:\\Program Files\\DeusEx\\ C:\\Program Files (x86)\\DeusEx\\ C:\\Program Files\\Steam\\SteamApps\\common\\Deus Ex C:\\Program Files (x86)\\Steam\\SteamApps\\common\\Deus Ex ..\\Somewhere in MyDocuments (If using Kenties Launcher) The above list uses the C partition as example. If you've picked a different location during installation, the above list of course does not apply. If you only play Deus Ex and never host a gameserver, this is the only step that is required. Open DeusEx.ini and find the following: [DeusEx.MenuScreenJoinGame] Beneath this line, there will be something in the sorts of MasterServerAddress= with a value behind it. This value will most likely be similar to: master0.gamespy.com Replace this value with the following: master.deusexnetwork.com or master.333networks.com Save the file and you're done! Everything should work without any problems but should you run into any issues or have further questions, feel free to leave a message via the Discord","title":"Finding the DeusEx.ini"},{"location":"dxms/#configuring-the-gameserver","text":"If you're also hosting a gameserver it's important to add the alternative masterserver to your server's uplink as well. This way players can also find your server on the new masterserver. Open DeusEx.ini and find the following: [DeusEx.DeusExGameEngine] Beneath this line, there will be one or multiple lines looking like the following: ServerActors=IpServer.UdpServerUplink MasterServerAddress= or ServerActors=Nephthys.NptServerUplink MasterServerAddress= You will have the first line if you don't use Nephthys (which you should, it adds vital protection to your server!), and second if you do use Nephthys. Change the value after MasterServerAddress= with either of the following: master.deusexnetwork.com or master.333networks.com The value MasterServerPort does not need to be modified. In the end, it should look something like this: ServerActors=IpServer.UdpServerUplink MasterServerAddress=master.333networks.com MasterServerPort=27900 ServerActors=IpServer.UdpServerUplink MasterServerAddress=master.epicgames.com MasterServerPort=27900 ServerActors=IpServer.UdpServerUplink MasterServerAddress=master.fragaholic.com MasterServerPort=27900 As long as one line contains either master.deusexnetwork.com or master.333networks.com , the server will connect. Save the file and you're done! Everything should work without any problems but should you run into any issues or have further questions, feel free to leave a message via the Discord .","title":"Configuring the gameserver"},{"location":"game/","text":"Deus Ex Knowledge Base # WIP.","title":"Game"},{"location":"game/#deus-ex-knowledge-base","text":"WIP.","title":"Deus Ex Knowledge Base"},{"location":"hosting/","text":"HOSTING # Server Starter # Windows Create a text file in your Deus Ex/System folder. Open it up, and place in the following code: @ECHO OFF title Server starter echo. Starting... deusex.exe DXMP_CMD?Game=DXMTL152b1.MTLTeam -server -LOG=server.log > NUL Edit the code to your desire. DXMP_CMD - Your map of choice. ?Game=xxx - Your gametype, leave default if you don't know what you're doing. THIS requires the DXMTL mod installed. Other options include DXMTL152b1.MTLDeathmatch. It is possible to use without MTL, but it is NOT RECOMMENDED. But if you insist, the format is DeusEx.DeathMatchGame or DeusEx.TeamDeathmatch Additional, adding ?Mutator=x after the Game string lets you force load mutators, example; map?Game=gametypestring?Mutator=mPack1.WeaponSelector The -Log=xxx flag lets you define a custom log file name, default is Server.log, which keeps a track of your entire server log while running. Renaming this isn't important really, but its an option. Another optional flag is -ini=xxx , which lets you define a seperate .ini file, instead of using the default DeusEx.ini . Once modified to your choice, save the file as ServerStarter.bat From now on, clicking on the new file will execute that code, starting the server. To edit it later, just right click and Edit. Linux (Specifically Debian XFCE environment, others may vary. Also assuming you installed via Wine and running the Windows install since DX isn't officially supported.) In your environment of choice, create a new Launcher file or .desktop file, through whatever package you use to manage those. For the Command, enter wine \"C:\\Deus Ex GOTY\\System\\deusex.exe\" DXMP_CMD?Game=DXMTL152b1.MTLTeam -server -LOG=server.log > NUL The Path to the deusex.exe varies, this is the default for GOG. And varies depending on how you installed it, through Wine or Steam Linux, check that up yourself. The rest of the code functions the same as the Windows version. Give it a name, untick Run in Terminal to save screen clutter and make it run more seamlessly, and save. Written by Kaiser Victory Conditions # Altering the Victory trigger of your server is a common alteration, and varies from server to server. The two default triggers are Frags and Time limit. Depending on the server, you will want to assign an appropiate \"trigger\". When this trigger is reach (The time limit ends or a player gets enough kills) then the match will end. There are two ways to alter the Victory trigger of your server, I will show you the Basic method (Recommended) and the Advanced method. I recommend using the Basic methods, but if this is not possible (Due to errors) then attempt the Advanced method. You only need to do one, so choose before going on. Basic Method: Firstly, run Deus Ex. Once the application has loaded, click on Multiplayer; Then Internet Game; Then on Host Game; You will be displayed with an image similar to this: This is my default server set-up, yours will be different if you haven't changed it however. You can see that my mouse is over the Victory Trigger (Refered to as the \"Condition\" here.) Clicking on this will alter and rotate between these two options: This is the Time Limit trigger. When the set time limit runs out (Here you can see it is 30 Minutes), the game will end. This is the Kill Limit trigger. When any player reachers the kill limit (Here you can see it is 100 Kills, abit high!), the game will end. After choosing the option you would like, continue to alter the other settings (Initial Augumentations, Maximum Players, Map etc). Once this is done, decide what server you would prefer to run, Dedicated (The game will close and be run in a console, you can re-join the game), or Non-Dedicated (Your game will not close and you will be running the server directly. You will not be able to quit the game without disconnecting the server). Finally, hit Start Game! Advanced Method: Open DeusEx.ini, ( ) and locate this area: You will notice these two areas: These can be altered, but entering the wrong details can result in host instability, so stick with the Basic Option unless you know what your doing! After the = sign before VictoryCondition, you can enter two options (As was shown above), Frags and Time. As you can see above, Frags is already entered. If a server were hosted with the above settings, the Trigger would be 100 kills to win. Once again, the two options are: VictoryCondition=Frags VictoryCondition=Time You can copy and paste one of the above into your DeusEx.ini if you wish. The ScoreToWin can be altered to anything between 0-99999999. Whatever your victory condition is, it will be applicable to the ScoreToWin. Happy Hosting! Installing mods # Place files in the propor directories inside the Deus Ex game folder; .u - /System/ .utx - /Textures/ .uax - /Sounds/ .umx - /Music/ .int - /System/ .ini - /System/ Open up DeusEx.ini and find the ServerPackages list, it'll look like; [DeusEx.DeusExGameEngine] CacheSizeMegs=4 UseSound=True ServerActors=IpDrv.UdpBeacon ServerActors=Nephthys.NptServerQuery ServerActors=Nephthys.NptServerUplink MasterServerAddress=master.333networks.com MasterServerPort=27900 ServerActors=Nephthys.NptServerUplink MasterServerAddress=master0.gamespy.com MasterServerPort=27900 ServerActors=Nephthys.NptServerUplink MasterServerAddress=master.epicgames.com MasterServerPort=27900 ServerActors=Nephthys.NptServerUplink MasterServerAddress=master.fragaholic.com MasterServerPort=27900 ServerPackages=DXMTL152b1 At the end of that list, add the .u file name to the list, without the .u, for example, if we have a mod called AM.u , we'll add ServerPackages=AM If the mod has a mutator or actor that should be spawned always in the server, the format is ServerActors=PackageName.ClassName , example; ServerActors=AM.AMutator Port Forwarding # Note; Some information here may be outdated. A router blocks a lot of unknown Internet connections, so if you try to host a Deus Ex server, and you have a router, it is possible that your server will not show up in the server list. We are going to solve that. First, go here and look up your router for the manual on how-to-forward-ports (in the list of games find \"Dues Ex\", apparently it's mispelt there). When you fully understand the manual on portforward.com, we may continue. For a Deus Ex server, you need to forward the following ports: 7790, 7791, 7792, 8777, 27900. You need to open these ports in these ways: TCP + UDP. I have no experience in TCP or UDP alone, so if you can't choose both, try TCP first. So... if you know how to forward ports, and you forwarded those ports, it should be just fine, and you should be able to host. Sometimes it is not only the router which blocks it. After you opened the ports, and it's still not solved, disable the Windows Firewall, just for a test, you can enable this again after testing your server. How to disable Windows Firewall (it's present only in Windows XP): Start -> Configuration -> Classic View (only if you have Windows XP) -> Network Connections -> Right click on your connection -> Properties -> Advanced. In that window, you may disable it. Notice: It is possible that your Windows Firewall configuraration is somewhere else. Try to Google where it is located in your operational system. Written by Alex. Nephthys Web support # I will explain in detail how to operate Nephthys WebSupport on your server. I will split this tutorial up into 5 core sections. I. What does it do? II. Getting started (the basics) III. Starting WebSupport IV. Finer details V. Questions/comments. What does it do? Nephthys is a \"native mod for Unreal1 engine based servers which intends IpDrv by efficient attack blocking, banning, player logging and other features\" (taken from Nephthys Documentation). Simply put, it blocks attacks and other glitches/bugs on the server. It also includes other features such as WebSupport which we will be concentrating on today. Getting started Firstly, make sure you have at least one map or mod. You will require one of these before continuing. Next we need to place it in a ZIP Folder. If you\u2019re un-aware how to do this; Here\u2019s a brief explanation: Go to My Documents -> File -> New -> ZIP folder. Depending on what program you have, it may look different or have a different name. The 3 most popular known to me are... WinRar. This looks like: Default Zip Folder. Looks Like: WinZip. This looks like: Ok, so trusting you have now created a Zip Folder, give it a suitable name, perhaps the name of your mod/map. Drag either your map or mod into it so you now have a copy of it in your Zip folder. This is the slightly more complicated part. We need to find an upload server which allows GameServer support files. I suppose they wouldn't technically know unless someone informed the site staff that\u2019s what you were using it for. Once you have found an upload server that allows this, upload your ZIP file with your file in it. You should be given a URL which you can click to download your map/mod from the internet. Note: If you have a server with FTP access E.C.T. Or forums with an attachment mod, then simply use that. If not, heres my alternative: Ok, I\u2019ve found a free upload server; seems simple enough: http://www.100webspace.com Register, login, click FileManager. You can adjust the other settings later on. Now we need to get to your directory (Or 'path'). You can tell if your there by looking at this section: The part in red should display your UserName.100webspace.net/ If it just displays something like Current Path: / Then click on the folder \"www.\" This Looks like: Then click on your website name which should be displayed in the folder, and you should now see your directory bar is displaying your full web address. Don't worry if it already displays your full 'Path' Name, just ignore that last part and continue from here: Ok, now your there, click 'create folder' at the bottom of the page (put in a desciptive name like \"Server Files\" first). Then click on the created folder. Now your inside that folder, click Browse and upload your DeusEx file thats inside the zip Folder! ). In your conformation email, you would have been informed of your Web URL. Click this link now and see if your recently created folder with the file in is their. If not, youv'e done something wrong and need to go back and do it again! Now, assuming you can see your uploaded file, right click the filename and click on properties, for help look at this: Now, when properties is clicked, you should be displayed with a box like this: You see Address (URL): then - a website address. Copy that address (highlight it, then Ctr +l C) To make sure it works, paste the URL into a web browser, where the address is displayed and you should be given the download. Starting WebSupport This part is quite simple in comparison to previous. Firstly, we need to run DeusEx and start a dedicated server (Multiplayer > Internet games -> Host a Server -> Change Server Type to Dedicated -> Start server). This can also be done with non-dedicated severs, but it\u2019s tedious and takes a long time. You should now be on your windows screen as DeusEx would have closed itself if you started a dedicated server. In the ToolTray (by the clock in the bottom right hand corner) you will see a little Deus Ex sign. This indicated your dedicated server is running. Right click this and you should be displayed with 3 options. ServerConsole, Advanced Settings and Close server. Click on ServerConsole. You will notice you are displayed with a lot of highly useless information which you needn't pay attention too. Now at the bottom of the ServerConsole you will see a >| indicating you can type. Now you can't perform commands such as kick or ban, but you can perform specialist Nephthys commands. All Nephthys commands must begin with npt before them. So it would look like npt god (but you will be displayed with an error trying to do that command). For WebSupport, we need to type: npt web support URL The URL being the one you got earlier from uploading your mod/map. So it may look something like... npt web support http://www.ExampleHost.com/upload/ExampleLink/ServerFile.zip You should now be displayed with \"Processing URL \" Then \"Downloading URL \" Then it should say something like... Needed: http://www..... E.C.T... Your URL should be here. Heres a screenshot if you\u2019re confused: (Sorry, picture is really blurry! But you can make out what it says; Needed Then a URL ) And were done! Restart your server and when someone with Nephthys installed needs to download a map/mod you have uploaded they will download from the URL creating 0 download-lag for you and increased download speed for them! Finer details Your ZIP Folder must not have a password. If you use a different upload server from my suggested one, you must make sure when you click the link to download the mod it doesn't respond with stuff like \"Please copy this conformation code to start your download\", \"Please wait 10 seconds for your download to begin\" E.C.T.. It must start immediately once you click the link without any user interference. You may require 7-Zip for this to function correctly. When installing Nephthys, you are promoted to install 7-Zip but you may have skipped past it. You may download 7-Zip here . You may recieve an error like \"Failing to create the target file\". Problem is, that the folder which Nephthys downloads the archives to, NephthysDownloadedArchives , may not exist; Nephthys is supposed to create it automatically but may fail on occasion. Therefore it is \"Failing to create the target file.\" It's easy to fix. For anyone who has this problem, you will need to go into your main DeusEx folder (Not DeusEx>System), and create a folder named NephthysDownloadedArchives . Thats it. It will work now! Questions/comments Please download Nephthys from http://www.dxalpha.com/forum/download.php?id=2907 If you don't have an above standard connection, (I myself don't) and you host a server, download lag IS a problem, please help to avert this by downloading Nephthys, so you download from the URL rather than the server. Thanks. Special Thanks to Zora for help, and of course Gishank for his Server as an example!","title":"Hosting"},{"location":"hosting/#hosting","text":"","title":"HOSTING"},{"location":"hosting/#server-starter","text":"","title":"Server Starter"},{"location":"hosting/#victory-conditions","text":"Altering the Victory trigger of your server is a common alteration, and varies from server to server. The two default triggers are Frags and Time limit. Depending on the server, you will want to assign an appropiate \"trigger\". When this trigger is reach (The time limit ends or a player gets enough kills) then the match will end. There are two ways to alter the Victory trigger of your server, I will show you the Basic method (Recommended) and the Advanced method. I recommend using the Basic methods, but if this is not possible (Due to errors) then attempt the Advanced method. You only need to do one, so choose before going on. Basic Method: Firstly, run Deus Ex. Once the application has loaded, click on Multiplayer; Then Internet Game; Then on Host Game; You will be displayed with an image similar to this: This is my default server set-up, yours will be different if you haven't changed it however. You can see that my mouse is over the Victory Trigger (Refered to as the \"Condition\" here.) Clicking on this will alter and rotate between these two options: This is the Time Limit trigger. When the set time limit runs out (Here you can see it is 30 Minutes), the game will end. This is the Kill Limit trigger. When any player reachers the kill limit (Here you can see it is 100 Kills, abit high!), the game will end. After choosing the option you would like, continue to alter the other settings (Initial Augumentations, Maximum Players, Map etc). Once this is done, decide what server you would prefer to run, Dedicated (The game will close and be run in a console, you can re-join the game), or Non-Dedicated (Your game will not close and you will be running the server directly. You will not be able to quit the game without disconnecting the server). Finally, hit Start Game! Advanced Method: Open DeusEx.ini, ( ) and locate this area: You will notice these two areas: These can be altered, but entering the wrong details can result in host instability, so stick with the Basic Option unless you know what your doing! After the = sign before VictoryCondition, you can enter two options (As was shown above), Frags and Time. As you can see above, Frags is already entered. If a server were hosted with the above settings, the Trigger would be 100 kills to win. Once again, the two options are: VictoryCondition=Frags VictoryCondition=Time You can copy and paste one of the above into your DeusEx.ini if you wish. The ScoreToWin can be altered to anything between 0-99999999. Whatever your victory condition is, it will be applicable to the ScoreToWin. Happy Hosting!","title":"Victory Conditions"},{"location":"hosting/#installing-mods","text":"Place files in the propor directories inside the Deus Ex game folder; .u - /System/ .utx - /Textures/ .uax - /Sounds/ .umx - /Music/ .int - /System/ .ini - /System/ Open up DeusEx.ini and find the ServerPackages list, it'll look like; [DeusEx.DeusExGameEngine] CacheSizeMegs=4 UseSound=True ServerActors=IpDrv.UdpBeacon ServerActors=Nephthys.NptServerQuery ServerActors=Nephthys.NptServerUplink MasterServerAddress=master.333networks.com MasterServerPort=27900 ServerActors=Nephthys.NptServerUplink MasterServerAddress=master0.gamespy.com MasterServerPort=27900 ServerActors=Nephthys.NptServerUplink MasterServerAddress=master.epicgames.com MasterServerPort=27900 ServerActors=Nephthys.NptServerUplink MasterServerAddress=master.fragaholic.com MasterServerPort=27900 ServerPackages=DXMTL152b1 At the end of that list, add the .u file name to the list, without the .u, for example, if we have a mod called AM.u , we'll add ServerPackages=AM If the mod has a mutator or actor that should be spawned always in the server, the format is ServerActors=PackageName.ClassName , example; ServerActors=AM.AMutator","title":"Installing mods"},{"location":"hosting/#port-forwarding","text":"Note; Some information here may be outdated. A router blocks a lot of unknown Internet connections, so if you try to host a Deus Ex server, and you have a router, it is possible that your server will not show up in the server list. We are going to solve that. First, go here and look up your router for the manual on how-to-forward-ports (in the list of games find \"Dues Ex\", apparently it's mispelt there). When you fully understand the manual on portforward.com, we may continue. For a Deus Ex server, you need to forward the following ports: 7790, 7791, 7792, 8777, 27900. You need to open these ports in these ways: TCP + UDP. I have no experience in TCP or UDP alone, so if you can't choose both, try TCP first. So... if you know how to forward ports, and you forwarded those ports, it should be just fine, and you should be able to host. Sometimes it is not only the router which blocks it. After you opened the ports, and it's still not solved, disable the Windows Firewall, just for a test, you can enable this again after testing your server.","title":"Port Forwarding"},{"location":"hosting/#nephthys-web-support","text":"I will explain in detail how to operate Nephthys WebSupport on your server. I will split this tutorial up into 5 core sections. I. What does it do? II. Getting started (the basics) III. Starting WebSupport IV. Finer details V. Questions/comments.","title":"Nephthys Web support"},{"location":"hx/","text":"HX # What is HX? # HX is a Deus Ex Overhaul mod that adds cooperative gameplay to the story mode, developed by Hanfling, a dev behind the Revision mod. On top of that, there is HXExt, a third-party mod developed by Bogie of OTP, which fixes a few bugs, adds new features, skins, taunts, etc. This guide will help to install HX and HXExt for playing, and hosting. Installing for Playing # Note: It is recommended that you use a fresh game install for this, it may not be needed since HX uses its own launcher and configs, but if you want to be safe, you've been warned. Note: HXExt is at version 2.1 at the time of writing. Latest files will always be available in the Discord #deusex-coop channel if this link becomes outdated. First, grab the files, download HX core files and HXExt files . Extract these files in to your games /System folder, which will be one of these; C:\\Deus Ex\\System\\ C:\\GOG Games\\Deus Ex\\System\\ C:\\Program Files\\DeusEx\\System\\ C:\\Program Files (x86)\\DeusEx\\System\\ C:\\Program Files\\Steam\\SteamApps\\common\\Deus Ex\\System\\ C:\\Program Files (x86)\\Steam\\SteamApps\\common\\Deus Ex\\System\\ Then, in your HX.ini (see text box below), find the line that reads Root=HX.HXRootWindow and change that to read Root=HXExt.HXRootWindowExt . HXDefault.ini if that HX.ini doesn't exist. If HX.ini doesn't exist, it generates one from HXDefault when you start the game, so any time you want to edit the config **AFTER** this, **THEN** edit HX.ini Skins # You can set up your player class by changing your Class= line in HXUser.ini (or HXUserDefault.ini if that doesn't exist, see the note about HXDefault.ini above). There is a list of player classes included, in Player Class List.txt or seen below this text. For example; Class=HXExt.HXBobPage , or Class=HXExt.HXAlexDentonMale2 . Remember to add the HXExt. part otherwise you'll get a Class not found error when you try to start the game! Alternatively, classes can be changed in game using the SetPlayerSkin command, along side the class name. For example; SetPlayerSkin HXExt.HXAlexDentonFemale , or SetPlayerSkin HXExt.HXPaulStrange (Hidden skin discovered! Congratulations, you actually read the readme!). HXJCDentonMale1Ext (JC Denton White) HXJCDentonMale2Ext (JC Denton Black) HXJCDentonMale3Ext (JC Denton Latino) HXJCDentonMale4Ext (JC Denton Ginger) HXJCDentonMale5Ext (JC Denton Pale) HXJCDentonUnaugged (JC Denton Unaugmented) _____________________________________ HXJCDentonFemale1 (JC Denton White) HXJCDentonFemale2 (JC Denton Black) HXJCDentonFemale3 (JC Denton Latino) HXJCDentonFemale4 (JC Denton Ginger) HXJCDentonFemale5 (JC Denton Pale) _____________________________________ HXPaulDentonMale1Ext (Paul Denton White) HXPaulDentonMale2Ext (Paul Denton Black) HXPaulDentonMale3Ext (Paul Denton Latino) HXPaulDentonMale4Ext (Paul Denton Ginger) HXPaulDentonMale5Ext (Paul Denton Pale) HXPaulDentonUnaugged (Paul Denton Unaugmented) _____________________________________ HXAlexDentonMale1 (Alex Denton White) HXAlexDentonMale2 (Alex Denton Black) HXAlexDentonMale3 (Alex Denton Latino) HXAlexDentonMale4 (Alex Denton Ginger) HXAlexDentonMale5 (Alex Denton Pale) HXAlexDentonFemale (Alex Denton White) _____________________________________ HXJCDentonMaleBeta1 (JC Denton White) HXJCDentonMaleBeta2 (JC Denton Pale) HXJCDentonMaleBeta3 (JC Denton Brunette) HXJCDentonMaleBeta4 (JC Denton White) HXJCDentonMaleBeta5 (JC Denton Black) _____________________________________ HXPaulDentonMaleBeta1 (Paul Denton White) HXPaulDentonMaleBeta2 (Paul Denton Pale) HXPaulDentonMaleBeta3 (Paul Denton Brunette) HXPaulDentonMaleBeta4 (Paul Denton White) HXPaulDentonMaleBeta5 (Paul Denton Black) _____________________________________ HXAdamJensen (Adam Jensen) HXWaltonSimonsExt (Walton Simons) HXWaltonSimonsAlt (Walton Simons Suit) HXBobPageExt (Bob Page) HXBobPageAlt (Bob Page Trench Coat) HXJockExt (Jock) _____________________________________ HXArmageddon (Armageddon) HXCozmo (Cozmo) HXKaiser (Kaiser) HXKnifeworld (Knifeworld) HXLexichu (Lexichu) HXNobody ([FGS]Nobody) HXSolid (Solid) HXJohnCochranDenton (JS38) HXBogie (Bogie) HXDefaultPlayer001 (DefaultPlayer001) HXEvilEmperor (Evil Emperor) Installing for Hosting # Firstly, make sure you check here if you're unsure of how to host. The rest of this guide will assume you know how to host basic servers at least, and will only tell you how to install HX and HXExt. This also assumes you've installed HX and HXExt for Playing as seen above, as that is required to host it. Open HX.ini and find the line that reads DefaultServerGame=HX.HXGameInfo , and change that to DefaultServerGame=HXExt.HXGameInfoExt . Find the block that starts with [HX.HXGameEngine] , and add the following to the end of that list; ServerPackages=HXExt ServerPackages=HXExtCharacters ServerPackages=HXExtSounds ServerPackages=HXExtUI (a) If you want to use a serverstarter batch file, check out here , follow the same instructions but change the game= value to HXExt.HXGameInfoExt . (b) To launch from the game, do like you usually would, in the server browser click Host, change settings as desired there.","title":"HX Co-op"},{"location":"hx/#hx","text":"","title":"HX"},{"location":"hx/#what-is-hx","text":"HX is a Deus Ex Overhaul mod that adds cooperative gameplay to the story mode, developed by Hanfling, a dev behind the Revision mod. On top of that, there is HXExt, a third-party mod developed by Bogie of OTP, which fixes a few bugs, adds new features, skins, taunts, etc. This guide will help to install HX and HXExt for playing, and hosting.","title":"What is HX?"},{"location":"hx/#installing-for-playing","text":"Note: It is recommended that you use a fresh game install for this, it may not be needed since HX uses its own launcher and configs, but if you want to be safe, you've been warned. Note: HXExt is at version 2.1 at the time of writing. Latest files will always be available in the Discord #deusex-coop channel if this link becomes outdated. First, grab the files, download HX core files and HXExt files . Extract these files in to your games /System folder, which will be one of these; C:\\Deus Ex\\System\\ C:\\GOG Games\\Deus Ex\\System\\ C:\\Program Files\\DeusEx\\System\\ C:\\Program Files (x86)\\DeusEx\\System\\ C:\\Program Files\\Steam\\SteamApps\\common\\Deus Ex\\System\\ C:\\Program Files (x86)\\Steam\\SteamApps\\common\\Deus Ex\\System\\ Then, in your HX.ini (see text box below), find the line that reads Root=HX.HXRootWindow and change that to read Root=HXExt.HXRootWindowExt . HXDefault.ini if that HX.ini doesn't exist. If HX.ini doesn't exist, it generates one from HXDefault when you start the game, so any time you want to edit the config **AFTER** this, **THEN** edit HX.ini","title":"Installing for Playing"},{"location":"hx/#skins","text":"You can set up your player class by changing your Class= line in HXUser.ini (or HXUserDefault.ini if that doesn't exist, see the note about HXDefault.ini above). There is a list of player classes included, in Player Class List.txt or seen below this text. For example; Class=HXExt.HXBobPage , or Class=HXExt.HXAlexDentonMale2 . Remember to add the HXExt. part otherwise you'll get a Class not found error when you try to start the game! Alternatively, classes can be changed in game using the SetPlayerSkin command, along side the class name. For example; SetPlayerSkin HXExt.HXAlexDentonFemale , or SetPlayerSkin HXExt.HXPaulStrange (Hidden skin discovered! Congratulations, you actually read the readme!). HXJCDentonMale1Ext (JC Denton White) HXJCDentonMale2Ext (JC Denton Black) HXJCDentonMale3Ext (JC Denton Latino) HXJCDentonMale4Ext (JC Denton Ginger) HXJCDentonMale5Ext (JC Denton Pale) HXJCDentonUnaugged (JC Denton Unaugmented) _____________________________________ HXJCDentonFemale1 (JC Denton White) HXJCDentonFemale2 (JC Denton Black) HXJCDentonFemale3 (JC Denton Latino) HXJCDentonFemale4 (JC Denton Ginger) HXJCDentonFemale5 (JC Denton Pale) _____________________________________ HXPaulDentonMale1Ext (Paul Denton White) HXPaulDentonMale2Ext (Paul Denton Black) HXPaulDentonMale3Ext (Paul Denton Latino) HXPaulDentonMale4Ext (Paul Denton Ginger) HXPaulDentonMale5Ext (Paul Denton Pale) HXPaulDentonUnaugged (Paul Denton Unaugmented) _____________________________________ HXAlexDentonMale1 (Alex Denton White) HXAlexDentonMale2 (Alex Denton Black) HXAlexDentonMale3 (Alex Denton Latino) HXAlexDentonMale4 (Alex Denton Ginger) HXAlexDentonMale5 (Alex Denton Pale) HXAlexDentonFemale (Alex Denton White) _____________________________________ HXJCDentonMaleBeta1 (JC Denton White) HXJCDentonMaleBeta2 (JC Denton Pale) HXJCDentonMaleBeta3 (JC Denton Brunette) HXJCDentonMaleBeta4 (JC Denton White) HXJCDentonMaleBeta5 (JC Denton Black) _____________________________________ HXPaulDentonMaleBeta1 (Paul Denton White) HXPaulDentonMaleBeta2 (Paul Denton Pale) HXPaulDentonMaleBeta3 (Paul Denton Brunette) HXPaulDentonMaleBeta4 (Paul Denton White) HXPaulDentonMaleBeta5 (Paul Denton Black) _____________________________________ HXAdamJensen (Adam Jensen) HXWaltonSimonsExt (Walton Simons) HXWaltonSimonsAlt (Walton Simons Suit) HXBobPageExt (Bob Page) HXBobPageAlt (Bob Page Trench Coat) HXJockExt (Jock) _____________________________________ HXArmageddon (Armageddon) HXCozmo (Cozmo) HXKaiser (Kaiser) HXKnifeworld (Knifeworld) HXLexichu (Lexichu) HXNobody ([FGS]Nobody) HXSolid (Solid) HXJohnCochranDenton (JS38) HXBogie (Bogie) HXDefaultPlayer001 (DefaultPlayer001) HXEvilEmperor (Evil Emperor)","title":"Skins"},{"location":"hx/#installing-for-hosting","text":"Firstly, make sure you check here if you're unsure of how to host. The rest of this guide will assume you know how to host basic servers at least, and will only tell you how to install HX and HXExt. This also assumes you've installed HX and HXExt for Playing as seen above, as that is required to host it. Open HX.ini and find the line that reads DefaultServerGame=HX.HXGameInfo , and change that to DefaultServerGame=HXExt.HXGameInfoExt . Find the block that starts with [HX.HXGameEngine] , and add the following to the end of that list; ServerPackages=HXExt ServerPackages=HXExtCharacters ServerPackages=HXExtSounds ServerPackages=HXExtUI (a) If you want to use a serverstarter batch file, check out here , follow the same instructions but change the game= value to HXExt.HXGameInfoExt . (b) To launch from the game, do like you usually would, in the server browser click Host, change settings as desired there.","title":"Installing for Hosting"},{"location":"improvements/","text":"Binds # A bind is a combination or stand alone command(s) assigned to a specific button in order to simplify gameplay (e.g., to make reloading faster or to decreasing of healing time by medkits). Binds are used by much of the Deus Ex community, from simple name binds to sophisticated binds. Firstly, we need to open the User.ini. This is located in C:/DeusEx/System. Once you have found it, open it. The start should look something similar to: [DefaultPlayer] Name=Player Class=DXMTL152b1.MTLJCDenton Team=0 Skin= Face= Sections will be different for you however, such as the Name and Class. In this file is where all binding occurs. Binding is, however, very simple. We need to find an empty \"Letter\" somewhere in the .ini file first. For example, the letter \"O\" is empty by default, and will simply look like \"O=\". Now, we want to add something after this, for this guide, I am going to use a simple \"say\" bind. A say bind automatically generates a set message for you when you press the key. After the empty letter, add the sentence Say Taking Fire, need assistance! Now, you may notice that each letter is repeated twice throughout the .ini file. This is because one affects singleplayer and one affects multiplayer. For safety's sake, I would advise placing the commands after both of the same letters to avoid confusion. Save the file, close it, and we're done! For more detailed information about what binds there are, view the other pages concerning binding. Now in-game, pressing the 'o' button will execute your \"Say\" command, which can be anything you want it to be. Make sure your team knows when you need help! Popular Binds # Items # For any of the binds using ActivateBelt, you can change the numbers to decide what to equip, example; ActivateBelt 9 is usually medkit, 0 is usually biocells, 1 is your Slot 1 weapon etc. Grabbing your medkit or biocell: ActivateBelt 9|onrelease ParseLeftClick Uses a med then pulls out weapon in belt 2: ActivateBelt 9|onrelease ParseLeftClick|ActivateBelt 2 Advanced medkit bind (may have problems in lag or bad ping) - bind was compiled by Clix: First create Aliases[...] bind Aliases[23]=(Command=\"ActivateBelt 9|onrelease ParseLeftClick\",Alias=MedKit) Then find a button to bind it to. For example, button H: H=ParseRightClick|ParseRightClick|MedKit|OnRelease ActivateBelt 1 The following bind could be useful for a sniper rifle. After it's used, a sniper rifle with enabled scope pulls out. Adjust \"3\" in it to an inventory slot, which you usually use to keep a sniper rifle: Activatebelt 3|Onrelease ToggleScope Movement # Strafes diagonally (forward left): Aliases[22]=(Command=\"Axis aBaseY Speed=+300.0|Axis aStrafe Speed=-300.0\",Alias=ForwardLeft) Strafes diagonally (forward right): Aliases[22]=(Command=\"Axis aBaseY Speed=+300.0|Axis aStrafe Speed=+300.0\",Alias=ForwardRight) Circles left: Aliases[22]=(Command=\"Axis aBaseX Speed=-180.0|Axis aBaseY Speed=+050.0\",Alias=CircleLeft) Circles right: Aliases[22]=(Command=\"Axis aBaseX Speed=+180.0|Axis aBaseY Speed=+050.0\",Alias=CircleRight) Turns you around, so you can face behind you instantly: Aliases[22]=(Command=\"Axis aBaseX Speed=+2900.0\",Alias=TurnAround) Augmentations # This bind enables Targetting/Ballistic Protection, then fires, and when you let go of the mouse button, it disables Targetting/Ballistic Protection. Great if you want to conserve bio: LeftMouse=ActivateAugmentation 3|Fire|onrelease ActivateAugmentation 3 Just keeps on ADS as long as you hold down the key; useful in fights when low on bio or if you want to conserve bio: Aliases[22]=(Command=\"ActivateAugmentation 6|onrelease ActivateAugmentation 6\",Alias=ADS) Med bind + regeneration \u2014 will withdraw a medkit and activate the Regeneration aug. This is useful when you are in serious trouble in a fight: Aliases[22]=(Command=\"ActivateBelt 9|ActivateAugmentation 1\") Skills # Updates skills and equips the relevent belt item. 1 is Heavy Weapons, 2 is Pistols, 3 is Rifles, 4 is Melee, 5 is Grenades, 6 is Environment Resistance, 7 is Lockpicks, 8 is Multitools, 9 is Medicine, 0 is Hacking. ActivateBelt 1|BuySkills|ActivateBelt 1|BuySkills|ActivateBelt 1<br /> ActivateBelt 2|BuySkills|ActivateBelt 2|BuySkills|ActivateBelt 2<br /> ActivateBelt 3|BuySkills|ActivateBelt 3|BuySkills|ActivateBelt 3<br /> ActivateBelt 4|BuySkills|ActivateBelt 4|BuySkills|ActivateBelt 4<br /> ActivateBelt 5|BuySkills|ActivateBelt 5|BuySkills|ActivateBelt 5<br /> ActivateBelt 6|BuySkills|ActivateBelt 6|BuySkills|ActivateBelt 6<br /> ActivateBelt 7|BuySkills|ActivateBelt 7|BuySkills|ActivateBelt 7<br /> ActivateBelt 8|BuySkills|ActivateBelt 8|BuySkills|ActivateBelt 8<br /> ActivateBelt 9|BuySkills|ActivateBelt 9|BuySkills|ActivateBelt 9<br /> ActivateBelt 0|BuySkills|ActivateBelt 0|BuySkills|ActivateBelt 0 Statistics # This shows the score as long as you keep the scores button pressed: ShowScores|onRelease ShowScores This shows your netstats (ping, packetloss etc), and your current FPS ( frame per second value): stat net|stat fps Coloured text (WIP) # Editor's Note: Adding eventually. No-CD patch # Note: Only relevant if you're using the original disc version of the game. When installing, the game copies itself entirely to your hard drive, but it may require an original CD when you run it. Using CD slows down the game, takes more energy, activates the drive for no reason and restrains you from using other CDs instead. The problem is easy to solve: Step 1. Find your Deus Ex directory. Usually it's either on your C: drive or C:\\Program Files\\. Open /System/ folder from your Deus Ex directory. Open a file called DeusEx.ini. If you're running Windows, it will open itself in Notepad and you will see these lines in the beginning: [URL] Protocol=deusex ProtocolDescription=Deus Ex Protocol Name=Player ... Then, scroll down a bit and find [Engine.Engine]. In this section, find a CdPath variable CdPath=... Set it to CdPath=..\\ Save/close the file. Step 2. You only need it if you use Deus Ex SoldOut edition or the step above didn't help you. Find your Deus Ex directory. Usually it's either on your C: drive or C:\\Program Files\\. Open /System/ folder from your Deus Ex directory. Download the patch (68 KB). Extract DeusEx.exe from the archive you downloaded to DeusEx/System/ folder. It will ask if you want to replace the file, choose \"yes\". Renderers # In this tutorial I will explain how to change your 3D renderer to one that may enchance the performance of Deus Ex on your computer. A renderer is \"a carefully engineered program, based on a selective mixture of disciplines related to: light physics, visual perception, mathematics, and software development\" (taken from Wikipedia) . In other words, it's a program that helps the game output 3D graphics. Firstly, I am going to suggest downloading an extra renderer that isn't supplied with Deus Ex. New enhanced OpenGL can be downloaded from here . Now, once you have downloaded the .zip folder, extract the contents and you should be left with a file similar to the looks of this: (Windows XP) A renderer included with Deus Ex is Direct 3D (Not advised to use with older graphics cards!). An update for that is avaliable here . Download the .zip folder and extract it to Deus Ex/System. This looks like: (Windows Vista) Choose one of those you feel would be more appropiate. You can try both if you are not satisfied with the result. Simply place that file in your Deus Ex/System folder. Now we want to switch to OpenGL/Direct 3D in Deus Ex: Go to Start > Deus Ex (unless you moved it) and click on \"Run Deus Ex in SafeMode\". You will be displayed with a screen identical to this: Now, click on Change your 3D video device. You will be displayed with 2 options, Direct 3D support and Software Rendering. If Direct 3D isn't highlighted, click it and continue though the Wizard. For OpenGl Users: (Read on if you are planning to use OpenGl) Now you'll notice that OpenGL isn't displayed, so we want to click the tab \"Show all devices\". You'll notice some new devices are displayed including OpenGl if you added it right. Click on OpenGL and finish the installation process. Now your Deus Ex will run with the new renderer! If your newly installed OpenGL driver lags, set NumAASamples to 4 or UseAA to False in DeusEx.ini. Finally, start Deus Ex and on the main screen (Before the menu appears, if the menu is there, press escape) Press your assigned talk button (T by default) and type : Preferences Before typing this, make sure you press Alt + Enter first! If you hae not, your Deus Ex will crash! You will be displayed with a screen similar to this, there may be alterations because of mods that I am running: You can see that I have expanded Rendering and then OpenGl Support. If you have placed the file in your /System folder, you should see the OpenGl Support bracket there. Expand this bracket and you will be displayed with a lot of options, which don't really need to be altered. One option, however, does need to be! About half-way down the list you'll see an option called SceneNodeHack . You'll notice in your preferences it is set to False. Instead, we want to set this to True , so click on the word False and change the option to True ! Here's what it should look like: This needs to be done so that the whole display can be shown (Such as the Spy Drone window). Once this is done, close the Preferences box and hit Alt + Enter again to resume your full-screen. Enjoy your new device! Resolutions # In some cases, Deus Ex doesn't recognise your screen resolution and doesn't add an option with your resolution to \"Settings -> Screen\" window. Instead you may set it manually: Press \"T\" (to enable the console), erase \"Say\" and type setres 1680x1050 if your screen resolution is 1680x1050 pixels. If that didn't work, close Deus Ex, go to DeusEx/System, open DeusEx.ini. Find [WinDrv.WindowsClient]. Set the variables above it (again, as an example \u2014 1680x1050): FullscreenViewportX to 1680 and FullscreenViewportY to 1050. You may want to adjust FOV according to your widescreen proportions. Go to DeusEx/System, then open User.ini, find [Engine.PlayerPawn], calculate your FOV and adjust both DesiredFOV and DefaultFOV. In high resolutions, there is a problem with the user interface, which becomes bigger than it should be. Unfortunately, there is no solution presently. Thanks to al'be:do for the provided information. Virtual Memory # The article was written by Clix and permitted to be published here. Virtual Memory is a part of the total memory available on your Hard Disk assigned to act like normal RAM. While this isn't as good as actual RAM, it still is good enough to improve the overall performance, when setup proper that is. If you let Windows manage your Virtual memory, it often resizes the swap file (the part of the HD-memory that acts like ram), which might actually work out worse for your performance, as it uses some of the resources while resizing the swapfile. Anyway, there is a way to set the swap file size to a fixed amount, which will increase your overall performance. Go to Start -> Control Panel -> System -> Performance -> Virtual Memory. For best performance, it's recommended to assign twice your amount of RAM for the swap file size. Make both maximum and minimum swap file size the same. For example, if you have 512MB ram, specify 1024MB ram minimum and maximum for the swap file. Note: If you do not know how many MB RAM you have, check this and download the file called wcpu330.exe. The file is a self-extractor, so just extract it wherever you want, then open the file called wcpuid.exe/ You should see your amount of RAM specified on the right, under \"Memory\". Widescreen # Hi! I bought an Eizo 21\" Widescreen monitor some weeks ago and wanted to play several of \"ye olde games\", especially DX with the new experience (look at my sig). For all of you who also share this ultimate gaming experience but had problems with setting up the right values, here's my help: In the DeusEx.ini change the following values to your widescreen monitor settings: [WinDrv.WindowsClient] WindowedViewportX=[color=red]1680[/color] WindowedViewportY=[color=red]1050[/color] WindowedColorBits=32 FullscreenViewportX=[color=red]1680[/color] FullscreenViewportY=[color=red]1050[/color] FullscreenColorBits=32 Simply put you screen resolution there. This leads to a horizontally wider picture. If you want to adjust the FOV according to widescreen proportions (some degrees more than normal) you have to change two settings in the file user.ini: DesiredFOV= 85.28127 DefaultFOV= 85.28127 These are the appropriate values for 16:10 monitors. The strange values are the result of the unusual DeusEx default values of 75\u00c2\u00b0 for the FOV. If you leave the FOV then the top and bottom portions of the view are simply cut off to fit the 16:10 ratio. The hud is not cut off but fit into the view. The HUD is rendered in low resolution, but the whole 3D stuff is high-res :) Here are screenshots for direct comparison: Standard: Link Full Res 4:3 is here (1400x1050) Widescreen: Link Full Res 16:10 is here (1680x1050) Quite a difference :) See you, al'be:do Windows # If your monitor is wide you might experience problems with sniping. You may try playing in a smaller window. The problem about it is that by default window mode in Deus Ex is very dark and you'll be unable to see anything even if brightness is on max level. Though there is a solution: Download and install an enhanced OpenGL renderer . Open DeusEx.ini from DeusEx/System. Find a section called [Engine.Engine] and change WindowedRenderDevice variable under it to OpenGLDrv.OpenGLRenderDevice , so it the end it will be WindowedRenderDevice=OpenGLDrv.OpenGLRenderDevice Find a section called [WinDrv.WindowsClient] and change StartupFullscreen to False (so, you won't have to switch to windowed mode each time you run Deus Ex) StartupFullscreen=False Then optionally you may change WindowedViewportX to something like 1110 and WindowedViewportY to 800. These are width and height of a window you'll be playing at. These values depend on your own preferences and screen size. You may not edit these values manually, but change the size of the window when you're already in game. Then optionally you may set brightness ( Brightness variable) to 1.000000 (that's maximum level). Save and close the file. Tips for Windows users: If you want to change back to Windows, press \"Windows\" button on your keyboard if you have it. You may also try pressing Alt+Enter two times. If you want to change back to full screen mode, press Alt+Enter or type \"togglefullscreen\" in console (console may be activated by pressing \"T\", then delete \"Say\" in bottom left corner of your screen). You may change window size by dragging it's corners (you may need to change to Windows though). INI settings # Editor's Note: Needs rewriting Theres a file called DeusEx.ini in your DeusEx/System folder. While some people usually just leave this behind, thinking there's nothing special in it, it actually does contain some changable properties, which can increase performance, especially if you're using one of the updated renderers . Here's an example of what your DeusEx.ini contains, along with some information on it. Comments on the line, are announced with \"//\". Lines which are not in bold, should not be changed, as your DX might not work properly anymore when changing those. [URL] Protocol=deusex ProtocolDescription=Deus Ex Protocol Name=Player // This is not your in-game name, changing this entry will not make a difference. If you want to change your playername, do it in your user.ini. Map=Index.dx LocalMap=DX.dx Host= Portal= MapExt=dx SaveExt=dxs Port=7790 // This is the port which your server is at, it's not recommended to change it, as you might have to open new ports, for your server to work properly on another port. Class=DXMTL152b1.MTLJCDenton // Should not be changed. However, if your entry is different than the one mentioned here, I recommend that you get MTL, as it adds several features, like being able to see who are playing in a server. Get MTL here [FirstRun] FirstRun=1100 [Engine.Engine] GameRenderDevice=D3D8Drv.D3D8RenderDevice // This is, as it says, the device that renders your game. There's a chance yours will look different, but that's no problem. It should be one of the following, however. Either D3D8Drv.D3D8RenderDevice, D3DDrv.D3DRenderDevice or OpenGLDrv.OpenGLRenderDevice AudioDevice=Galaxy.GalaxyAudioSubsystem NetworkDevice=IpDrv.TcpNetDriver DemoRecordingDevice=Engine.DemoRecDriver Console=Engine.Console Language=int GameEngine=DeusEx.DeusExGameEngine EditorEngine=Editor.EditorEngine WindowedRenderDevice=SoftDrv.SoftwareRenderDevice RenderDevice=GlideDrv.GlideRenderDevice DefaultGame=MMUserInterface160.MMUIGameInfo // If you have something different here, it's recommended to get MMUserInterface. Get MMUserInterface here DefaultServerGame=DXMTL152b1.MTLDeathMatch // Should not be changed. However, if your entry is different than the one mentioned here, I recommend that you get MTL, as it adds several features, like being able to see who are playing in a server. Get MTL here ViewportManager=WinDrv.WindowsClient Render=Render.Render Input=Extension.InputExt Canvas=Engine.Canvas Root=DeusEx.DeusExRootWindow CdPath=..\\ // Setting it to \"..\\\" will let you run Deus Ex without a CD [Core.System] PurgeCacheDays=0 // Put this to 0, this way, you won't have to redownload maps from a server, as your cached files won't get deleted. SavePath=..\\Save CachePath=..\\Cache CacheExt=.uxx Suppress=DevLoad Suppress=DevSave Suppress=DevNetTraffic Suppress=DevGarbage Suppress=DevKill Suppress=DevReplace Suppress=DevSound Suppress=DevCompile Suppress=DevBind Suppress=DevBsp Paths=..\\System*.u Paths=..\\Maps*.dx Paths=..\\Textures*.utx Paths=..\\Sounds*.uax Paths=..\\Music*.umx [DeusEx.DeusExGameEngine] CacheSizeMegs=32 // It's recommended to put this value at 32, as it will cause the game to run smoother. UseSound=True // Pretty obvious, whether to use sound or not ServerActors=IpDrv.UdpBeacon ServerActors=IpServer.UdpServerQuery ServerActors=Nephthys.NptServerQuery ServerActors=Nephthys.NptServerUplink MasterServerAddress=master0.gamespy.com MasterServerPort=27900 ServerActors=Nephthys.NptServerUplink MasterServerAddress=master.dxmtl.eu MasterServerPort=27900 // If you're a serverhoster, make sure you got nephthys, as it provides several fixes against exploits which for example could just make your server crash. If you don't host though, there's no need to install nephthys. Get Nephtys here ServerPackages=DXMTL152b1 // As mentioned a few times earlier, recommended mod, even for serverhosters, as it will make the game much smoother, amongst other good things. Get MTL here [WinDrv.WindowsClient] WindowedViewportX=640 WindowedViewportY=480 WindowedColorBits=32 FullscreenViewportX=1024 FullscreenViewportY=768 FullscreenColorBits=32 Brightness=1.000000 MipFactor=0.000000 UseDirectDraw=True UseJoystick=False CaptureMouse=True StartupFullscreen=True CurvedSurfaces=False ScreenFlashes=False NoLighting=False SlowVideoBuffering=False DeadZoneXYZ=True DeadZoneRUV=False InvertVertical=False ScaleXYZ=1000.000000 ScaleRUV=2000.000000 SkinDetail=High // Set this to Low, or Normal, to increase performance at cost of quality. TextureDetail=High // Set this to Low, or Normal, to increase performance at cost of quality. Decals=True // Setting this option to false will increase performance, but will disallow you to see blood appear. While this might not sound bad at first, you'll have to remember that you can use the blood, as a way to see if you are actually hitting the player server-side. Very handy in somewhat laggy situations. MinDesiredFrameRate=30.000000 // At this value, Deus Ex will cut down quality, if your fps drops below 30. This results in your fps being more stable, and being higher generally. UseDirectInput=False NoDynamicLights=False // In Multiplayer, having this option set to true, will not do much, apart from your light augmentation not working properly. In SinglePlayer however it voids the lighting stuff, making all areas look the same:Previously shadowed areas would just look normal now. [Engine.Player] ConfiguredInternetSpeed=20000 ConfiguredLanSpeed=20000 [Galaxy.GalaxyAudioSubsystem] UseDirectSound=True UseFilter=True UseSurround=False UseStereo=False UseCDMusic=False UseDigitalMusic=True UseSpatial=False UseReverb=True Use3dHardware=False LowSoundQuality=False ReverseStereo=False Latency=40 OutputRate=22050Hz EffectsChannels=16 DopplerSpeed=6500.000000 MusicVolume=153 SoundVolume=204 SpeechVolume=255 AmbientFactor=0.700000 [IpDrv.TcpNetDriver] AllowDownloads=True ConnectionTimeout=15.0 InitialConnectTimeout=500.0 AckTimeout=1.0 KeepAliveTime=1.0 MaxClientRate=20000 SimLatency=0 RelevantTimeout=5.0 SpawnPrioritySeconds=1.0 ServerTravelPause=4.0 NetServerMaxTickRate=20 LanServerMaxTickRate=35 StaticUpdateRate=12 DynamicUpdateRate=40 [IpDrv.TcpipConnection] SimPacketLoss=0 SimLatency=0 [IpServer.UdpServerQuery] GameName=deusex [IpDrv.UdpBeacon] DoBeacon=True BeaconTime=0.50 BeaconTimeout=5.0 BeaconPort=7776 BeaconProduct=DeusEx [SoftDrv.SoftwareRenderDevice] Translucency=True VolumetricLighting=True ShinySurfaces=False Coronas=False HighDetailActors=True HighResTextureSmooth=True LowResTextureSmooth=False FastTranslucency=True [GlideDrv.GlideRenderDevice] Translucency=True VolumetricLighting=True ShinySurfaces=True Coronas=True HighDetailActors=True DetailBias=-1.500000 RefreshRate=100Hz DetailTextures=True FastUglyRefresh=False ScreenSmoothing=True Resolution=Default [MetalDrv.MetalRenderDevice] Translucency=True VolumetricLighting=True ShinySurfaces=True Coronas=True HighDetailActors=True DetailTextures=True [OpenGLDrv.OpenGLRenderDevice] // This section assumes you have the updated OpenGL Renderer, if you do not, please skip this section. Translucency=True // Allows you to look through windows, shouldn't be disabled, even if you're struggling for performance, as it hardly affects performance VolumetricLighting=True // Should be set to to true, setting it to false might make lightbuttons not work anymore (including your light augmentation) ShinySurfaces=True // Setting it to false will make mirrors stop reflecting the environment. Coronas=False // Setting it to true will cause street lights to have a glare around the light. Doesn't really affect performance, so put it to whatever you like. HighDetailActors=False // Setting it to true will cause the actors to look more detailed, does affect performance quite a bit, so if you're struggling for fps, set it to false. DetailTextures=False // Setting it to true will cause objects to look more detailed, affects performance as well, so if you're struggling for fps, set it to false. UseTNT=False MinDepthBits=0 MaxLogUOverV=8 MaxLogVOverU=8 UseMultiTexture=True UsePalette=True // You should experiment around with this, some GFX cards perform better when this is toggled on, others do not. UseAlphaPalette=True // Should be set to True, unless you have a really old computer with very old buggy GeForce drivers ShareLists=False AlwaysMipmap=True DoPrecache=0 // Changing the value to 1, will make DX precache the maps every time you load them, making you have a little fps boost. There seems to be a bug however, making it precache the map every time you go to menu, causing a lot of annoyance after a while. UseTrilinear=False // Makes the textures look a bit more nice than before, effects performance though, so keep it to false when you're struggling for fps. MaxAnisotropy=0 SupportsLazyTextures=0 TruFormMinVertices=0 TruFormTessellation=3 UseTruForm=False AAFilterHint=0 NumAASamples=0 // Makes the edges of surfaces look better, put it either to 0, 2, 4, 6 or 8. 0 is no AA, 8 is max AA. Putting this to an other value than 0 will hurt your performance, so recommended to keep it to 0, when you're in dire need of fps. UseAA=False // Whether to use AA or not RequestHighResolutionZ=True MaskedTextureHack=True FrameRateLimit=0 // Computer controlled frame rate limiter in frames per second. Set to 0 to disable. SwapInterval=-1 // Controls V Sync. If set to the default value of -1, the default buffer swapping method is used. Set to 0 to disable V Sync. Set to 1 to enable V Sync. UseVertexProgram=False UseCVA=False UseMultiDrawArrays=False TexDXT1ToDXT3=False DynamicTexIdRecycleLevel=100 CacheStaticMaps=True UseTexPool=True UseTexIdPool=True UseSSE=True BufferClippedActorTris=True SinglePassDetail=True ColorizeDetailTextures=False DetailClipping=True // Enables the use of a somewhat experimental detail texture mode. It costs more CPU time, but may improve performance in fill rate limited situations. UseDetailAlpha=True RefreshRate=100 // Allows you to set a specific limit for your FPS to be at. (usually done, to lessen the strain on your computer) VSync has to be toggled on for this to work. MaxTMUnits=0 NoFiltering=False Use16BitTextures=True // Setting it to false will let you use 32 bit textures, which look better, but again decrease performance, set it to True, if you're struggling for FPS UseS3TC=False AutoGenerateMipmaps=False UsePrecache=False // Changing the value to 1, will make DX precache the maps every time you load them, making you have a little fps boost. There seems to be a bug however, making it precache the map every time you go to menu, causing a lot of annoyance after a while. UseBGRATextures=True UseZTrick=False MaxLogTextureSize=0 MinLogTextureSize=0 OneXBlending=False GammaCorrectScreenshots=False GammaOffsetBlue=0.000000 GammaOffsetGreen=0.000000 GammaOffsetRed=0.000000 GammaOffset=0.0000000 LODBias=1.100000 // Putting this to a positive value, wil cut the detail of textures, if they're far away from you, which will avoid your fps dropping massively when looking at a big part of the map. Putting it to a negative value will make textures blur less at long range, causing them to look better, but it will cut on your performance massively, especially when looking at a big part of the map. DescFlags=0 Description= ZRangeHack=True // Setting this to true will fix problems with decals flickering at long range. Please note that this is a \"hack\" and can result in something not displaying properly. SmoothMaskedTextures=False SceneNodeHack=True UseSSE2=True BufferTileQuads=True SinglePassFog=True DetailMax=0 NoMaskedS3TC=False [D3DDrv.D3DRenderDevice] Translucency=True // Setting it to false will make it impossible to look through windows and other translucent things VolumetricLighting=True // Should be set to to true, setting it to false might make lightbuttons not work anymore (including your light augmentation) ShinySurfaces=True // Setting it to false will make mirrors stop reflecting the environment. Coronas=False // Setting it to true will cause street lights to have a glare around the light. Doesn't really affect performance, so put it to whatever you like. HighDetailActors=False // Setting it to true will cause the actors to look more detailed, does affect performance quite a bit, so if you're struggling for fps, set it to false. UseMipmapping=True UseTrilinear=True // Whether to use Bilinear or Trilinear filtering, when set to true, graphics might look a bit better, with a minor performance loss UseMultitexture=True UsePageFlipping=True UsePalette=True // You should experiment around with this, some GFX cards perform better when this is toggled on, others do not. UseFullscreen=True // Whether to use fullscreen for DX or not. UseGammaCorrection=True DetailTextures=False // Setting it to false will increase performance at the cost of the quality of the texture detail. Use3dfx=False // Whether to use 3dfx or not, if you don't have a Voodoo card, leave this option on False UseTripleBuffering=True UsePrecache=True Use32BitTextures=True // Setting it to false will increase performance at the cost of the quality of the textures. DescFlags=1 dwDeviceId=16712 dwVendorId=4098 UseVertexFog=False UseAGPTextures=True UseVideoMemoryVB=False UseVSync=True // Setting this to false will stop your fps getting limited at a number (usually 60) For some, setting this to false will let them have higher fps. Others however seem to get higher fps as well, but it feels like very low fps. (worse than before) So it's recommended to try this out for yourself. Description=RADEON 9800 SERIES [SglDrv.SglRenderDevice] Translucency=True VolumetricLighting=False ShinySurfaces=False Coronas=True HighDetailActors=False ColorDepth=16 DetailTextures=False FastUglyRefresh=False TextureDetailBias=Near VertexLighting=False [Editor.EditorEngine] UseSound=True CacheSizeMegs=32 GridEnabled=True SnapVertices=True SnapDistance=10.000000 GridSize=(X=16.000000,Y=16.000000,Z=16.000000) RotGridEnabled=True RotGridSize=(Pitch=1024,Yaw=1024,Roll=1024) GameCommandLine=-log FovAngleDegrees=90.000000 GodMode=True AutoSave=False AutoSaveTimeMinutes=5 AutoSaveIndex=6 C_WorldBox=(R=0,G=0,B=107,A=0) C_GroundPlane=(R=0,G=0,B=63,A=0) C_GroundHighlight=(R=0,G=0,B=127,A=0) C_BrushWire=(R=255,G=63,B=63,A=0) C_Pivot=(R=0,G=255,B=0,A=0) C_Select=(R=0,G=0,B=127,A=0) C_AddWire=(R=127,G=127,B=255,A=0) C_SubtractWire=(R=255,G=192,B=63,A=0) C_GreyWire=(R=163,G=163,B=163,A=0) C_Invalid=(R=163,G=163,B=163,A=0) C_ActorWire=(R=127,G=63,B=0,A=0) C_ActorHiWire=(R=255,G=127,B=0,A=0) C_White=(R=255,G=255,B=255,A=0) C_SemiSolidWire=(R=127,G=255,B=0,A=0) C_NonSolidWire=(R=63,G=192,B=32,A=0) C_WireGridAxis=(R=119,G=119,B=119,A=0) C_ActorArrow=(R=163,G=0,B=0,A=0) C_ScaleBox=(R=151,G=67,B=11,A=0) C_ScaleBoxHi=(R=223,G=149,B=157,A=0) C_Mover=(R=255,G=0,B=255,A=0) C_OrthoBackground=(R=163,G=163,B=163,A=0) C_Current=(R=0,G=0,B=0,A=0) C_BrushVertex=(R=0,G=0,B=0,A=0) C_BrushSnap=(R=0,G=0,B=0,A=0) C_Black=(R=0,G=0,B=0,A=0) C_Mask=(R=0,G=0,B=0,A=0) C_WireBackground=(R=0,G=0,B=0,A=0) C_ZoneWire=(R=0,G=0,B=0,A=0) EditPackages=Core EditPackages=Engine EditPackages=Editor EditPackages=Fire EditPackages=IpDrv EditPackages=Extension EditPackages=DeusExUI EditPackages=ConSys EditPackages=DeusExConversations EditPackages=DeusExSounds EditPackages=DeusExItems EditPackages=DeusExDeco EditPackages=DeusExCharacters EditPackages=DeusExText EditPackages=DeusEx EditPackages=IpServer [DeusEx.DeusExGameInfo] bNoMonsters=False bHumansOnly=False bCoopWeaponMode=False bClassicDeathmessages=False [Engine.GameInfo] bLowGore=True bMuteSpectators=True bNoCheating=True bAllowFOV=False AutoAim=1.000000 GameSpeed=1.000000 MaxSpectators=2 AdminPassword=AdminPass GamePassword= MaxPlayers=8 IPPolicies[0]=ACCEPT,* IPPolicies[1]= IPPolicies[2]= IPPolicies[3]= IPPolicies[4]= IPPolicies[5]= IPPolicies[6]= IPPolicies[7]= IPPolicies[8]= IPPolicies[9]= IPPolicies[10]= IPPolicies[11]= IPPolicies[12]= IPPolicies[13]= IPPolicies[14]= IPPolicies[15]= IPPolicies[16]= IPPolicies[17]= IPPolicies[18]= IPPolicies[19]= IPPolicies[20]= IPPolicies[21]= IPPolicies[22]= IPPolicies[23]= IPPolicies[24]= IPPolicies[25]= IPPolicies[26]= IPPolicies[27]= IPPolicies[28]= IPPolicies[29]= IPPolicies[30]= IPPolicies[31]= IPPolicies[32]= IPPolicies[33]= IPPolicies[34]= IPPolicies[35]= IPPolicies[36]= IPPolicies[37]= IPPolicies[38]= IPPolicies[39]= IPPolicies[40]= IPPolicies[41]= IPPolicies[42]= IPPolicies[43]= IPPolicies[44]= IPPolicies[45]= IPPolicies[46]= IPPolicies[47]= IPPolicies[48]= IPPolicies[49]= ServerLogName=server.log bLocalLog=True bWorldLog=True bBatchLocal=False DemoBuild=0 DemoHasTuts=0 [Engine.DemoRecDriver] DemoSpectatorClass=UnrealShare.UnrealSpectator MaxClientRate=25000 ConnectionTimeout=15.0 InitialConnectTimeout=500.0 AckTimeout=1.0 KeepAliveTime=1.0 SimLatency=0 RelevantTimeout=5.0 SpawnPrioritySeconds=1.0 ServerTravelPause=4.0 NetServerMaxTickRate=60 LanServerMaxTickRate=60 [DeusEx.MenuScreenJoinGame] MasterServerAddress=master0.gamespy.com [Engine.GameReplicationInfo] ServerName= ShortName= [IpServer.UdpBeacon] BeaconProduct=DeusEx [WindowPositions] GameLog=(X=335,Y=28,XL=637,YL=545) ConfigPageRenderer=(X=5,Y=96,XL=516,YL=280) ConfigPageDriver=(X=5,Y=96,XL=516,YL=280) ConfigPageDetail=(X=5,Y=96,XL=516,YL=280) ConfigPageFirstTime=(X=5,Y=96,XL=516,YL=280) WizardDialog=(X=247,Y=151,XL=530,YL=436) Preferences=(X=390,Y=32,XL=352,YL=512) ConfigPageSafeMode=(X=5,Y=96,XL=516,YL=280) ConfigPageSafeOptions=(X=5,Y=96,XL=516,YL=280) [Engine.GameEngine] GameRenderDevice=Class'OpenGLDrv.OpenGLRenderDevice' AudioDevice=Class'Galaxy.GalaxyAudioSubsystem' Console=Class'Engine.Console' NetworkDevice=Class'IpDrv.TcpNetDriver' Language=None CacheSizeMegs=32 UseSound=True [DeusEx.dxmaplist] Maps[0]=DXMP_Silo Maps[1]=DXMP_Area51Bunker Maps[2]=DXMP_Cathedral Maps[3]=DXMP_Cmd Maps[4]=DXMP_Smuggler Maps[5]= Maps[6]= Maps[7]= Maps[8]= Maps[9]= Maps[10]= Maps[11]= Maps[12]= Maps[13]= Maps[14]= Maps[15]= Maps[16]= Maps[17]= Maps[18]= Maps[19]= Maps[20]= Maps[21]= Maps[22]= Maps[23]= Maps[24]= Maps[25]= Maps[26]= Maps[27]= Maps[28]= Maps[29]= Maps[30]= Maps[31]= MapSizes[0]=(6-10) MapSizes[1]=(8-14) MapSizes[2]=(8-14) MapSizes[3]=(12-16) MapSizes[4]=(2-6) MapSizes[5]= MapSizes[6]= MapSizes[7]= MapSizes[8]= MapSizes[9]= MapSizes[10]= MapSizes[11]= MapSizes[12]= MapSizes[13]= MapSizes[14]= MapSizes[15]= MapSizes[16]= MapSizes[17]= MapSizes[18]= MapSizes[19]= MapSizes[20]= MapSizes[21]= MapSizes[22]= MapSizes[23]= MapSizes[24]= MapSizes[25]= MapSizes[26]= MapSizes[27]= MapSizes[28]= MapSizes[29]= MapSizes[30]= MapSizes[31]= MapNum=4 CycleType=0 [Engine.MapList] Maps[0]= Maps[1]= Maps[2]= Maps[3]= Maps[4]= Maps[5]= Maps[6]= Maps[7]= Maps[8]= Maps[9]= Maps[10]= Maps[11]= Maps[12]= Maps[13]= Maps[14]= Maps[15]= Maps[16]= Maps[17]= Maps[18]= Maps[19]= Maps[20]= Maps[21]= Maps[22]= Maps[23]= Maps[24]= Maps[25]= Maps[26]= Maps[27]= Maps[28]= Maps[29]= Maps[30]= Maps[31]= MapNum=0 [DeusEx.DeusExMPGame] SkillsTotal=2000 SkillsAvail=0 SkillsPerKill=0 InitialAugs=0 AugsPerKill=0 ScoreToWin=25 VictoryCondition=Time MPSkillStartLevel=3 CurrentMap=DXMP_Cmd fFriendlyFireMult=0.000000 bTrackWeapons=False bNoMonsters=False bHumansOnly=False bCoopWeaponMode=False bClassicDeathMessages=False [IpServer.UdpServerUplink] DoUplink=False UpdateMinutes=1 MasterServerAddress=779 MasterServerPort=1544172281 Region=0 [DeusEx.menuscreenhostgame] CurrentGameType=DeusEx.DeathMatchGame ServerMode=1 [DXMTL152b1.MTLAdvTeam] bNoMonsters=False bHumansOnly=False bCoopWeaponMode=False bClassicDeathMessages=False [D3D8Drv.D3D8RenderDevice] ZRangeHack=True // Setting this to true will fix problems with decals flickering at long range. Please note that this is a \"hack\" and can result in something not displaying properly. NumAASamples=0 // Makes the edges of surfaces look better, put it either to 0, 2, 4, 6 or 8. 0 is no AA, 8 is max AA. Putting this to an other value than 0 will hurt your performance, so recommended to keep it to 0, when you're in dire need of fps. UseAA=False // Whether to use AA or not RequestHighResolutionZ=True UseSoftwareVertexProcessing=False UsePureDevice=False UseTripleBuffering=False MaskedTextureHack=False SmoothMaskedTextures=False SceneNodeHack=False FrameRateLimit=0 //CPU controlled frame rate limiter in frames per second. Set to 0 to disable. (This won't work if your driver doesn't let the application decide on these options.) SwapInterval=-1 // Controls V Sync. If set to the default value of -1, the default buffer swapping method is used. Set to 0 to disable V Sync. Set to 1 to enable V Sync. UseVertexProgram=False TexDXT1ToDXT3=False DynamicTexIdRecycleLevel=100 CacheStaticMaps=False UseTexPool=True UseTexIdPool=True UseSSE2=True UseSSE=True BufferTileQuads=True BufferClippedActorTris=True SinglePassDetail=False SinglePassFog=False ColorizeDetailTextures=False DetailClipping=True // Enables the use of a somewhat experimental detail texture mode. It costs more CPU time, but may improve performance in fill rate limited situations. UseDetailAlpha=True DetailMax=0 RefreshRate=85 // Allows you to set a limit on your fps, sometimes it's required, for those who get a really messed up DX when there's no frame limit. Please note that if you have disabled vsync in your driver's options, that it simply won't work. MaxTMUnits=0 NoFiltering=False MaxAnisotropy=0 Use16BitTextures=True // Setting this to False will make stuff look better, at the cost of performance UseS3TC=False UseAlphaPalette=False UseTrilinear=False UsePrecache=False UsePalette=True // You should experiment around with this, some GFX cards perform better when this is toggled on, others do not. UseMultiTexture=True MaxLogTextureSize=8 MinLogTextureSize=0 MaxLogVOverU=8 MaxLogUOverV=8 OneXBlending=True GammaCorrectScreenshots=False GammaOffsetBlue=0.000000 GammaOffsetGreen=0.000000 GammaOffsetRed=0.000000 GammaOffset=0.000000 LODBias=1.100000 // Putting this to a positive value, wil cut the detail of textures, if they're far away from you, which will avoid your fps dropping massively when looking at a big part of the map. Putting it to a negative value will make textures blur less at long range, causing them to look better, but it will cut on your performance massively, especially when looking at a big part of the map. DetailTextures=True // Setting this option to false will increase performance at cost of quality DescFlags=0 Description= HighDetailActors=False // Setting it to true will cause the actors to look more detailed, does affect performance quite a bit, so if you're struggling for fps, set it to false. Coronas=False // Setting it to true will cause street lights to have a glare around the light. Doesn't really affect performance, so put it to whatever you like. ShinySurfaces=True // Setting it to false will make mirrors stop reflecting the environment. VolumetricLighting=True // Should be set to to true, setting it to false might make lightbuttons not work anymore (including your light augmentation) [DXMTL152b1.MTLGameInfo] bNoMonsters=False bHumansOnly=False bCoopWeaponMode=False bClassicDeathMessages=False","title":"Improvements"},{"location":"improvements/#binds","text":"A bind is a combination or stand alone command(s) assigned to a specific button in order to simplify gameplay (e.g., to make reloading faster or to decreasing of healing time by medkits). Binds are used by much of the Deus Ex community, from simple name binds to sophisticated binds. Firstly, we need to open the User.ini. This is located in C:/DeusEx/System. Once you have found it, open it. The start should look something similar to: [DefaultPlayer] Name=Player Class=DXMTL152b1.MTLJCDenton Team=0 Skin= Face= Sections will be different for you however, such as the Name and Class. In this file is where all binding occurs. Binding is, however, very simple. We need to find an empty \"Letter\" somewhere in the .ini file first. For example, the letter \"O\" is empty by default, and will simply look like \"O=\". Now, we want to add something after this, for this guide, I am going to use a simple \"say\" bind. A say bind automatically generates a set message for you when you press the key. After the empty letter, add the sentence Say Taking Fire, need assistance! Now, you may notice that each letter is repeated twice throughout the .ini file. This is because one affects singleplayer and one affects multiplayer. For safety's sake, I would advise placing the commands after both of the same letters to avoid confusion. Save the file, close it, and we're done! For more detailed information about what binds there are, view the other pages concerning binding. Now in-game, pressing the 'o' button will execute your \"Say\" command, which can be anything you want it to be. Make sure your team knows when you need help!","title":"Binds"},{"location":"improvements/#popular-binds","text":"","title":"Popular Binds"},{"location":"improvements/#items","text":"For any of the binds using ActivateBelt, you can change the numbers to decide what to equip, example; ActivateBelt 9 is usually medkit, 0 is usually biocells, 1 is your Slot 1 weapon etc. Grabbing your medkit or biocell: ActivateBelt 9|onrelease ParseLeftClick Uses a med then pulls out weapon in belt 2: ActivateBelt 9|onrelease ParseLeftClick|ActivateBelt 2 Advanced medkit bind (may have problems in lag or bad ping) - bind was compiled by Clix: First create Aliases[...] bind Aliases[23]=(Command=\"ActivateBelt 9|onrelease ParseLeftClick\",Alias=MedKit) Then find a button to bind it to. For example, button H: H=ParseRightClick|ParseRightClick|MedKit|OnRelease ActivateBelt 1 The following bind could be useful for a sniper rifle. After it's used, a sniper rifle with enabled scope pulls out. Adjust \"3\" in it to an inventory slot, which you usually use to keep a sniper rifle: Activatebelt 3|Onrelease ToggleScope","title":"Items"},{"location":"improvements/#movement","text":"Strafes diagonally (forward left): Aliases[22]=(Command=\"Axis aBaseY Speed=+300.0|Axis aStrafe Speed=-300.0\",Alias=ForwardLeft) Strafes diagonally (forward right): Aliases[22]=(Command=\"Axis aBaseY Speed=+300.0|Axis aStrafe Speed=+300.0\",Alias=ForwardRight) Circles left: Aliases[22]=(Command=\"Axis aBaseX Speed=-180.0|Axis aBaseY Speed=+050.0\",Alias=CircleLeft) Circles right: Aliases[22]=(Command=\"Axis aBaseX Speed=+180.0|Axis aBaseY Speed=+050.0\",Alias=CircleRight) Turns you around, so you can face behind you instantly: Aliases[22]=(Command=\"Axis aBaseX Speed=+2900.0\",Alias=TurnAround)","title":"Movement"},{"location":"improvements/#augmentations","text":"This bind enables Targetting/Ballistic Protection, then fires, and when you let go of the mouse button, it disables Targetting/Ballistic Protection. Great if you want to conserve bio: LeftMouse=ActivateAugmentation 3|Fire|onrelease ActivateAugmentation 3 Just keeps on ADS as long as you hold down the key; useful in fights when low on bio or if you want to conserve bio: Aliases[22]=(Command=\"ActivateAugmentation 6|onrelease ActivateAugmentation 6\",Alias=ADS) Med bind + regeneration \u2014 will withdraw a medkit and activate the Regeneration aug. This is useful when you are in serious trouble in a fight: Aliases[22]=(Command=\"ActivateBelt 9|ActivateAugmentation 1\")","title":"Augmentations"},{"location":"improvements/#skills","text":"Updates skills and equips the relevent belt item. 1 is Heavy Weapons, 2 is Pistols, 3 is Rifles, 4 is Melee, 5 is Grenades, 6 is Environment Resistance, 7 is Lockpicks, 8 is Multitools, 9 is Medicine, 0 is Hacking. ActivateBelt 1|BuySkills|ActivateBelt 1|BuySkills|ActivateBelt 1<br /> ActivateBelt 2|BuySkills|ActivateBelt 2|BuySkills|ActivateBelt 2<br /> ActivateBelt 3|BuySkills|ActivateBelt 3|BuySkills|ActivateBelt 3<br /> ActivateBelt 4|BuySkills|ActivateBelt 4|BuySkills|ActivateBelt 4<br /> ActivateBelt 5|BuySkills|ActivateBelt 5|BuySkills|ActivateBelt 5<br /> ActivateBelt 6|BuySkills|ActivateBelt 6|BuySkills|ActivateBelt 6<br /> ActivateBelt 7|BuySkills|ActivateBelt 7|BuySkills|ActivateBelt 7<br /> ActivateBelt 8|BuySkills|ActivateBelt 8|BuySkills|ActivateBelt 8<br /> ActivateBelt 9|BuySkills|ActivateBelt 9|BuySkills|ActivateBelt 9<br /> ActivateBelt 0|BuySkills|ActivateBelt 0|BuySkills|ActivateBelt 0","title":"Skills"},{"location":"improvements/#statistics","text":"This shows the score as long as you keep the scores button pressed: ShowScores|onRelease ShowScores This shows your netstats (ping, packetloss etc), and your current FPS ( frame per second value): stat net|stat fps","title":"Statistics"},{"location":"improvements/#coloured-text-wip","text":"Editor's Note: Adding eventually.","title":"Coloured text (WIP)"},{"location":"improvements/#no-cd-patch","text":"Note: Only relevant if you're using the original disc version of the game. When installing, the game copies itself entirely to your hard drive, but it may require an original CD when you run it. Using CD slows down the game, takes more energy, activates the drive for no reason and restrains you from using other CDs instead. The problem is easy to solve: Step 1. Find your Deus Ex directory. Usually it's either on your C: drive or C:\\Program Files\\. Open /System/ folder from your Deus Ex directory. Open a file called DeusEx.ini. If you're running Windows, it will open itself in Notepad and you will see these lines in the beginning: [URL] Protocol=deusex ProtocolDescription=Deus Ex Protocol Name=Player ... Then, scroll down a bit and find [Engine.Engine]. In this section, find a CdPath variable CdPath=... Set it to CdPath=..\\ Save/close the file. Step 2. You only need it if you use Deus Ex SoldOut edition or the step above didn't help you. Find your Deus Ex directory. Usually it's either on your C: drive or C:\\Program Files\\. Open /System/ folder from your Deus Ex directory. Download the patch (68 KB). Extract DeusEx.exe from the archive you downloaded to DeusEx/System/ folder. It will ask if you want to replace the file, choose \"yes\".","title":"No-CD patch"},{"location":"improvements/#renderers","text":"In this tutorial I will explain how to change your 3D renderer to one that may enchance the performance of Deus Ex on your computer. A renderer is \"a carefully engineered program, based on a selective mixture of disciplines related to: light physics, visual perception, mathematics, and software development\" (taken from Wikipedia) . In other words, it's a program that helps the game output 3D graphics. Firstly, I am going to suggest downloading an extra renderer that isn't supplied with Deus Ex. New enhanced OpenGL can be downloaded from here . Now, once you have downloaded the .zip folder, extract the contents and you should be left with a file similar to the looks of this: (Windows XP) A renderer included with Deus Ex is Direct 3D (Not advised to use with older graphics cards!). An update for that is avaliable here . Download the .zip folder and extract it to Deus Ex/System. This looks like: (Windows Vista) Choose one of those you feel would be more appropiate. You can try both if you are not satisfied with the result. Simply place that file in your Deus Ex/System folder. Now we want to switch to OpenGL/Direct 3D in Deus Ex: Go to Start > Deus Ex (unless you moved it) and click on \"Run Deus Ex in SafeMode\". You will be displayed with a screen identical to this: Now, click on Change your 3D video device. You will be displayed with 2 options, Direct 3D support and Software Rendering. If Direct 3D isn't highlighted, click it and continue though the Wizard. For OpenGl Users: (Read on if you are planning to use OpenGl) Now you'll notice that OpenGL isn't displayed, so we want to click the tab \"Show all devices\". You'll notice some new devices are displayed including OpenGl if you added it right. Click on OpenGL and finish the installation process. Now your Deus Ex will run with the new renderer! If your newly installed OpenGL driver lags, set NumAASamples to 4 or UseAA to False in DeusEx.ini. Finally, start Deus Ex and on the main screen (Before the menu appears, if the menu is there, press escape) Press your assigned talk button (T by default) and type : Preferences Before typing this, make sure you press Alt + Enter first! If you hae not, your Deus Ex will crash! You will be displayed with a screen similar to this, there may be alterations because of mods that I am running: You can see that I have expanded Rendering and then OpenGl Support. If you have placed the file in your /System folder, you should see the OpenGl Support bracket there. Expand this bracket and you will be displayed with a lot of options, which don't really need to be altered. One option, however, does need to be! About half-way down the list you'll see an option called SceneNodeHack . You'll notice in your preferences it is set to False. Instead, we want to set this to True , so click on the word False and change the option to True ! Here's what it should look like: This needs to be done so that the whole display can be shown (Such as the Spy Drone window). Once this is done, close the Preferences box and hit Alt + Enter again to resume your full-screen. Enjoy your new device!","title":"Renderers"},{"location":"improvements/#resolutions","text":"In some cases, Deus Ex doesn't recognise your screen resolution and doesn't add an option with your resolution to \"Settings -> Screen\" window. Instead you may set it manually: Press \"T\" (to enable the console), erase \"Say\" and type setres 1680x1050 if your screen resolution is 1680x1050 pixels. If that didn't work, close Deus Ex, go to DeusEx/System, open DeusEx.ini. Find [WinDrv.WindowsClient]. Set the variables above it (again, as an example \u2014 1680x1050): FullscreenViewportX to 1680 and FullscreenViewportY to 1050. You may want to adjust FOV according to your widescreen proportions. Go to DeusEx/System, then open User.ini, find [Engine.PlayerPawn], calculate your FOV and adjust both DesiredFOV and DefaultFOV. In high resolutions, there is a problem with the user interface, which becomes bigger than it should be. Unfortunately, there is no solution presently. Thanks to al'be:do for the provided information.","title":"Resolutions"},{"location":"improvements/#virtual-memory","text":"The article was written by Clix and permitted to be published here. Virtual Memory is a part of the total memory available on your Hard Disk assigned to act like normal RAM. While this isn't as good as actual RAM, it still is good enough to improve the overall performance, when setup proper that is. If you let Windows manage your Virtual memory, it often resizes the swap file (the part of the HD-memory that acts like ram), which might actually work out worse for your performance, as it uses some of the resources while resizing the swapfile. Anyway, there is a way to set the swap file size to a fixed amount, which will increase your overall performance. Go to Start -> Control Panel -> System -> Performance -> Virtual Memory. For best performance, it's recommended to assign twice your amount of RAM for the swap file size. Make both maximum and minimum swap file size the same. For example, if you have 512MB ram, specify 1024MB ram minimum and maximum for the swap file. Note: If you do not know how many MB RAM you have, check this and download the file called wcpu330.exe. The file is a self-extractor, so just extract it wherever you want, then open the file called wcpuid.exe/ You should see your amount of RAM specified on the right, under \"Memory\".","title":"Virtual Memory"},{"location":"improvements/#widescreen","text":"Hi! I bought an Eizo 21\" Widescreen monitor some weeks ago and wanted to play several of \"ye olde games\", especially DX with the new experience (look at my sig). For all of you who also share this ultimate gaming experience but had problems with setting up the right values, here's my help: In the DeusEx.ini change the following values to your widescreen monitor settings: [WinDrv.WindowsClient] WindowedViewportX=[color=red]1680[/color] WindowedViewportY=[color=red]1050[/color] WindowedColorBits=32 FullscreenViewportX=[color=red]1680[/color] FullscreenViewportY=[color=red]1050[/color] FullscreenColorBits=32 Simply put you screen resolution there. This leads to a horizontally wider picture. If you want to adjust the FOV according to widescreen proportions (some degrees more than normal) you have to change two settings in the file user.ini: DesiredFOV= 85.28127 DefaultFOV= 85.28127 These are the appropriate values for 16:10 monitors. The strange values are the result of the unusual DeusEx default values of 75\u00c2\u00b0 for the FOV. If you leave the FOV then the top and bottom portions of the view are simply cut off to fit the 16:10 ratio. The hud is not cut off but fit into the view. The HUD is rendered in low resolution, but the whole 3D stuff is high-res :) Here are screenshots for direct comparison: Standard: Link Full Res 4:3 is here (1400x1050) Widescreen: Link Full Res 16:10 is here (1680x1050) Quite a difference :) See you, al'be:do","title":"Widescreen"},{"location":"improvements/#windows","text":"If your monitor is wide you might experience problems with sniping. You may try playing in a smaller window. The problem about it is that by default window mode in Deus Ex is very dark and you'll be unable to see anything even if brightness is on max level. Though there is a solution: Download and install an enhanced OpenGL renderer . Open DeusEx.ini from DeusEx/System. Find a section called [Engine.Engine] and change WindowedRenderDevice variable under it to OpenGLDrv.OpenGLRenderDevice , so it the end it will be WindowedRenderDevice=OpenGLDrv.OpenGLRenderDevice Find a section called [WinDrv.WindowsClient] and change StartupFullscreen to False (so, you won't have to switch to windowed mode each time you run Deus Ex) StartupFullscreen=False Then optionally you may change WindowedViewportX to something like 1110 and WindowedViewportY to 800. These are width and height of a window you'll be playing at. These values depend on your own preferences and screen size. You may not edit these values manually, but change the size of the window when you're already in game. Then optionally you may set brightness ( Brightness variable) to 1.000000 (that's maximum level). Save and close the file. Tips for Windows users: If you want to change back to Windows, press \"Windows\" button on your keyboard if you have it. You may also try pressing Alt+Enter two times. If you want to change back to full screen mode, press Alt+Enter or type \"togglefullscreen\" in console (console may be activated by pressing \"T\", then delete \"Say\" in bottom left corner of your screen). You may change window size by dragging it's corners (you may need to change to Windows though).","title":"Windows"},{"location":"improvements/#ini-settings","text":"Editor's Note: Needs rewriting Theres a file called DeusEx.ini in your DeusEx/System folder. While some people usually just leave this behind, thinking there's nothing special in it, it actually does contain some changable properties, which can increase performance, especially if you're using one of the updated renderers . Here's an example of what your DeusEx.ini contains, along with some information on it. Comments on the line, are announced with \"//\". Lines which are not in bold, should not be changed, as your DX might not work properly anymore when changing those. [URL] Protocol=deusex ProtocolDescription=Deus Ex Protocol Name=Player // This is not your in-game name, changing this entry will not make a difference. If you want to change your playername, do it in your user.ini. Map=Index.dx LocalMap=DX.dx Host= Portal= MapExt=dx SaveExt=dxs Port=7790 // This is the port which your server is at, it's not recommended to change it, as you might have to open new ports, for your server to work properly on another port. Class=DXMTL152b1.MTLJCDenton // Should not be changed. However, if your entry is different than the one mentioned here, I recommend that you get MTL, as it adds several features, like being able to see who are playing in a server. Get MTL here [FirstRun] FirstRun=1100 [Engine.Engine] GameRenderDevice=D3D8Drv.D3D8RenderDevice // This is, as it says, the device that renders your game. There's a chance yours will look different, but that's no problem. It should be one of the following, however. Either D3D8Drv.D3D8RenderDevice, D3DDrv.D3DRenderDevice or OpenGLDrv.OpenGLRenderDevice AudioDevice=Galaxy.GalaxyAudioSubsystem NetworkDevice=IpDrv.TcpNetDriver DemoRecordingDevice=Engine.DemoRecDriver Console=Engine.Console Language=int GameEngine=DeusEx.DeusExGameEngine EditorEngine=Editor.EditorEngine WindowedRenderDevice=SoftDrv.SoftwareRenderDevice RenderDevice=GlideDrv.GlideRenderDevice DefaultGame=MMUserInterface160.MMUIGameInfo // If you have something different here, it's recommended to get MMUserInterface. Get MMUserInterface here DefaultServerGame=DXMTL152b1.MTLDeathMatch // Should not be changed. However, if your entry is different than the one mentioned here, I recommend that you get MTL, as it adds several features, like being able to see who are playing in a server. Get MTL here ViewportManager=WinDrv.WindowsClient Render=Render.Render Input=Extension.InputExt Canvas=Engine.Canvas Root=DeusEx.DeusExRootWindow CdPath=..\\ // Setting it to \"..\\\" will let you run Deus Ex without a CD [Core.System] PurgeCacheDays=0 // Put this to 0, this way, you won't have to redownload maps from a server, as your cached files won't get deleted. SavePath=..\\Save CachePath=..\\Cache CacheExt=.uxx Suppress=DevLoad Suppress=DevSave Suppress=DevNetTraffic Suppress=DevGarbage Suppress=DevKill Suppress=DevReplace Suppress=DevSound Suppress=DevCompile Suppress=DevBind Suppress=DevBsp Paths=..\\System*.u Paths=..\\Maps*.dx Paths=..\\Textures*.utx Paths=..\\Sounds*.uax Paths=..\\Music*.umx [DeusEx.DeusExGameEngine] CacheSizeMegs=32 // It's recommended to put this value at 32, as it will cause the game to run smoother. UseSound=True // Pretty obvious, whether to use sound or not ServerActors=IpDrv.UdpBeacon ServerActors=IpServer.UdpServerQuery ServerActors=Nephthys.NptServerQuery ServerActors=Nephthys.NptServerUplink MasterServerAddress=master0.gamespy.com MasterServerPort=27900 ServerActors=Nephthys.NptServerUplink MasterServerAddress=master.dxmtl.eu MasterServerPort=27900 // If you're a serverhoster, make sure you got nephthys, as it provides several fixes against exploits which for example could just make your server crash. If you don't host though, there's no need to install nephthys. Get Nephtys here ServerPackages=DXMTL152b1 // As mentioned a few times earlier, recommended mod, even for serverhosters, as it will make the game much smoother, amongst other good things. Get MTL here [WinDrv.WindowsClient] WindowedViewportX=640 WindowedViewportY=480 WindowedColorBits=32 FullscreenViewportX=1024 FullscreenViewportY=768 FullscreenColorBits=32 Brightness=1.000000 MipFactor=0.000000 UseDirectDraw=True UseJoystick=False CaptureMouse=True StartupFullscreen=True CurvedSurfaces=False ScreenFlashes=False NoLighting=False SlowVideoBuffering=False DeadZoneXYZ=True DeadZoneRUV=False InvertVertical=False ScaleXYZ=1000.000000 ScaleRUV=2000.000000 SkinDetail=High // Set this to Low, or Normal, to increase performance at cost of quality. TextureDetail=High // Set this to Low, or Normal, to increase performance at cost of quality. Decals=True // Setting this option to false will increase performance, but will disallow you to see blood appear. While this might not sound bad at first, you'll have to remember that you can use the blood, as a way to see if you are actually hitting the player server-side. Very handy in somewhat laggy situations. MinDesiredFrameRate=30.000000 // At this value, Deus Ex will cut down quality, if your fps drops below 30. This results in your fps being more stable, and being higher generally. UseDirectInput=False NoDynamicLights=False // In Multiplayer, having this option set to true, will not do much, apart from your light augmentation not working properly. In SinglePlayer however it voids the lighting stuff, making all areas look the same:Previously shadowed areas would just look normal now. [Engine.Player] ConfiguredInternetSpeed=20000 ConfiguredLanSpeed=20000 [Galaxy.GalaxyAudioSubsystem] UseDirectSound=True UseFilter=True UseSurround=False UseStereo=False UseCDMusic=False UseDigitalMusic=True UseSpatial=False UseReverb=True Use3dHardware=False LowSoundQuality=False ReverseStereo=False Latency=40 OutputRate=22050Hz EffectsChannels=16 DopplerSpeed=6500.000000 MusicVolume=153 SoundVolume=204 SpeechVolume=255 AmbientFactor=0.700000 [IpDrv.TcpNetDriver] AllowDownloads=True ConnectionTimeout=15.0 InitialConnectTimeout=500.0 AckTimeout=1.0 KeepAliveTime=1.0 MaxClientRate=20000 SimLatency=0 RelevantTimeout=5.0 SpawnPrioritySeconds=1.0 ServerTravelPause=4.0 NetServerMaxTickRate=20 LanServerMaxTickRate=35 StaticUpdateRate=12 DynamicUpdateRate=40 [IpDrv.TcpipConnection] SimPacketLoss=0 SimLatency=0 [IpServer.UdpServerQuery] GameName=deusex [IpDrv.UdpBeacon] DoBeacon=True BeaconTime=0.50 BeaconTimeout=5.0 BeaconPort=7776 BeaconProduct=DeusEx [SoftDrv.SoftwareRenderDevice] Translucency=True VolumetricLighting=True ShinySurfaces=False Coronas=False HighDetailActors=True HighResTextureSmooth=True LowResTextureSmooth=False FastTranslucency=True [GlideDrv.GlideRenderDevice] Translucency=True VolumetricLighting=True ShinySurfaces=True Coronas=True HighDetailActors=True DetailBias=-1.500000 RefreshRate=100Hz DetailTextures=True FastUglyRefresh=False ScreenSmoothing=True Resolution=Default [MetalDrv.MetalRenderDevice] Translucency=True VolumetricLighting=True ShinySurfaces=True Coronas=True HighDetailActors=True DetailTextures=True [OpenGLDrv.OpenGLRenderDevice] // This section assumes you have the updated OpenGL Renderer, if you do not, please skip this section. Translucency=True // Allows you to look through windows, shouldn't be disabled, even if you're struggling for performance, as it hardly affects performance VolumetricLighting=True // Should be set to to true, setting it to false might make lightbuttons not work anymore (including your light augmentation) ShinySurfaces=True // Setting it to false will make mirrors stop reflecting the environment. Coronas=False // Setting it to true will cause street lights to have a glare around the light. Doesn't really affect performance, so put it to whatever you like. HighDetailActors=False // Setting it to true will cause the actors to look more detailed, does affect performance quite a bit, so if you're struggling for fps, set it to false. DetailTextures=False // Setting it to true will cause objects to look more detailed, affects performance as well, so if you're struggling for fps, set it to false. UseTNT=False MinDepthBits=0 MaxLogUOverV=8 MaxLogVOverU=8 UseMultiTexture=True UsePalette=True // You should experiment around with this, some GFX cards perform better when this is toggled on, others do not. UseAlphaPalette=True // Should be set to True, unless you have a really old computer with very old buggy GeForce drivers ShareLists=False AlwaysMipmap=True DoPrecache=0 // Changing the value to 1, will make DX precache the maps every time you load them, making you have a little fps boost. There seems to be a bug however, making it precache the map every time you go to menu, causing a lot of annoyance after a while. UseTrilinear=False // Makes the textures look a bit more nice than before, effects performance though, so keep it to false when you're struggling for fps. MaxAnisotropy=0 SupportsLazyTextures=0 TruFormMinVertices=0 TruFormTessellation=3 UseTruForm=False AAFilterHint=0 NumAASamples=0 // Makes the edges of surfaces look better, put it either to 0, 2, 4, 6 or 8. 0 is no AA, 8 is max AA. Putting this to an other value than 0 will hurt your performance, so recommended to keep it to 0, when you're in dire need of fps. UseAA=False // Whether to use AA or not RequestHighResolutionZ=True MaskedTextureHack=True FrameRateLimit=0 // Computer controlled frame rate limiter in frames per second. Set to 0 to disable. SwapInterval=-1 // Controls V Sync. If set to the default value of -1, the default buffer swapping method is used. Set to 0 to disable V Sync. Set to 1 to enable V Sync. UseVertexProgram=False UseCVA=False UseMultiDrawArrays=False TexDXT1ToDXT3=False DynamicTexIdRecycleLevel=100 CacheStaticMaps=True UseTexPool=True UseTexIdPool=True UseSSE=True BufferClippedActorTris=True SinglePassDetail=True ColorizeDetailTextures=False DetailClipping=True // Enables the use of a somewhat experimental detail texture mode. It costs more CPU time, but may improve performance in fill rate limited situations. UseDetailAlpha=True RefreshRate=100 // Allows you to set a specific limit for your FPS to be at. (usually done, to lessen the strain on your computer) VSync has to be toggled on for this to work. MaxTMUnits=0 NoFiltering=False Use16BitTextures=True // Setting it to false will let you use 32 bit textures, which look better, but again decrease performance, set it to True, if you're struggling for FPS UseS3TC=False AutoGenerateMipmaps=False UsePrecache=False // Changing the value to 1, will make DX precache the maps every time you load them, making you have a little fps boost. There seems to be a bug however, making it precache the map every time you go to menu, causing a lot of annoyance after a while. UseBGRATextures=True UseZTrick=False MaxLogTextureSize=0 MinLogTextureSize=0 OneXBlending=False GammaCorrectScreenshots=False GammaOffsetBlue=0.000000 GammaOffsetGreen=0.000000 GammaOffsetRed=0.000000 GammaOffset=0.0000000 LODBias=1.100000 // Putting this to a positive value, wil cut the detail of textures, if they're far away from you, which will avoid your fps dropping massively when looking at a big part of the map. Putting it to a negative value will make textures blur less at long range, causing them to look better, but it will cut on your performance massively, especially when looking at a big part of the map. DescFlags=0 Description= ZRangeHack=True // Setting this to true will fix problems with decals flickering at long range. Please note that this is a \"hack\" and can result in something not displaying properly. SmoothMaskedTextures=False SceneNodeHack=True UseSSE2=True BufferTileQuads=True SinglePassFog=True DetailMax=0 NoMaskedS3TC=False [D3DDrv.D3DRenderDevice] Translucency=True // Setting it to false will make it impossible to look through windows and other translucent things VolumetricLighting=True // Should be set to to true, setting it to false might make lightbuttons not work anymore (including your light augmentation) ShinySurfaces=True // Setting it to false will make mirrors stop reflecting the environment. Coronas=False // Setting it to true will cause street lights to have a glare around the light. Doesn't really affect performance, so put it to whatever you like. HighDetailActors=False // Setting it to true will cause the actors to look more detailed, does affect performance quite a bit, so if you're struggling for fps, set it to false. UseMipmapping=True UseTrilinear=True // Whether to use Bilinear or Trilinear filtering, when set to true, graphics might look a bit better, with a minor performance loss UseMultitexture=True UsePageFlipping=True UsePalette=True // You should experiment around with this, some GFX cards perform better when this is toggled on, others do not. UseFullscreen=True // Whether to use fullscreen for DX or not. UseGammaCorrection=True DetailTextures=False // Setting it to false will increase performance at the cost of the quality of the texture detail. Use3dfx=False // Whether to use 3dfx or not, if you don't have a Voodoo card, leave this option on False UseTripleBuffering=True UsePrecache=True Use32BitTextures=True // Setting it to false will increase performance at the cost of the quality of the textures. DescFlags=1 dwDeviceId=16712 dwVendorId=4098 UseVertexFog=False UseAGPTextures=True UseVideoMemoryVB=False UseVSync=True // Setting this to false will stop your fps getting limited at a number (usually 60) For some, setting this to false will let them have higher fps. Others however seem to get higher fps as well, but it feels like very low fps. (worse than before) So it's recommended to try this out for yourself. Description=RADEON 9800 SERIES [SglDrv.SglRenderDevice] Translucency=True VolumetricLighting=False ShinySurfaces=False Coronas=True HighDetailActors=False ColorDepth=16 DetailTextures=False FastUglyRefresh=False TextureDetailBias=Near VertexLighting=False [Editor.EditorEngine] UseSound=True CacheSizeMegs=32 GridEnabled=True SnapVertices=True SnapDistance=10.000000 GridSize=(X=16.000000,Y=16.000000,Z=16.000000) RotGridEnabled=True RotGridSize=(Pitch=1024,Yaw=1024,Roll=1024) GameCommandLine=-log FovAngleDegrees=90.000000 GodMode=True AutoSave=False AutoSaveTimeMinutes=5 AutoSaveIndex=6 C_WorldBox=(R=0,G=0,B=107,A=0) C_GroundPlane=(R=0,G=0,B=63,A=0) C_GroundHighlight=(R=0,G=0,B=127,A=0) C_BrushWire=(R=255,G=63,B=63,A=0) C_Pivot=(R=0,G=255,B=0,A=0) C_Select=(R=0,G=0,B=127,A=0) C_AddWire=(R=127,G=127,B=255,A=0) C_SubtractWire=(R=255,G=192,B=63,A=0) C_GreyWire=(R=163,G=163,B=163,A=0) C_Invalid=(R=163,G=163,B=163,A=0) C_ActorWire=(R=127,G=63,B=0,A=0) C_ActorHiWire=(R=255,G=127,B=0,A=0) C_White=(R=255,G=255,B=255,A=0) C_SemiSolidWire=(R=127,G=255,B=0,A=0) C_NonSolidWire=(R=63,G=192,B=32,A=0) C_WireGridAxis=(R=119,G=119,B=119,A=0) C_ActorArrow=(R=163,G=0,B=0,A=0) C_ScaleBox=(R=151,G=67,B=11,A=0) C_ScaleBoxHi=(R=223,G=149,B=157,A=0) C_Mover=(R=255,G=0,B=255,A=0) C_OrthoBackground=(R=163,G=163,B=163,A=0) C_Current=(R=0,G=0,B=0,A=0) C_BrushVertex=(R=0,G=0,B=0,A=0) C_BrushSnap=(R=0,G=0,B=0,A=0) C_Black=(R=0,G=0,B=0,A=0) C_Mask=(R=0,G=0,B=0,A=0) C_WireBackground=(R=0,G=0,B=0,A=0) C_ZoneWire=(R=0,G=0,B=0,A=0) EditPackages=Core EditPackages=Engine EditPackages=Editor EditPackages=Fire EditPackages=IpDrv EditPackages=Extension EditPackages=DeusExUI EditPackages=ConSys EditPackages=DeusExConversations EditPackages=DeusExSounds EditPackages=DeusExItems EditPackages=DeusExDeco EditPackages=DeusExCharacters EditPackages=DeusExText EditPackages=DeusEx EditPackages=IpServer [DeusEx.DeusExGameInfo] bNoMonsters=False bHumansOnly=False bCoopWeaponMode=False bClassicDeathmessages=False [Engine.GameInfo] bLowGore=True bMuteSpectators=True bNoCheating=True bAllowFOV=False AutoAim=1.000000 GameSpeed=1.000000 MaxSpectators=2 AdminPassword=AdminPass GamePassword= MaxPlayers=8 IPPolicies[0]=ACCEPT,* IPPolicies[1]= IPPolicies[2]= IPPolicies[3]= IPPolicies[4]= IPPolicies[5]= IPPolicies[6]= IPPolicies[7]= IPPolicies[8]= IPPolicies[9]= IPPolicies[10]= IPPolicies[11]= IPPolicies[12]= IPPolicies[13]= IPPolicies[14]= IPPolicies[15]= IPPolicies[16]= IPPolicies[17]= IPPolicies[18]= IPPolicies[19]= IPPolicies[20]= IPPolicies[21]= IPPolicies[22]= IPPolicies[23]= IPPolicies[24]= IPPolicies[25]= IPPolicies[26]= IPPolicies[27]= IPPolicies[28]= IPPolicies[29]= IPPolicies[30]= IPPolicies[31]= IPPolicies[32]= IPPolicies[33]= IPPolicies[34]= IPPolicies[35]= IPPolicies[36]= IPPolicies[37]= IPPolicies[38]= IPPolicies[39]= IPPolicies[40]= IPPolicies[41]= IPPolicies[42]= IPPolicies[43]= IPPolicies[44]= IPPolicies[45]= IPPolicies[46]= IPPolicies[47]= IPPolicies[48]= IPPolicies[49]= ServerLogName=server.log bLocalLog=True bWorldLog=True bBatchLocal=False DemoBuild=0 DemoHasTuts=0 [Engine.DemoRecDriver] DemoSpectatorClass=UnrealShare.UnrealSpectator MaxClientRate=25000 ConnectionTimeout=15.0 InitialConnectTimeout=500.0 AckTimeout=1.0 KeepAliveTime=1.0 SimLatency=0 RelevantTimeout=5.0 SpawnPrioritySeconds=1.0 ServerTravelPause=4.0 NetServerMaxTickRate=60 LanServerMaxTickRate=60 [DeusEx.MenuScreenJoinGame] MasterServerAddress=master0.gamespy.com [Engine.GameReplicationInfo] ServerName= ShortName= [IpServer.UdpBeacon] BeaconProduct=DeusEx [WindowPositions] GameLog=(X=335,Y=28,XL=637,YL=545) ConfigPageRenderer=(X=5,Y=96,XL=516,YL=280) ConfigPageDriver=(X=5,Y=96,XL=516,YL=280) ConfigPageDetail=(X=5,Y=96,XL=516,YL=280) ConfigPageFirstTime=(X=5,Y=96,XL=516,YL=280) WizardDialog=(X=247,Y=151,XL=530,YL=436) Preferences=(X=390,Y=32,XL=352,YL=512) ConfigPageSafeMode=(X=5,Y=96,XL=516,YL=280) ConfigPageSafeOptions=(X=5,Y=96,XL=516,YL=280) [Engine.GameEngine] GameRenderDevice=Class'OpenGLDrv.OpenGLRenderDevice' AudioDevice=Class'Galaxy.GalaxyAudioSubsystem' Console=Class'Engine.Console' NetworkDevice=Class'IpDrv.TcpNetDriver' Language=None CacheSizeMegs=32 UseSound=True [DeusEx.dxmaplist] Maps[0]=DXMP_Silo Maps[1]=DXMP_Area51Bunker Maps[2]=DXMP_Cathedral Maps[3]=DXMP_Cmd Maps[4]=DXMP_Smuggler Maps[5]= Maps[6]= Maps[7]= Maps[8]= Maps[9]= Maps[10]= Maps[11]= Maps[12]= Maps[13]= Maps[14]= Maps[15]= Maps[16]= Maps[17]= Maps[18]= Maps[19]= Maps[20]= Maps[21]= Maps[22]= Maps[23]= Maps[24]= Maps[25]= Maps[26]= Maps[27]= Maps[28]= Maps[29]= Maps[30]= Maps[31]= MapSizes[0]=(6-10) MapSizes[1]=(8-14) MapSizes[2]=(8-14) MapSizes[3]=(12-16) MapSizes[4]=(2-6) MapSizes[5]= MapSizes[6]= MapSizes[7]= MapSizes[8]= MapSizes[9]= MapSizes[10]= MapSizes[11]= MapSizes[12]= MapSizes[13]= MapSizes[14]= MapSizes[15]= MapSizes[16]= MapSizes[17]= MapSizes[18]= MapSizes[19]= MapSizes[20]= MapSizes[21]= MapSizes[22]= MapSizes[23]= MapSizes[24]= MapSizes[25]= MapSizes[26]= MapSizes[27]= MapSizes[28]= MapSizes[29]= MapSizes[30]= MapSizes[31]= MapNum=4 CycleType=0 [Engine.MapList] Maps[0]= Maps[1]= Maps[2]= Maps[3]= Maps[4]= Maps[5]= Maps[6]= Maps[7]= Maps[8]= Maps[9]= Maps[10]= Maps[11]= Maps[12]= Maps[13]= Maps[14]= Maps[15]= Maps[16]= Maps[17]= Maps[18]= Maps[19]= Maps[20]= Maps[21]= Maps[22]= Maps[23]= Maps[24]= Maps[25]= Maps[26]= Maps[27]= Maps[28]= Maps[29]= Maps[30]= Maps[31]= MapNum=0 [DeusEx.DeusExMPGame] SkillsTotal=2000 SkillsAvail=0 SkillsPerKill=0 InitialAugs=0 AugsPerKill=0 ScoreToWin=25 VictoryCondition=Time MPSkillStartLevel=3 CurrentMap=DXMP_Cmd fFriendlyFireMult=0.000000 bTrackWeapons=False bNoMonsters=False bHumansOnly=False bCoopWeaponMode=False bClassicDeathMessages=False [IpServer.UdpServerUplink] DoUplink=False UpdateMinutes=1 MasterServerAddress=779 MasterServerPort=1544172281 Region=0 [DeusEx.menuscreenhostgame] CurrentGameType=DeusEx.DeathMatchGame ServerMode=1 [DXMTL152b1.MTLAdvTeam] bNoMonsters=False bHumansOnly=False bCoopWeaponMode=False bClassicDeathMessages=False [D3D8Drv.D3D8RenderDevice] ZRangeHack=True // Setting this to true will fix problems with decals flickering at long range. Please note that this is a \"hack\" and can result in something not displaying properly. NumAASamples=0 // Makes the edges of surfaces look better, put it either to 0, 2, 4, 6 or 8. 0 is no AA, 8 is max AA. Putting this to an other value than 0 will hurt your performance, so recommended to keep it to 0, when you're in dire need of fps. UseAA=False // Whether to use AA or not RequestHighResolutionZ=True UseSoftwareVertexProcessing=False UsePureDevice=False UseTripleBuffering=False MaskedTextureHack=False SmoothMaskedTextures=False SceneNodeHack=False FrameRateLimit=0 //CPU controlled frame rate limiter in frames per second. Set to 0 to disable. (This won't work if your driver doesn't let the application decide on these options.) SwapInterval=-1 // Controls V Sync. If set to the default value of -1, the default buffer swapping method is used. Set to 0 to disable V Sync. Set to 1 to enable V Sync. UseVertexProgram=False TexDXT1ToDXT3=False DynamicTexIdRecycleLevel=100 CacheStaticMaps=False UseTexPool=True UseTexIdPool=True UseSSE2=True UseSSE=True BufferTileQuads=True BufferClippedActorTris=True SinglePassDetail=False SinglePassFog=False ColorizeDetailTextures=False DetailClipping=True // Enables the use of a somewhat experimental detail texture mode. It costs more CPU time, but may improve performance in fill rate limited situations. UseDetailAlpha=True DetailMax=0 RefreshRate=85 // Allows you to set a limit on your fps, sometimes it's required, for those who get a really messed up DX when there's no frame limit. Please note that if you have disabled vsync in your driver's options, that it simply won't work. MaxTMUnits=0 NoFiltering=False MaxAnisotropy=0 Use16BitTextures=True // Setting this to False will make stuff look better, at the cost of performance UseS3TC=False UseAlphaPalette=False UseTrilinear=False UsePrecache=False UsePalette=True // You should experiment around with this, some GFX cards perform better when this is toggled on, others do not. UseMultiTexture=True MaxLogTextureSize=8 MinLogTextureSize=0 MaxLogVOverU=8 MaxLogUOverV=8 OneXBlending=True GammaCorrectScreenshots=False GammaOffsetBlue=0.000000 GammaOffsetGreen=0.000000 GammaOffsetRed=0.000000 GammaOffset=0.000000 LODBias=1.100000 // Putting this to a positive value, wil cut the detail of textures, if they're far away from you, which will avoid your fps dropping massively when looking at a big part of the map. Putting it to a negative value will make textures blur less at long range, causing them to look better, but it will cut on your performance massively, especially when looking at a big part of the map. DetailTextures=True // Setting this option to false will increase performance at cost of quality DescFlags=0 Description= HighDetailActors=False // Setting it to true will cause the actors to look more detailed, does affect performance quite a bit, so if you're struggling for fps, set it to false. Coronas=False // Setting it to true will cause street lights to have a glare around the light. Doesn't really affect performance, so put it to whatever you like. ShinySurfaces=True // Setting it to false will make mirrors stop reflecting the environment. VolumetricLighting=True // Should be set to to true, setting it to false might make lightbuttons not work anymore (including your light augmentation) [DXMTL152b1.MTLGameInfo] bNoMonsters=False bHumansOnly=False bCoopWeaponMode=False bClassicDeathMessages=False","title":"INI settings"},{"location":"inventory/","text":"Deus Ex Knowledge Base # WIP.","title":"Inventory"},{"location":"inventory/#deus-ex-knowledge-base","text":"WIP.","title":"Deus Ex Knowledge Base"},{"location":"mapping/","text":"Where to start? # Editor's Note: The links here may be outdated or broken. Let us know in the Discord if you want to help revive this page! So many articles have been written about Deus Ex mapping in the Internet, so we decided to write only those things which were not mentioned anywhere. Therefore, you will not find any newbie guides to mapping in our Knowledge Base \u2014 instead, you may check one of the links below. A sneak peak # A software development kit for Deus Ex was released in 2000 as a free download. \"Software development kit\" stands for a set of programs that you may use to alter the original game or make add-ons. SDK includes: UnrealEd \u2014 a program for designing levels and mods, ConEdit \u2014 a program to create conversations and also some documentation with C++ headers. You may download SDK (6.3 MB). If your SDK doesn't start, most likely you don't have ConEdit installed \u2014 it's required. Screenshot \u2014 UnrealEd 1 from SDK: Editor's Note: MISSING - Need an image of UED UnrealEd may seem to be a complicated program, but after reading a small guide you'll realize that it isn't. Many people used it: there are over 350+ maps created for the multiplayer and a plenty of single-players mods which present that UnrealEd may be used in a variety of styles and aims. Mapping for Deus Ex doesn't require knowledge of any programming language, unless you want to add something custom. Mapping doesn't require knowledge of 3D Studio Max or any simular modelling programs, because Deus Ex doesn't use static meshes. Deus Ex editing community could be divided into those, who prefer UnrealEd 1 and those, who prefer UnrealEd 2. Originally Deus Ex SDK comes with UnrealEd 1, but later fans of Deus Ex have managed to adapt UnrealEd 2 for Deus Ex, too. Though there was a problem of not displaying models in the game, it was later fixed. UnrealEd 2 is the next version of UnrealEd 1 and it includes many bug fixes and new features, yet it has a new interface which may not seem comfortable for those who got used to UnrealEd 1. However, you can't replace SDK with UnrealEd 2 - you should have SDK installed too. There are some problems with both editors. The biggest problem is crashing (aka \"general protection faults\"\"). Editors crash from time to time and if you work wasn't saved, it is most likely gone. Therefore, save your maps and also make backups. The second problem is BSP geometry bugs. This thing is so complicated by nature as it is called. To put it simply, sometimes when you don't attach brushes properly and don't use grid snapping, there may appear big black holes in geometry or invisible walls, which sometimes cause player's death. However, this doubtfully will happen in small maps. There are a few things you won't be able to do without dealing with certain problems: Day, because Deus Ex engine isn't so good to process day shadows properly. Terrain. The only type of terrain you may use in the current engine - BSP based terrain - is quite glitchy and laggy, even on good computers. It has to be as simple as possible, and you have to build the rest of geometry accurately. There are no alternative programs to Unreal Editors for building maps. There are not many differences between mapping for the singleplayer and multiplayer, except multiplayer maps don't require pathnodes (unless it's supposed to be a TNAG modification map). For multiplayer maps, don't forget to add bots (medical and repair ones), goodies such as medkits and biocells, and spawnpoints. You may also use non-standard textures, music and scripts for your map. ### Where to start from Don't forget that Deus Ex is based on Unreal engine, which was also used for Unreal Tournament, Unreal, Rune, Lineage, Pariah and dozens of other games. Unreal Editing community is one of the biggest modding communities in the world, and they wrote many good tutorials, so you're not limited only to Deus Ex editing sites. Tack's Deus Ex Lab \u2014 one of the best sites about editing. Constructor \u2014 also, a very good site with tutorials for beginners. Deus Ex Mappers Society Wolf's Unreal + see also: beginners tutorial , keyboard shotcuts . Unreal Wiki \u2014 the biggest resource for all Unreal Engine based games. If you got a question which wasn't answered anywhere, feel free to ask on our Discord (Linked in the sidebar). Adding mods. # Contents: I: Information on installing a Mod II: Information on gathering Summon Commands. III: FAQ ( Frequently Asked Questions ) IIII: Contact Help I: Information on installing a Mod Installing a mod can be simple enough, if you understand it. If you have not installed a mod before however, it can appear to be abit complicated. I am going to try to explain how to install Mods correctly. If I make any mistakes or anyone feels that something else should be included here, please post below. Before we begin, it is essential that you make sure you actually HAVE a mod on your computer. But it can't just be anywhere, you must place it in: C: >> DeusEx >> System. By Default this will be where you need to put it unless you custom configured it. However, it requires more than just placing the file in your system folder. Next we need to find something called the DeusEx INI. Never heard of it? Not a problem. By default, the file will be located in C: >> DeusEx >> System. The file will be called \"DeusEx.\" If you can't find it, here\u2019s a picture to help you out: Ok, hopefully you have found it now. Don't go on unless you have found it. Right, so you have now found the INI. This is a general picture of what it should look like when it\u2019s been opened. If it doesn\u2019t look like this then you have the wrong file: Inside the INI you can do a lot of things apart from alter what Mods you have including; Changing the server name, altering the server stats (E.g. what augs you start with, skill level E.C.T.) What your admin password is, controlling who is banned from your server and a few other things. However, we are going to be concentrating on adding Mods for the time being. You will probably notice titles at the top of each category, such as in the screen shot above, you can see the titles: [URL] [FirstRun] And [Engine.Engine] Ok, well we want to find the title: [Editor.EditorEngine] (Located about half way down the page) Scroll down abit from that title and you should notice a section that looks like: That\u2019s basically the hardest part out of the way, now you just need to add the correct EditPackages in. If you take my example (I am using CaroneElevatorSet) then I would add in the line EditPackages=CaroneElevatorSet However, you must make sure you add the line in the correct place, at The Bottom of the list. If you are unsure of what to add after EditPackages= for your mod, then firstly, check if there was a ReadMe with the mod you got. That may have instructions in that tell you what to call it. If you don't have that, then your best chance is either to contact the Mod maker, or simply add the entire mod name after the EditPackages= But, also make sure that you do not add the file extension. For example, a system folder should have the file extension .u, like my CaroneElevatorSet mod. But you do not add the file extension on the end of the Editpackages=. EditPackages=CaroneElevatorSet Right When This Is Wrong: EditPackages=CaroneElevatorSet.u WRONG Ok, so once you have added the line, Click file, Save . Or if your technical Ctrl + S. And that\u2019s it! II: Information on gathering Summon Command Info. If you wish to add a mod that allows you to summon items such as special guns E.C.T into your map, then you will have to contact the Mod maker for information on the summon codes. Or you can do this: To find Summon names of items... If you have SDK (Deus Ex Level editor)... Go to it. On the right side, click on classes, then items. From there, you can find all of the names for each item, weapon and decoration in the game. If you have installed a mod, the weapons or whatever will also appear in the list, in another section. III: FAQ ( Frequently Asked Questions ) Q: What if I'm trying to add something but it requires more than just being added into the EditPackages= List. A: If you are adding something like a MTL mod, then there may be extra things you need to add to your INI to get it to work. But you should have a ReadMe with your mod for that anyway. However if you don't, contact the mod maker or someone else with info on how to correctly install this mod. Q: I can't find any of the DeusEx files in the directory you specified. A: If your files are not in the directory I specified earlier, than you have set a custom installation folder. When you installed the game, you may have choosen a specific place for the DeusEx files to be installed. If you can't remember where this is, go to Start>>>Search, and search for the term DeusEx. Q: I don't have SDK so I can't look at the summons like, what else can I do? A: You may find this tool useful known as The WOTGReal Exporter. It works with any unreal engine game ( DeusEx Included ofcourse ) and can let you see source and classnames. You can export with it: meshes, models, textures sounds etc. Download it at www.WOTGreal.com ( Thanks to Cozmo for the info on that one. ) In addition, alot of mods are protected by Nobodys Mod Protecter. Q: I have a mod but i'm not sure where to put it in my DeusEx Folder. A: This is a common question, this list should provide the info you need: .u ---> System .dx --->Maps .uax --->Sounds .umx --->Music .utx --->Textures IIII: Contact Help. If you have any questions or theirs still anything your unsure about, feel free to email me or post on www.dxalpha.com (This is an old guide imported by myself, sorry for the somewhat poor layout, also hence the old logo at the bottom).","title":"Mapping"},{"location":"mapping/#where-to-start","text":"Editor's Note: The links here may be outdated or broken. Let us know in the Discord if you want to help revive this page! So many articles have been written about Deus Ex mapping in the Internet, so we decided to write only those things which were not mentioned anywhere. Therefore, you will not find any newbie guides to mapping in our Knowledge Base \u2014 instead, you may check one of the links below.","title":"Where to start?"},{"location":"mapping/#a-sneak-peak","text":"A software development kit for Deus Ex was released in 2000 as a free download. \"Software development kit\" stands for a set of programs that you may use to alter the original game or make add-ons. SDK includes: UnrealEd \u2014 a program for designing levels and mods, ConEdit \u2014 a program to create conversations and also some documentation with C++ headers. You may download SDK (6.3 MB). If your SDK doesn't start, most likely you don't have ConEdit installed \u2014 it's required. Screenshot \u2014 UnrealEd 1 from SDK: Editor's Note: MISSING - Need an image of UED UnrealEd may seem to be a complicated program, but after reading a small guide you'll realize that it isn't. Many people used it: there are over 350+ maps created for the multiplayer and a plenty of single-players mods which present that UnrealEd may be used in a variety of styles and aims. Mapping for Deus Ex doesn't require knowledge of any programming language, unless you want to add something custom. Mapping doesn't require knowledge of 3D Studio Max or any simular modelling programs, because Deus Ex doesn't use static meshes. Deus Ex editing community could be divided into those, who prefer UnrealEd 1 and those, who prefer UnrealEd 2. Originally Deus Ex SDK comes with UnrealEd 1, but later fans of Deus Ex have managed to adapt UnrealEd 2 for Deus Ex, too. Though there was a problem of not displaying models in the game, it was later fixed. UnrealEd 2 is the next version of UnrealEd 1 and it includes many bug fixes and new features, yet it has a new interface which may not seem comfortable for those who got used to UnrealEd 1. However, you can't replace SDK with UnrealEd 2 - you should have SDK installed too. There are some problems with both editors. The biggest problem is crashing (aka \"general protection faults\"\"). Editors crash from time to time and if you work wasn't saved, it is most likely gone. Therefore, save your maps and also make backups. The second problem is BSP geometry bugs. This thing is so complicated by nature as it is called. To put it simply, sometimes when you don't attach brushes properly and don't use grid snapping, there may appear big black holes in geometry or invisible walls, which sometimes cause player's death. However, this doubtfully will happen in small maps. There are a few things you won't be able to do without dealing with certain problems: Day, because Deus Ex engine isn't so good to process day shadows properly. Terrain. The only type of terrain you may use in the current engine - BSP based terrain - is quite glitchy and laggy, even on good computers. It has to be as simple as possible, and you have to build the rest of geometry accurately. There are no alternative programs to Unreal Editors for building maps. There are not many differences between mapping for the singleplayer and multiplayer, except multiplayer maps don't require pathnodes (unless it's supposed to be a TNAG modification map). For multiplayer maps, don't forget to add bots (medical and repair ones), goodies such as medkits and biocells, and spawnpoints. You may also use non-standard textures, music and scripts for your map. ### Where to start from Don't forget that Deus Ex is based on Unreal engine, which was also used for Unreal Tournament, Unreal, Rune, Lineage, Pariah and dozens of other games. Unreal Editing community is one of the biggest modding communities in the world, and they wrote many good tutorials, so you're not limited only to Deus Ex editing sites. Tack's Deus Ex Lab \u2014 one of the best sites about editing. Constructor \u2014 also, a very good site with tutorials for beginners. Deus Ex Mappers Society Wolf's Unreal + see also: beginners tutorial , keyboard shotcuts . Unreal Wiki \u2014 the biggest resource for all Unreal Engine based games. If you got a question which wasn't answered anywhere, feel free to ask on our Discord (Linked in the sidebar).","title":"A sneak peak"},{"location":"mapping/#adding-mods","text":"Contents: I: Information on installing a Mod II: Information on gathering Summon Commands. III: FAQ ( Frequently Asked Questions ) IIII: Contact Help I: Information on installing a Mod Installing a mod can be simple enough, if you understand it. If you have not installed a mod before however, it can appear to be abit complicated. I am going to try to explain how to install Mods correctly. If I make any mistakes or anyone feels that something else should be included here, please post below. Before we begin, it is essential that you make sure you actually HAVE a mod on your computer. But it can't just be anywhere, you must place it in: C: >> DeusEx >> System. By Default this will be where you need to put it unless you custom configured it. However, it requires more than just placing the file in your system folder. Next we need to find something called the DeusEx INI. Never heard of it? Not a problem. By default, the file will be located in C: >> DeusEx >> System. The file will be called \"DeusEx.\" If you can't find it, here\u2019s a picture to help you out: Ok, hopefully you have found it now. Don't go on unless you have found it. Right, so you have now found the INI. This is a general picture of what it should look like when it\u2019s been opened. If it doesn\u2019t look like this then you have the wrong file: Inside the INI you can do a lot of things apart from alter what Mods you have including; Changing the server name, altering the server stats (E.g. what augs you start with, skill level E.C.T.) What your admin password is, controlling who is banned from your server and a few other things. However, we are going to be concentrating on adding Mods for the time being. You will probably notice titles at the top of each category, such as in the screen shot above, you can see the titles: [URL] [FirstRun] And [Engine.Engine] Ok, well we want to find the title: [Editor.EditorEngine] (Located about half way down the page) Scroll down abit from that title and you should notice a section that looks like: That\u2019s basically the hardest part out of the way, now you just need to add the correct EditPackages in. If you take my example (I am using CaroneElevatorSet) then I would add in the line EditPackages=CaroneElevatorSet However, you must make sure you add the line in the correct place, at The Bottom of the list. If you are unsure of what to add after EditPackages= for your mod, then firstly, check if there was a ReadMe with the mod you got. That may have instructions in that tell you what to call it. If you don't have that, then your best chance is either to contact the Mod maker, or simply add the entire mod name after the EditPackages= But, also make sure that you do not add the file extension. For example, a system folder should have the file extension .u, like my CaroneElevatorSet mod. But you do not add the file extension on the end of the Editpackages=. EditPackages=CaroneElevatorSet Right When This Is Wrong: EditPackages=CaroneElevatorSet.u WRONG Ok, so once you have added the line, Click file, Save . Or if your technical Ctrl + S. And that\u2019s it! II: Information on gathering Summon Command Info. If you wish to add a mod that allows you to summon items such as special guns E.C.T into your map, then you will have to contact the Mod maker for information on the summon codes. Or you can do this: To find Summon names of items... If you have SDK (Deus Ex Level editor)... Go to it. On the right side, click on classes, then items. From there, you can find all of the names for each item, weapon and decoration in the game. If you have installed a mod, the weapons or whatever will also appear in the list, in another section. III: FAQ ( Frequently Asked Questions ) Q: What if I'm trying to add something but it requires more than just being added into the EditPackages= List. A: If you are adding something like a MTL mod, then there may be extra things you need to add to your INI to get it to work. But you should have a ReadMe with your mod for that anyway. However if you don't, contact the mod maker or someone else with info on how to correctly install this mod. Q: I can't find any of the DeusEx files in the directory you specified. A: If your files are not in the directory I specified earlier, than you have set a custom installation folder. When you installed the game, you may have choosen a specific place for the DeusEx files to be installed. If you can't remember where this is, go to Start>>>Search, and search for the term DeusEx. Q: I don't have SDK so I can't look at the summons like, what else can I do? A: You may find this tool useful known as The WOTGReal Exporter. It works with any unreal engine game ( DeusEx Included ofcourse ) and can let you see source and classnames. You can export with it: meshes, models, textures sounds etc. Download it at www.WOTGreal.com ( Thanks to Cozmo for the info on that one. ) In addition, alot of mods are protected by Nobodys Mod Protecter. Q: I have a mod but i'm not sure where to put it in my DeusEx Folder. A: This is a common question, this list should provide the info you need: .u ---> System .dx --->Maps .uax --->Sounds .umx --->Music .utx --->Textures IIII: Contact Help. If you have any questions or theirs still anything your unsure about, feel free to email me or post on www.dxalpha.com (This is an old guide imported by myself, sorry for the somewhat poor layout, also hence the old logo at the bottom).","title":"Adding mods."},{"location":"multiplayer/","text":"Gametypes # Standard Gametypes # ATDM \u2014 Advanced Team Deathmatch BTDM \u2014 Basic Team Deathmatch CTDM \u2014 Custom Team Deathmatch DM \u2014 DeathMatch In truth, there are many game types in Deus Ex Multiplayer. These vary from the standard Deathmatch to the more creative DXAG. This guide will follow some of the most popularly played and appreciated gametypes created to this date. Advanced Team Deathmatch (ATDM) This is one of the more played Deus Ex gametype. The tempo of an augged game is a lot faster than that of a 0-aug. With the use of such augs as Ballistic protection and speed aug, enemies become increasingly difficult to kill, demanding more and more skill to kill as the players develop better tactics at the game. This gametype does demand alot of will and patients. With the necessity to gain augs and skill points as you score points, survival is just as important as killing. Basic Team Deathmatch (BTDM) This gametype is popular for featuring maxed-out skills as well as augs. This gametype will often either have full augs or a set limit with no possible way of increasing it. Unlike ATDM, patients is not a crucial factor of this mode. Although you may want to keep your death-ratio down, you do not have to fear losing your well-earned skill points and augs, as you will simply respawn with what you died with. Zero-augs Exactly as it sounds. This gametype is frowned upon by some of the DeusEx community as not being a \"pure part\" of the game, as 0-Augs came after Augs. Many disputes and rivalrys have been created over this, each side fighting for what they believe is the best. Active members of DeusEx will be aware of these never-ending disputes. Skill-points are often at Maxed-out level. 0-Augs is somewhat slower than an augged game, as players don't have augs to fall back on, and fights are often quite short but frequent because of this. Created Gametypes # TNAG This gametype is often featured on the servers \"Altfire,\" famous for their German clan, [FGS] The famously coded guns featured within this gametype are expertly created. Their main feature is called \"AltFire.\" Typing altfire with a gun out with perform an \"Alternate fire\", as the name suggests. This can different from shooting a large projectile instead of a thin laser, from bouncing discs to exploding on impact ones. The mod overall is cleverly done and worth playing without a doubt. Deus Ex Arx Genus (DXAG) This gametype truely is revolutionary. Once spawned, it is the players choice to choose between 5 classes: Engineer, Assassin, Sniper, Soldier, Medic. Each have different features, for example, the medic can heal others and the engineer can take over turrets and open multitool-locked doors. To successfully dominate a level, teamwork is essential. For example, to take the comm turret on Area51, an assassin must open the door with a lockpick, and an engineer must open the case containing the console. The mod is still in development, with new classes, updates and maps being created all the time. Deus Ex StarGate (DXSG) Created by [A]Nobody himself. This small but cleverly made gametype. If you have ever seen Stargate on TV (It's hard not to of), then you will recognize the Goa'uld Ring-Transporters placed throughout the maps. Entering a code, such as 27, will activate the transporters. Stepping into these as they descend will teleport you in a flash of nicely created animation and sound to the specified destination. A server is often hosted as of late that features this gametype. Unique weapons are also placed within the maps for a more \"Stargate feel.\" These include the Neutron Bomb and Sclaw. Jim Bowen's Once again, a cleverly created gametype that features many interesting and unusual weapons! Some of these include mine launchers, portable turrets, teleporting grenades, flashbangs and force rifles. A server hosting this is always a good laugh, and as-long as you\u2019re not one of those who complain about dying a lot from explosives, then you should be fine! Capture the Flag (CTF) This is, sadly, a rarely played game type. I have only ever seen it hosted twice in my time of playing. The main reason is due to the fact it isn't MTL supported. Another words, the server can't have MTL running if it wishes to host CTF. This is a major problem as many/all servers now host MTL. If they don't, they soon update to it. It is in all, however, a cleverly made mod, and if a MTL version was created, would have a lot more popularity. ANNA ANNA is a new gametype mod based on MTL and CRD aiming mostly at anticheats. OpenDX OpenDX is an advanced gameplay mod aiming to add modern features and gametypes, while fixing many bugs and anticheats. Replication # What is it? # Replication, in basic terms, is the system in which information about the current server state is stored and distributed among the clients. If something happens on one client, its then \"replicated\" to the server, which syncs up with the other clients, to keep the state of the world persistant. Resources # Introduction to Replication in the Unreal engine Replication overview Unreal Replication Informatio Networking in Unreal Replication Capturing the game # Screenshots # Screenshot or screen capture is is an image taken by the computer to record the visible items on the monitor (source: Wikipedia article ) . You may assign a button for taking screenshots in Deus Ex-> Settings -> Keyboard/Mouse. However the button doesn't work when the game ends, therefore if you want to take a screenshot of a scoreboard when the match ended, type a console command \"shot\" or \"sshot\" (in other words: press \"T\", erase \"Say\" and type either \"shot\" or \"sshot\"). If you want to assign it to another button which is not available in Settings -> Keyboard/Mouse window, you may bind it in User.ini (as already mentioned, the command is \"shot\" or \"sshot\"). The screenshot will appear in /System/ directory of your Deus Ex folder and the file name will look like Shot0001.bmp (Windows bitmap format). Note that Deus Ex has a limit of 255 screenshots. When you reach the limit, Deus Ex won't be making any more screenshots until you move the existing 255 screenshots to another place. You may put them to .zip or .rar archive to reduce disk space they use. If you're willing to post a screenshot to the Internet, convert it to JPG or GIF format to reduce size (usually .bmp files are 10x times bigger than their .jpg analogues). There are hundreds of programs that could do that (e.g. Adobe Photoshop, Photopaint or even ACDSee) including a newer version of MS Paint which is included to every Windows version. In case with MS Paint, just open a screenshot and \"save it as\" .jpg file. Renaming the file in Windows won't change the format, but just a file name. If you want to make a screenshot without a HUD (user interface), type a console command: showhud false When you want to restore HUD, just go to the main menu and return back. Or instead you may type showhud true You may also experiment with FOV (angle of view). Type a console command fov [value] , e.g. fov 95 . Default FOV is 85 (or 75 in older Deus Ex versions). If you're willing to make something peculiar, try setting game speed to a lower value (if you're in multiplayer, you will need to be an admin + that will affect all the players on the server), e.g.: slomo 0.5 (or if your server uses DXMTL, admin slomo 0.5 ). You will move slower and it will be easier to find a suitable location. Default game speed ( slomo ) value is 1. Making a screenshot from a different resolution is also very easy. Use a console command setres, e.g. setres 1024x768 (1024 is desired width, 768 is desired height). If your desired resolution is smaller than your normal resolution, your Deus Ex will have to expand to the new resolution. This will not affect the resolution of screenshots, but may be a bit unsuitable to play. If so, switch to the windowed mode (Alt + Enter or togglefullscreen command). For some unknown reason Deus Ex in windowed mode in some resolutions doesn't make screenshots properly (the image is distorted). You may also try a special program for making screenshots, instead of using a built in function. Pick a free program from this list . Print screen button on your keyboard would also do that job, but after you press it you need to launch an image editor (e.g. MS Paint), paste it there and save somewhere. Demorec # What are demo recordings? # Demo recording or so-called \"demorec\" is a recording of a game from 1st person view; to put it simply \u2014 a video of a game from eyes of the recorder. A demo recording done by a player in Deus Ex could be seen by other player who has Deus Ex and all the mods that were used during the recording (e.g., if it's a DXSG server, the viewer should have DXSG files and maps). A file with a demo recording (it has .dem extenstion and is located in DeusEx/System folder) contains only information about events that happened during the game, not the frames (pictures) themselves, and what a viewer sees is imitated by Deus Ex each time demo is played. Unlike video, you may enable a score board whenever you want, or type \"ping\" to see ping the recorder had, just like you would do in normal game. Demo recordings are usually hundred of times smaller than video files. An uncompressed video file in .avi format of 20 minutes of gameplay would take more than 2 GBs of diskspace, while a demorec would only need 6-9 MBs (depending on amount of players). Demo recordings are perfect way to learn how do others play the game and significantly improve one's skills. They are also used during the clanwars for later examination of strategies or just keeping track of scores, which may suddenly nullify due to technical problems. There are no ways to edit demo recordings yet, thus they may be used as an alibi for pleading not guilty in cheating. You will not be able to play or record demorecs if you didn't patch your Deus Ex beforehand. A patch is just a single file which you should place to your DeusEx/System folder (the patch is also called \"Engine.dll fix\") \u2014 you may download it here (0.5 MB). Where to get them from # You may try downloading files from our File Archive or ask other players to send them to you. Many players do record their games from time to time, but rare ones share demos publicly (unlike for example, [3]Messiah, who's posted over 150 MBs of demorecs, which you may find in our Archive in folder named \"Messiah\" or here ). Viewing # You have to patch your Deus Ex with \"Engine.dll fix\" (see link and description above) beforehand. Place a demo recording, e.g., myfirstdemorec.dem , to DeusEx/System directory. Open Deus Ex. Press \"T\" and in the left bottom corner of your screen erase \"Say\". Type ( myfirstdemorec is an example \u2014 replace it with the name of your recording) demoplay myfirstdemorec To stop watching, type stopdemo Note: If demo runs too fast, add ?timebased to the demoplay command, i.e.: demoplay myfirstdemorec?timebased As mentioned above, you will need all the files that were used on the server, e.g. maps, textures, etc; otherwise Deus Ex will crash. Some demo recordings are \"broken\" and they don't work at all \u2014 Deus Ex always crashes. Sometimes Deus Ex crashes a few times when starting playing a demo, but eventually it will play it (just try several times). Sometimes Deus Ex crashes when demos are played one after another. To avoid this, after stopping watching demo, go to \"Credits\" and return back. This helps in most cases, but not in all. You will watch it with ugly black translucent user interface. Unfortunately, there is no solution. If you want to exit game type either stopdemo and then go to the menu, or just type exit . Your screen will shiver when the person, who records it, crouches. No solution to this either. If the crosshair shiver, it doesn't mean that the person whom you watch, was shivering. It's just another unfixed problem. Augmentations like vision may not work correctly. E.g. vision may be enabled, but the viewer of a recording won't see anything and it may seem that the player aims at invisible opponents. You will need to press \"Esc\" manually after a person was killed (to get rid of red message) and after hacking computers. You may see a score board, use \"ping\", \"stat net\" and other commands, just like in normal game. You will not see how the player types (just their messages) and you will not see Recording # Recording is easier. While in game, type demorec myfirstdemorec where myfirstdemorec is the name of your recording. To stop demo recording type: demostop After recording you'll find a new file in your DeusEx/System folder. Note: When sharing it: Don't forget to compress it into .zip or .rar archive. Don't forget to include (at least in a readme text file) what server it was played on and what mods/maps the recording requires. Don't forget that its boring to watch a recording with active chat from your party :-)","title":"Multiplayer"},{"location":"multiplayer/#gametypes","text":"","title":"Gametypes"},{"location":"multiplayer/#standard-gametypes","text":"ATDM \u2014 Advanced Team Deathmatch BTDM \u2014 Basic Team Deathmatch CTDM \u2014 Custom Team Deathmatch DM \u2014 DeathMatch In truth, there are many game types in Deus Ex Multiplayer. These vary from the standard Deathmatch to the more creative DXAG. This guide will follow some of the most popularly played and appreciated gametypes created to this date. Advanced Team Deathmatch (ATDM) This is one of the more played Deus Ex gametype. The tempo of an augged game is a lot faster than that of a 0-aug. With the use of such augs as Ballistic protection and speed aug, enemies become increasingly difficult to kill, demanding more and more skill to kill as the players develop better tactics at the game. This gametype does demand alot of will and patients. With the necessity to gain augs and skill points as you score points, survival is just as important as killing. Basic Team Deathmatch (BTDM) This gametype is popular for featuring maxed-out skills as well as augs. This gametype will often either have full augs or a set limit with no possible way of increasing it. Unlike ATDM, patients is not a crucial factor of this mode. Although you may want to keep your death-ratio down, you do not have to fear losing your well-earned skill points and augs, as you will simply respawn with what you died with. Zero-augs Exactly as it sounds. This gametype is frowned upon by some of the DeusEx community as not being a \"pure part\" of the game, as 0-Augs came after Augs. Many disputes and rivalrys have been created over this, each side fighting for what they believe is the best. Active members of DeusEx will be aware of these never-ending disputes. Skill-points are often at Maxed-out level. 0-Augs is somewhat slower than an augged game, as players don't have augs to fall back on, and fights are often quite short but frequent because of this.","title":"Standard Gametypes"},{"location":"multiplayer/#created-gametypes","text":"TNAG This gametype is often featured on the servers \"Altfire,\" famous for their German clan, [FGS] The famously coded guns featured within this gametype are expertly created. Their main feature is called \"AltFire.\" Typing altfire with a gun out with perform an \"Alternate fire\", as the name suggests. This can different from shooting a large projectile instead of a thin laser, from bouncing discs to exploding on impact ones. The mod overall is cleverly done and worth playing without a doubt. Deus Ex Arx Genus (DXAG) This gametype truely is revolutionary. Once spawned, it is the players choice to choose between 5 classes: Engineer, Assassin, Sniper, Soldier, Medic. Each have different features, for example, the medic can heal others and the engineer can take over turrets and open multitool-locked doors. To successfully dominate a level, teamwork is essential. For example, to take the comm turret on Area51, an assassin must open the door with a lockpick, and an engineer must open the case containing the console. The mod is still in development, with new classes, updates and maps being created all the time. Deus Ex StarGate (DXSG) Created by [A]Nobody himself. This small but cleverly made gametype. If you have ever seen Stargate on TV (It's hard not to of), then you will recognize the Goa'uld Ring-Transporters placed throughout the maps. Entering a code, such as 27, will activate the transporters. Stepping into these as they descend will teleport you in a flash of nicely created animation and sound to the specified destination. A server is often hosted as of late that features this gametype. Unique weapons are also placed within the maps for a more \"Stargate feel.\" These include the Neutron Bomb and Sclaw. Jim Bowen's Once again, a cleverly created gametype that features many interesting and unusual weapons! Some of these include mine launchers, portable turrets, teleporting grenades, flashbangs and force rifles. A server hosting this is always a good laugh, and as-long as you\u2019re not one of those who complain about dying a lot from explosives, then you should be fine! Capture the Flag (CTF) This is, sadly, a rarely played game type. I have only ever seen it hosted twice in my time of playing. The main reason is due to the fact it isn't MTL supported. Another words, the server can't have MTL running if it wishes to host CTF. This is a major problem as many/all servers now host MTL. If they don't, they soon update to it. It is in all, however, a cleverly made mod, and if a MTL version was created, would have a lot more popularity. ANNA ANNA is a new gametype mod based on MTL and CRD aiming mostly at anticheats. OpenDX OpenDX is an advanced gameplay mod aiming to add modern features and gametypes, while fixing many bugs and anticheats.","title":"Created Gametypes"},{"location":"multiplayer/#replication","text":"","title":"Replication"},{"location":"multiplayer/#what-is-it","text":"Replication, in basic terms, is the system in which information about the current server state is stored and distributed among the clients. If something happens on one client, its then \"replicated\" to the server, which syncs up with the other clients, to keep the state of the world persistant.","title":"What is it?"},{"location":"multiplayer/#resources","text":"Introduction to Replication in the Unreal engine Replication overview Unreal Replication Informatio Networking in Unreal Replication","title":"Resources"},{"location":"multiplayer/#capturing-the-game","text":"","title":"Capturing the game"},{"location":"multiplayer/#screenshots","text":"Screenshot or screen capture is is an image taken by the computer to record the visible items on the monitor (source: Wikipedia article ) . You may assign a button for taking screenshots in Deus Ex-> Settings -> Keyboard/Mouse. However the button doesn't work when the game ends, therefore if you want to take a screenshot of a scoreboard when the match ended, type a console command \"shot\" or \"sshot\" (in other words: press \"T\", erase \"Say\" and type either \"shot\" or \"sshot\"). If you want to assign it to another button which is not available in Settings -> Keyboard/Mouse window, you may bind it in User.ini (as already mentioned, the command is \"shot\" or \"sshot\"). The screenshot will appear in /System/ directory of your Deus Ex folder and the file name will look like Shot0001.bmp (Windows bitmap format). Note that Deus Ex has a limit of 255 screenshots. When you reach the limit, Deus Ex won't be making any more screenshots until you move the existing 255 screenshots to another place. You may put them to .zip or .rar archive to reduce disk space they use. If you're willing to post a screenshot to the Internet, convert it to JPG or GIF format to reduce size (usually .bmp files are 10x times bigger than their .jpg analogues). There are hundreds of programs that could do that (e.g. Adobe Photoshop, Photopaint or even ACDSee) including a newer version of MS Paint which is included to every Windows version. In case with MS Paint, just open a screenshot and \"save it as\" .jpg file. Renaming the file in Windows won't change the format, but just a file name. If you want to make a screenshot without a HUD (user interface), type a console command: showhud false When you want to restore HUD, just go to the main menu and return back. Or instead you may type showhud true You may also experiment with FOV (angle of view). Type a console command fov [value] , e.g. fov 95 . Default FOV is 85 (or 75 in older Deus Ex versions). If you're willing to make something peculiar, try setting game speed to a lower value (if you're in multiplayer, you will need to be an admin + that will affect all the players on the server), e.g.: slomo 0.5 (or if your server uses DXMTL, admin slomo 0.5 ). You will move slower and it will be easier to find a suitable location. Default game speed ( slomo ) value is 1. Making a screenshot from a different resolution is also very easy. Use a console command setres, e.g. setres 1024x768 (1024 is desired width, 768 is desired height). If your desired resolution is smaller than your normal resolution, your Deus Ex will have to expand to the new resolution. This will not affect the resolution of screenshots, but may be a bit unsuitable to play. If so, switch to the windowed mode (Alt + Enter or togglefullscreen command). For some unknown reason Deus Ex in windowed mode in some resolutions doesn't make screenshots properly (the image is distorted). You may also try a special program for making screenshots, instead of using a built in function. Pick a free program from this list . Print screen button on your keyboard would also do that job, but after you press it you need to launch an image editor (e.g. MS Paint), paste it there and save somewhere.","title":"Screenshots"},{"location":"multiplayer/#demorec","text":"","title":"Demorec"},{"location":"multiplayer/#what-are-demo-recordings","text":"Demo recording or so-called \"demorec\" is a recording of a game from 1st person view; to put it simply \u2014 a video of a game from eyes of the recorder. A demo recording done by a player in Deus Ex could be seen by other player who has Deus Ex and all the mods that were used during the recording (e.g., if it's a DXSG server, the viewer should have DXSG files and maps). A file with a demo recording (it has .dem extenstion and is located in DeusEx/System folder) contains only information about events that happened during the game, not the frames (pictures) themselves, and what a viewer sees is imitated by Deus Ex each time demo is played. Unlike video, you may enable a score board whenever you want, or type \"ping\" to see ping the recorder had, just like you would do in normal game. Demo recordings are usually hundred of times smaller than video files. An uncompressed video file in .avi format of 20 minutes of gameplay would take more than 2 GBs of diskspace, while a demorec would only need 6-9 MBs (depending on amount of players). Demo recordings are perfect way to learn how do others play the game and significantly improve one's skills. They are also used during the clanwars for later examination of strategies or just keeping track of scores, which may suddenly nullify due to technical problems. There are no ways to edit demo recordings yet, thus they may be used as an alibi for pleading not guilty in cheating. You will not be able to play or record demorecs if you didn't patch your Deus Ex beforehand. A patch is just a single file which you should place to your DeusEx/System folder (the patch is also called \"Engine.dll fix\") \u2014 you may download it here (0.5 MB).","title":"What are demo recordings?"},{"location":"multiplayer/#where-to-get-them-from","text":"You may try downloading files from our File Archive or ask other players to send them to you. Many players do record their games from time to time, but rare ones share demos publicly (unlike for example, [3]Messiah, who's posted over 150 MBs of demorecs, which you may find in our Archive in folder named \"Messiah\" or here ).","title":"Where to get them from"},{"location":"multiplayer/#viewing","text":"You have to patch your Deus Ex with \"Engine.dll fix\" (see link and description above) beforehand. Place a demo recording, e.g., myfirstdemorec.dem , to DeusEx/System directory. Open Deus Ex. Press \"T\" and in the left bottom corner of your screen erase \"Say\". Type ( myfirstdemorec is an example \u2014 replace it with the name of your recording) demoplay myfirstdemorec To stop watching, type stopdemo Note: If demo runs too fast, add ?timebased to the demoplay command, i.e.: demoplay myfirstdemorec?timebased As mentioned above, you will need all the files that were used on the server, e.g. maps, textures, etc; otherwise Deus Ex will crash. Some demo recordings are \"broken\" and they don't work at all \u2014 Deus Ex always crashes. Sometimes Deus Ex crashes a few times when starting playing a demo, but eventually it will play it (just try several times). Sometimes Deus Ex crashes when demos are played one after another. To avoid this, after stopping watching demo, go to \"Credits\" and return back. This helps in most cases, but not in all. You will watch it with ugly black translucent user interface. Unfortunately, there is no solution. If you want to exit game type either stopdemo and then go to the menu, or just type exit . Your screen will shiver when the person, who records it, crouches. No solution to this either. If the crosshair shiver, it doesn't mean that the person whom you watch, was shivering. It's just another unfixed problem. Augmentations like vision may not work correctly. E.g. vision may be enabled, but the viewer of a recording won't see anything and it may seem that the player aims at invisible opponents. You will need to press \"Esc\" manually after a person was killed (to get rid of red message) and after hacking computers. You may see a score board, use \"ping\", \"stat net\" and other commands, just like in normal game. You will not see how the player types (just their messages) and you will not see","title":"Viewing"},{"location":"multiplayer/#recording","text":"Recording is easier. While in game, type demorec myfirstdemorec where myfirstdemorec is the name of your recording. To stop demo recording type: demostop After recording you'll find a new file in your DeusEx/System folder. Note: When sharing it: Don't forget to compress it into .zip or .rar archive. Don't forget to include (at least in a readme text file) what server it was played on and what mods/maps the recording requires. Don't forget that its boring to watch a recording with active chat from your party :-)","title":"Recording"},{"location":"object/","text":"Deus Ex Knowledge Base # WIP.","title":"Object"},{"location":"object/#deus-ex-knowledge-base","text":"WIP.","title":"Deus Ex Knowledge Base"},{"location":"pawn/","text":"Deus Ex Knowledge Base # WIP.","title":"Pawn"},{"location":"pawn/#deus-ex-knowledge-base","text":"WIP.","title":"Deus Ex Knowledge Base"},{"location":"player/","text":"Deus Ex Knowledge Base # WIP.","title":"Player"},{"location":"player/#deus-ex-knowledge-base","text":"WIP.","title":"Deus Ex Knowledge Base"},{"location":"playing/","text":"Launchers # What is a Launcher? # A launcher is effectively a replacement for the base game executables that fixes the game to run on modern computers. It'll fix things like widescreen problems, CPU issues, etc. Generally, there are two excepted Launchers for DX. Kenties, and Han's Launch. But which one do I choose? # Alot of people, mostly around the Steam forums, suggest using Kenties as the fix-all for every problem. The issue is, that is not entirely correct. Kenties fixes a few things, but it also adds its own problems, nameley; It causes menus to lag; Alot of users reported (me included) that the game will have a few second delay to opening menus. The delay was so much of a problem, that during multiplayer games, I would lag out of servers just from opening the menu. It moves your config files to an arbitrary location making configging things needlessly more difficult; By default, the game stores configs in /Deus Ex/System, Kenties moves that to a generic /Game/ folder in My Documents. It breaks hosting servers, dedicated servers wont work. It causes a game breaking crash in singleplayer; During LaGuardia, there is a known bug that makes the game unplayable without cheats, it's reported on Kentie's own website but as of yet, he has not fixed it. Compatibility problems with OS's and VB Runtime dependancies; Probably the one that effects the least people, but Kenties relies on VB runtimes, which makes the launcher unusable on other OS's like Linux. Launch fixes alot of the same things that Kenties does (CPU, widescreen etc), but doesn't add aditional problems and load times, it seamlessly integrates with the game. Kenties main draw is that it adds a GUI for quickly accessing certain config files properties, but alot of what's there can just be accessed from the config files yourself. With that in mind, either launcher is available to download, Launch , and Kenties . General Gameplay # Network # Ping (or latency), accordingly to the Wikipedia article , is \"the network latency seen between their computer and the game server (or another player)\". The lower your ping is, the smoother you gameplay will be. In Deus Ex you can view your ping by using \"ping\" or \"stat net \" commands (first press \"T\", erase \"Say\" and only then type the command). Ping depends on: Your Connection speed. Your ping will be higher if you have a, e.g. 56k modem, although it will not significantly change after you upgrade to something higher than 512 kbps. Don't mix your Internet speed with Local Area (LAN) speed, which may be higher. Also, in \"Player Settings\" it is important to set connection type as close to your connection speed as possible. You may want to install a mod called DXMTL, which adds a few new options there. When you download or upload something, your speed decreases. Connection type. If you're connected to the Internet through satellite, radio ethernet, WiFi or use any other wireless devices, your ping will be higher. The fastest connection type is a fiber-optic broadband and ADSL (quality depends on phone line). Location. You may have a 100 mbit fiber-optic broadband, but if you live in e.g. Australia and the server you're willing to play is from United Kingdom, you will still have a ping of 300-500 in Deus Ex. Server's Connection speed. The higher connection speed is, the better the ping is, when more players play. Also, the better the server's connection is, the less influenced the server is for downloaders. \"Downloaders\" are those, who download the files directly from the game server (in contrary to web server, like download.dxalpha.co.uk ). Connection type. Same as above, in \"your connection type\". Location. Same as above, in \"your location\". Hardware. The better hardware specification is, the better the ping is\u2014this is mostly relevant when the server is crowded. Hardware # Frame rate (or \"frame frequency\"; or \"FPS\") accordingly the Wikipedia article , is \"the measurement of how quickly an imaging device produces unique consecutive images called frames. Frame rates of approximately 25 to 30 fps are considered minimally acceptable\". The most common FPS in Deus Ex on modern video cards is above 80. The bigger your frame rate per second is, the easier it is to react on things, and more comfortable to play (you may feel a headache or sickness after playing on low FPS). FPS depends on: Video card Other computer specs, including CPU , RAM , etc. Monitor. Some monitors may not support high FPS rates, therefore fixing it on e.g. 60. Software # Deus Ex requires you to not run any other processes which can take up quite a bit of your computer's resources. Even if Task Manager shows that both programs can run without totally using the computer, it is advisable to close any unneeded programs, such as instant messengers, or any other programs which you won't need while gaming. You may significantly improve performance of your Deus Ex by using another renderer. Accordingly to Wikipedia, a renderer is \"a carefully engineered program, based on a selective mixture of disciplines related to: light physics, visual perception, mathematics, and software development\". Most of people run Deus Ex on the normal Direct3D renderer, but you may try the enhanced OpenGL or Direct3D renderer to increase performance. You may learn how to do that here . Commodity # Mouse. You should be able to move your cursor precisely to any place of your screen in a short period of time. If you can't, you might want to check: Sensivity setting. You may set mouse sensitivity in your operating system (in Windows, in Control Panel -> Mouse) and in Deus Ex (Settings -> Controls). Too sensitive mouse makes sniping harder, too insensitive mouse makes close range battles harder. Wireless/wired. Wireless mice (especially cheap ones) have a problem with response time\u2014when you move it suddenly, the cursor may move to opposite direction. Weight. Wireless mice with batteries are heavier and take more effort to move. Type. Ball mice are the past, buy something new\u2014optical mouse, at least. Mousepad. It's purely individual. The author prefers his heavy-weight \"Hirsch\" promotional mousepad , brought from United States approximately 8 years ago. Monitor. Some people believe that it's harder to play on widescreens. Also it may be hard to play if you're sitting below level of your monitor. Personal space. Your legs shouldn't lie on the table, your hand which holds the mouse shouldn't be in the air, you shouldn't strain when sitting. But this depends on you. Controls. The author uses arrows for movement (\"Shift\" for jumping and \"Ctrl\" for crouching), although many people prefer WASD keys (W\u2014forward, S\u2014back, A\u2014left, D\u2014right). You should be able to jump and duck whenever you want without doing unnecessary movements. Some Deus Ex'ers prefer to have toggle scope action bound to middle button/wheel (scope toggles not when you scroll the wheel, but when you press on it). Binds. Getting a medkit and quick reload binds may significantly improve your gameplay. Tips for DXAG # ArxGenus aka DXAG is a Deus Ex multiplayer modification, which involves division into classes and a factor of team work. Use ballistic protection as Medic. Use run silent when you are cloaked. Pretty much always have Energy Shield on as Engineer. Same with Targetting and Sniper. Look more than just in front of you when you are using vision. Medics may seem impossibly nuts, but any good player would exploit their weaknesses (EMP, Explosions, Flamethrowers) Always spray your allies when you have a free second. Stealth may seem a hard class to work with, but you need to use Cloak, Radar Trans and Lockpicks to their advantage, enemies DONT have eyes in the back of their heads, so go around the back. Engineers should always check up on turrets they have captured as protocol, the more turrets you own, the more control you have, and the more kills you will get. Pick your class by your strengths, if you like the Sniper rifle, pick the sniper, if you want to heal and make enemies call you a noob and get angry, go Medic \u2014 but on the flip side of that coin, if you play with more than one class, you can be flexible, making you a much more valuable team member. Written by MrBlack. Ping # Ping (or latency), accordingly to the Wikipedia article , is \"the network latency seen between their computer and the game server (or another player)\". The lower your ping is, the smoother you gameplay will be. In Deus Ex you can view your ping by using \"ping \" or \" stat net \" commands (first press \"T\", erase \"Say\" and only then type the command). Ping is evaluated in milliseconds (ms) You shouldn't be scared by these high values of ping in Deus Ex because due to yet uncovered reasons the ping appears to be higher than it is in fact. A ping of 100 in Deus Ex is actually the same as 25 in other games. Also if you happen to play on your own dedicated server, you'll see that your ping doesn't go below 25-30, although actually it's less than 1 (ms). In Deus Ex usually a ping of 20\u2014100 is considered very low, 101\u2014150 is low, 150\u2014200 is moderate, 201\u2014250 is acceptable, 250\u2014320 is high, 320+ \u2014 very high. When the ping is high, It's important to understand that what you see in your Deus Ex is not what really happens, but the past which has already happened. How old is the \"past\" depends on ping. E.g., if your ping is 1000 (that's very high) Therefore, you always should always shoot a bit in front of an enemy. Tips for Playing # Deus Ex provides you with a variety of ways of playing. You don't have to play like the rest \u2014 instead you may with your own style \u2014 it's harder yet interesting, but you shouldn't make these simple mistakes common for all the players. Some of them are described below \u2014 read and start winning. Don't laugh if you already knew something \u2014 the authors of this article meet experienced players who still don't know basic things. Medkits. For some reason many people ignore them and instead of using one they just surrender. If you desperate, at least don't leave a medkit in your inventory for an enemy. When playing, don't think about enemies in the first place \u2014 better find a good location which would give you an advantage, or collect inventory items such as medkits and LAMs, and while doing these things you may find someone easy to kill. Don't be afraid to run away! Just survive. Remember, success is never blamed. You may switch to other team. Press Esc (to open Main menu) -> Multiplayer -> Player Settings, change right icon e.g. of NSF to UNATCO or vice versa. Return back to game \u2014 your play should be blown to pieces. Don't use flamethrower. Flamethrower is a good weapon indeed, but only in singleplayer. Fire doesn't make much damage as you think, and could be easily distinguished by using a medkit, medbot or just jumping to water. You may use 20mm shells with assault rifle. To do that, you need to find ammo first and then to change ammo (change ammo function should be bound to a key \u2014 see Settings -> Keyboard/Mouse window). Buy skills (press \"B\") in gametypes which require them. In ATDM (see \" Gametypes \" if you don't understand what does ATDM mean) people always forget about skills and complain about their guns being innacurate or medkits only healing 1/3 of what they should heal. In Deus Ex the most used weapons are: sniper rifle, assault shotgun, assault rifle, although in ATDM many people use Dragon Tooth sword and throwing knives (usually with Combat Strength augmentation, which almost doubles their damage). In gametypes with augmentations there are protective augmentations against plasma rifle (\"Energy Shield\") and GEP gun (\"Aggressive Defence System\"). Sniper rifle does triple damage when you shoot with scope. In fact, the damage it does without scope is unnoticable. Always aim at head even if you feel that the majority of bullets hit walls instead and even if 2 bullets out of 10 hit your enemy's head, its better than 10 out of 10 hit body. In gametypes with augmentations only newbies call GEP guns \"noobish\" (because they think it's \"cheap\"). There's an augmentation called \"Aggresive Defence System\" which could repulse any GEP rocket (not a LAM though!). If you manage to kill an enemy with it, it's entirely enemy's fault that he or she is vulnerable to such things. These weapons may be lethal with one shot to head: Sniper Rifle (with scope). Assault shotgun. Sawed-off shotgun. Dragon Tooth sword. Throwing knife (when \"Combat Strength\" augmentation enabled). GEP Gun (indeed!). You may stick grenades to walls \u2014 they will work as proximity mines. There are several things many people forget about this feature: You may disable opponent's grenade by clicking on it. You may also use \"Radar Transparency\" augmentation if available, or throw an EMP grenade. Using an EMP grenade as a mine together with LAM or gas grenade doesn't make sense, as when EMP explodes it disables the rest. You don't need to place more than one LAM on one place unless you want your enemy to blow into even smaller pieces (the screenshot above was taken by newbies). If an enemy knows about your mine, eventually he or she will certainly manage to disable both grenades using any of possible ways. You need around 4-5 gas grenade mines to kill an enemy when they explode. You need to place them close to each other and if possible, closer to ceiling because then the gas will affect head, not only body. Never stop running. It's not Counter Strike or Battlefield where you have to wait in an ambush and then suddenly attack your opponent. You getting sniped too often? It means that you should crouch and jump, and change direction more frequently. Of course you may make your way to a certain place, but trajectory should look like a zigzag. Just look how good players play and try to snipe them. Hard, yeah? Many elites are annoyed that others call them cheaters. In fact, a cheater is like a poltergeist: everyone heard, but hardly ever seen. In 95% cases it's not a cheater, but a good player. There are lots of good players in the community who play for a long time \u2014 the game was released long ago and they had time to train. In the beginning your scores may be depressing. Don't worry about that \u2014 very soon you'll become a lot better. You may try to watch some demorecs or setup binds . Overviews # Augmentations overview The information was taken from official Deus Ex readme file, written by Ion Storm. Slot 3 Energy Shield Energy Drain: Moderate Default button: F3 Reduces the effectiveness of attacks from the plasma gun and flamethrower by 80%. Advantages The energy shield has a fairly low power drain, and a high defensive percentage. This aug is particularly useful against a heavy weapons player, since it works on the flamethrower, plasma, and wp rockets. It is also helpful if you use it in conjunction with a plasma rifle at short range or point blank targets, since you don't have to worry about hitting yourself as hard with the plasma splash damage. Disadvantages This aug is only useful against the aforementioned weapons. If no one in the game is using any of the heavy weapons, you have a wasted aug slot and might be burning energy uselessly if you use the 'allaugs' hotkey. Opposing The best offense against the energy shield is to notice if someone is using it. It's harder to notice the blue shield effect if you are firing energy weapons, so watch closely. If you are firing a flamethrower or plasma at them and they don't seem to care, it's time to switch weapons. If you are the heavy weapons player, you have fewer options, and your best bet is to get away from them and hit them with regular gep rounds. Combat Strength Energy Drain: Low Default button: F3 You do double damage with melee weapons (e.g., combat knife). Advantages This aug has not been changed very much from the single player, but does have an added dimension in a multiplayer setting. This aug works well for a stealth player, especially when combined with a cloak. Hand to hand weapons will do quite a bit of extra damage if you have this aug turned on, and getting the drop on someone with a nanosword and combat strength usually means instant death. It should also be noted that this damage bonus also applies to throwing knives, which have limited range but a fairly high damage and a very fast rate of fire, making them a viable option for a low tech specialist. Disadvantages No significant disadvantages to this aug, as it has a fairly low power drain. Opposing This aug only affects weapons using the low-tech skill, and all weapons of this type can be shielded against using ballistic protection. A player using this aug will also have to get in fairly close in order to cause damage, and listening for their footsteps can make it difficult for them to get in close enough. Using the vision aug can also help defend against low-tech weapons, since if they are in close enough to hit you, they are close enough for you to see them. Slot 4 Radar Transparency Energy Drain: Very Low Default button: F4 Makes you invisible to electronic devices such as cameras, turrets and proximity mines (e.g., LAMs). Advantages While this aug is turned on, you will be completely invisible to turrets and also to any placed grenade traps. This aug has a low power drain, and can be left on for a very long time when combined with the recirculator. Radar transparency is a must have if you are going to be hacking turrets with multitools or placing a lot of demolitions. It makes it incredibly easy to walk past turrets and remove enemy demolitions traps and make them your own. Disadvantages First off, you cannot take the regeneration aug if you take radar transparency. Secondly, while turrets can't see you, other players still can. This means if you want full stealth, you will have to take cloak as well, which has a much higher power drain. Another important note is that while grenade traps won't go off on you directly, you can still be caught in blasts caused by other players. Opposing The main defense for this aug is paranoia. Check previously safe grenade traps when you pass by them again. Keep an eye out at the turret and terminals, since opponents with this aug will probably be spending significant amounts of time there. Regeneration Energy Drain: High Default button: F4 When active, you heal, but at rate insufficient for healing in combat. Advantages Healing is a good thing. Regen is very useful if you can find a place to hide for 30 seconds or so and get yourself combat-ready again. The drain is also fairly low. Disadvantages Regeneration has been toned down a lot from the single player version. In multiplayer, you will only heal up 10 health per tick as opposed to the 40 in single player. The result of this is that you can no longer wade into combat with this aug turned on and expect to come out the other side unscathed. Opposing The simplest way to oppose this is to cause damage faster than they can heal it. With almost all weapons, this is not a problem. This aug also makes a distinct sound when it is turned on, and if you are close enough you can hear your opponent healing. Half dead opponent hiding and trying to heal? Sounds like a good time for an attack. Slot 5 Environmental Resistance Energy Drain: Low Default button: F5 Reduces damage from poison and gas by 90% and eliminates poison and gas vision reduction entirely. Note that turning on this aug after you already have vision problems will not remove the vision effect. Advantages This is another low cost aug that can be left on a lot of the time. Having it turned on beforehand will block the vision wavering effects of poison or gas, and greatly reduce the damage from gas clouds and dart poison. This is a great one against players too fond of the crossbow. It works well in conjunction with gas grenades. You can throw one into a room and then charge in and start shooting. In this respect, it acts much like a flashbang does in other multiplayer games. Disadvantages Turning this aug on after your vision is already wavering will not remove the effect, though it will still block most of the poison damage. Another aug that is only useful in very specific situations. Opposing Players blithely wandering through gas clouds are easy to spot as using this aug. Once you notice that, simply don't bother with the crossbow or more gas attacks and switch weapons. EMP Shield Energy Drain: Very Low Default button: F5 Reduces the effectiveness of EMP attacks against you by 95%. Advantages The emp shield has a very low drain and protects very well against emp damage. This is also a great aug to use in conjunction with emp grenades or the spy drone. Turn on your shield and fire off emp attacks at close range with near impunity. Your enemy is suddenly weaker, while your own energy is barely depleted. Disadvantages This only blocks emp damage, and thus is of limited usefulness. It should also be noted that the shielding effect is lessened the closer you are to the center of the emp attack. Standing at the fringe of an emp blast with the shield on means you take minimal drain. Standing at the center of an emp grenade will still drain you for a significant amount. Opposing Someone ignoring or lobbing emp attacks everywhere is easy to spot as using this aug. Stay as far away as possible and hit them as hard and fast as you can. If they are throwing emp attacks at you, that means they aren't actually causing damage, which is a perfect time to dish out some damage yourself. Slot 6 Targeting Energy Drain: Moderate Default button: F6 You do 40% more damage with all weapons. You can also see an enemy's health. Advantages Targeting provides many advantages. It is effectively a skill increase of one level in all weapon skills. This means that you do more damage and have higher accuracy. The GEP gun will also lock onto opponents faster. Even preplaced grenades do more damage if placed while target is on. This is particularly nasty when combined with the sniper rifle or other high damage weapons. The other advantage is more subtle, in that you can see how much overall health your opponent has left. Disadvantages The only real disadvantages are the drain, and the fact that you have to really pay attention to get the health info, and the health info is an overall number, and does not reflect specific body parts. Opposing The direct defense against targeting is to use ballistic protection. This will more than make up for the targeting damage bonus. Ballistic Protection Energy Drain: High Default button: F6 Reduces the effectiveness of melee weapons and ballistic weapons (e.g., rifles and pistols) by 40%. Advantages This will block 40% of the damage you receive from most weapons. This is a great aug to use right before or as you enter combat, and can keep you alive while you are being sniped until you can find cover. It is also very useful to turn on before you cross any large open area, especially when combined with the speed aug. Disadvantages Significant power drain. This really isn't an aug you can leave on all the time unless you have a recirculator going and stop in at repairbots quite a bit. Opposing This is one of the toughtest augs to oppose. Attacking someone with this aug going can make combat somewhat frustrating. The moment you see that blue shield, it's time to switch weapons or hit them with an emp attack. The crossbow or energy weapons are probably the best to switch to. Anything that will disorient the other player will help you take them out faster, and poison, fire, or plasma will usually distract them at least into trying to turn off the ballistic and turn on another defensive aug. Making the ballistic person multitask is essential to taking them out. The effectiveness of this aug can be reduced by using the targeting aug, which provides a damage bonus. Slot 7 Speed Enhancement Energy Drain: Very High Default button: F7 Allows you to move twice as fast and jump twice as high. Advantages Turning on this aug doubles your movement speed and makes very high and long leaps possible. This is a great aug for getting into or out of combat quickly, or just crossing a large open space while minimizing risk. While you are moving at this speed, you are much harder to hit, and incredibly difficult to get locked onto with the gep gun. All in all, this is one of the most powerful and versatile augs. Disadvantages While it is harder for other enemies to hit you, it is also more difficult to target others when moving that fast. Combat can get very frantic very fast, and overcorrecting is a common problem. The drain on this is also the highest of all the augs. This is really only useful in short bursts, you simply don't have enough energy to leave it on for long, especially since if you have speed you cannot have the recirculator. Another important note: You do not jump as high while carrying the gep gun as you do with other weapons. So don't expect to be able to hop that fence with a gep drawn. Opposing Trying to defeat someone who has speed, especially if you don't, can be incredibly difficult. Your best bet are weapons with some sort of spread, such as the shotgun, assault rifle, or plasma. Explosives also work well, but you have to remember to lead them pretty heavily. Hitting a jackrabbit with an emp blast can also be fairly rewarding, as most people who use this aug a lot come to rely on it heavily, and take time to adjust to moving at the regular speed. Also remember that even if you are moving, you will still have a slightly easier time aiming than the person blitzing across the map. Power Recirculator Energy Drain: None Default button: F7 Reduces the energy drain of other augmentations. Note that the Power Recirculator is automatically activated when any other augmentations are activated. Advantages This is probably the simplest aug available. If you turn on any other aug, the recirculator kicks in automatically. There is no drain on the recirculator, so it never adds to your power loss. This aug is also incredibly useful if you are fond of the 'allaugs' hotkey. Combining the power recirculator with a few defensive augs and the 'allaugs' key can make you very difficult to attack successfully. Disadvantages Having this aug means you cannot have the speed augmentation. Get used to moving at the regular speed, and playing a slightly slower paced game. Opposing There really isn't a very good way to oppose someone with this other than emp attacks or using the speed aug to your advantage if that is what you took. If your opponent has the recirculator, you are going to have to hit them more often, since they can keep their augs going for longer. This means hit hard and fast, since you probably won't win a war of attrition with this player. Slot 8 Cloak Energy Drain: Moderate Default button: F8 Makes you invisible to enemy players. Electronic devices and players with the Vision Enhancement augmentation can detect you. Upon drawing a weapon you uncloak and become visible to all. In Team Death Match players who are cloaked are still visible to their allies. Advantages This augmentation is great for avoiding enemy snipers and for avoiding enemies at a distance. When active, it is much safer to cross open spaces. When you wish to use the cloak to attack someone, the general strategy is to either maneuver around behind them, or wait for them to turn their back on you. When they do so, draw a weapon and fire at them. After you do this, it is often a good idea to put your weapon away, cloak again, and move. If you don't do this, then your opponent will most likely return fire. And since your opponent was not cloaked, he or she probably has a combat enhancing augmentation. Finally, the cloak prevents the GEP gun from locking onto you, and will break a lock if turned on after the lock is acquired. Disadvantages It has a fairly high power drain, so you have to manage your energy carefully while using it. It doesn't mask your footsteps, so people can often tell when you are nearby. Finally, while it is active, you have no weapon out. If someone with the vision augmentation spots you while cloaked, you are at a disadvantage, as your opponent is armed and you are not. Opposing The vision augmentation is the most useful anti-cloak power. At short to medium ranges, it will display cloaked enemies. Since these enemies are cloaked, they do not have weapons out, and are at a disadvantage if you choose to attack them. If you do not have the vision augmentation, be alert for footsteps. If you hear them, but don't see an opponent, you can try spraying the area with the flamethrower. If you hit someone, he or she will catch on fire and be easy to track. A WP rocket fills a similar role at longer ranges, if you suspect a cloaked person to be in a particular sniper spot. If you have a weapon equipped, and target a cloaked enemy, you will get white targeting crosshairs. You get the same crosshairs if you look at objects in the world, such as crates and doors, but if you get them when not looking at an object, then you may very well be targeting a cloaked enemy. Many cloaked players think of themselves as undetectable, so a shot at them while they are cloaked will often catch them by surprise. Vision Enhancement Energy Drain: Moderate Default button: F8 Allows you to see enemy players in the dark from any distance. For a short distance you can see through walls and see cloaked enemies. Enemy players appear in red. Advantages This is the best defense against a cloaked player. It is also a vast improvement over your usual crosshair iff. Friends will now appear as bright green, and enemies will now glow red. This makes it much easier to spot enemies at a distance, even if they are in shadows, and thus is great for spotting troublesome snipers. You can also see friends/enemies on the other side of walls at very close range. Disadvantages There are 4 main problems with this aug. First, you can only see cloaked people at medium/short range. This makes the vision aug slightly less advantageous on a larger map. Second, the drain on the vision aug is greater than the cloak drain, which means they can stay cloaked longer than you can see them. Third, if you are facing any kind of explosion with this aug turned on, you will be temporarily blinded. The severity and duration of the blindness depend on the closeness/brightness of the explosion, and whether you were looking straight at it or caught it at an angle. Finally, the farther away an enemy player is, the less bright red he will glow. Opposing The vision aug is directly opposed by the cloak. If you have the cloak, stay as far away from this person as possible and try to snipe them. The vision aug player is also very vulnerable to being blinded. Any kind of explosion or grenade stands a good chance of temporarily blinding them. The flamethrower and plasma are also bright enough to impede the vision aug player somewhat, although they do not cause the same type of blinding effect. Slot 9 Spy Drone Energy Drain: Moderate Default button: F9 Creates a small, remote-controlled drone. Pressing the firing key (or mouse button) while the drone is active delivers powerful EMP damage to any player or electronic device in the vicinity of the drone. Advantages The spy drone lets you scout an area where you suspect an enemy to be at reduced risk to yourself. Once this is activated it moves very quickly across even the large maps, and is difficult for enemies to spot. The emp attack has been enhanced for multiplayer, and detonating this anywhere near a person will cause massive bioenergy loss. The drone is also useful to send ahead and disable a turret so you can then run past. The spy drone is nearly invulnerable while it is in flight. The drone is great to send alone up to the top of that likely sniper nest and flush someone out. A favorite close range tactic is to activate the spy drone and the emp shield at the same time, and detonate the drone immediately. This is very surprising to an enemy at close range and gives you an immediate energy advantage. Disadvantages This aug does have a couple of drawbacks. First, while it is active, you cannot move. This means you better have a really secure place before you go flying around with the drone. Second, having this aug in a slot makes it very difficult to use the 'allaugs' hotkey without special planning. Also note: while the spy drone can't be directly damaged by bullets, any type of nearby explosion has a good chance of blowing it up. This means an enemy can defend themselves with plasma or explosives, and you really don't want to get caught in your own emp blast. Opposing There are a couple of ways to deal with an incoming drone. They make a distinctive humming sound so you can generally hear them coming. The simplest way to deal with one is to get a direct or near hit with some type of explosive or plasma. You can also emp a spy drone, knocking it out of the air. Also remember that while someone has a drone out, they are basically a sitting duck. Aggressive Defense System Energy Drain: Low Default button: F9 Enemy rockets detonate before they hit you, doing reduced damage. Large rockets (like the LAW) may detonate close enough to cause considerable damage to your character even if you activate the Aggressive Defense. Agressive Defense does not detonate thrown LAMs, Gas Grenades, or EMP Grenades. Advantages This aug has a fairly low drain, and is quite effective at keeping away unwanted rockets. It is also useful as an umbrella for teammates, so if you are close together, only one of you needs to have this turned on. This is a great aug to turn on while crossing open areas. The offensive use of this aug is when you turn it on while very close to someone firing rockets or 20mm at you. The closer you are to them when they fire, the more likely they are to damage themselves. The other nice thing is that you can often hear incoming rockets and thus have time to turn this on quickly, thus negating or at least reducing the damage you take. Disadvantages This is not a stealthy aug. Whenever you have this turned on you and nearby players will be able to hear a distinctive sound somewhat like a sonar pulse. This makes it much easier to find you if you are trying to hide. There have also been some major changes from the way this worked in single player. The only things aggressive defense will block in mp are rockets, wp rockets, 20mm, and the law rocket. It will not block placed or thrown grenades, darts, knives, or any of the other things it stopped in the singleplayer game. Also, depending on the skill of the opposing player and the weapon they use, you may still take some damage from incoming rockets even if you have this turned on. The best example is the law, which will still cause significant damage to you if you get caught in the open and try to defend yourself with aggressive defense. Opposing Listen for the distinctive sound of this aug and be very careful before you start firing rockets around. When you hear this aug turned on, or you see a rocket detonate with a large blue explosion (much like an EMP explosion), it's time to switch weapons to something else. Since EMP grenades are not blocked by this augmentation, don't be afraid to toss one at your opponent. Slot 10 Run Silent Energy Drain: Low Default button: F10 You move completely silently regardless of speed. Advantages This is a nice low drain aug that is loads of fun for a stealth player. Experienced players will be listening for footsteps and it's great to be able to pop up without them hearing you. Using this with the vision aug to see your enemy through a wall and then walking (or running with the speed aug) up behind them is very satisfying. Disadvantages No disadvantages worthy of note, except you can't have its opposing aug. This aug can cause a bit of overconfidence though. Just because you are being sneaky is no reason to let down your guard. Opposing Again, paranoia is a great defense. If you can't hear their footsteps, sometimes you can hear them switching weapons or activating/deactivating augs. Look around a lot, watch for movement. The vision aug also helps a lot to defend against this: they think they are sneaking up the ladder, you are watching them through the floor and can mow them down before they pop their head up. Microfibral Muscle Energy Drain: Low Default button: F10 Allows you to pick up large crates. Advantages While this aug doesn't have any direct damage applications, (at least in the premade maps), it does offer some interesting map control options. Few people take this aug, so if you are the only player who has it, you can move those large crates and no one else will be able to do anything about it. This doesn't sound terribly useful until you realize that you can use those large crates to strategically block off small passages or elevators, and thus funnel your opponents wherever you want them. Blocking doorways, air vents, and elevator exits can be extremely amusing. Disadvantages The only real disadvantage is that the usefulness of this aug is directly tied to which map you are on, and if there are any large crates for you to move. Opposing The simplest way to oppose this aug is to take it yourself. That or simply go way around and realize that you are being channeled to where your opponent wants you. The speed aug will often also allow you to jump over crates that your opponent has moved. Slot 11 Aqualung Energy Drain: Low Default button: F11 Allows you to stay underwater 12 times longer than normal. This also doubles the player's swimming speed. Advantages Using this aug will not only increase your air supply, but in multiplayer it also increases the speed at which you move underwater. If you arm yourself properly, you can get someone to follow you into the water and waste them when they try to keep up. This works particularly well if you have taken a weapon that works underwater (sword, knives, or crossbow). Disadvantages No significant disadvantages unless you are on a map with no water, in which case this is just cluttering up your hud. Opposing If you are on a map where water is a significant factor, make sure you have the aqualung as well, at least that way you are on an even footing. Also, while you can't fire most weapons underwater, that doesn't mean you can't fire into the water at your swimming opponent. Skills overview The information was taken from official Deus Ex readme file, written by Ion Storm. 1. Weapons: Heavy (costs 2000) Upgrading this skill grants players greater accuracy, speed and damage with heavy weapons, just as in the single-player game. Affects plasma rifle, GEP gun, flamethrower. 2. Weapons: Pistol (costs 2000) Upgrading this skill grants players greater accuracy and damage with pistol weapons, just as in the single-player game. Affects pistol, mini-crossbow. 3. Weapons: Rifle (costs 2000) Upgrading this skill grants players greater accuracy and damage with rifle weapons, just as in the single-player game. Affects sniper rifle, assault rifle, sawed-off shotgun, assault shotgun. 4. Weapons: Low-Tech (costs 2000) Upgrading this skill grants players greater accuracy and damage with low-tech weapons, just as in the single-player game. Affects combat knife, throwing knives, Dragon's Tooth sword, crowbar and etc. 5. Weapons: Demolition (costs 1000) Upgrading this skill grants players greater accuracy and higher damage with demolitions (e.g., LAMs, gas grenades, EMP grenades). If your skill level is higher than the skill level of the player who placed one of these weapons as a proximity trap, you have more time to disarm it before it goes off. 6. Environmental Training (costs 1000) This skill increases the duration and effectiveness of the Adaptive Armor, Ballistic Armor and Hazmat Suit. (Note: While this feature is enabled in DXMP, no such suits are placed on any of the levels included with the multiplayer version of the game. It is included here in support of users who wish to include these items in maps of their own creation). 7. Lockpicking (costs 1000) Upgrading this skill reduces the number of picks required as well as the amount of time needed to pick a non-electronic lock. 8. Multitooling (costs 1000) This skill reduces the number of multitools required and the amount of time needed to override a keypad lock or bypass a turret (returning it to a neutral state). 9. Medicine (costs 1000) Upgrading the medicine skill makes Medkits more effective in restoring lost health points (HP). On the first upgrade level, medkits heal 30 points, on 2d \u2014 60, on 3d \u2014 90. 0. Computers (costs 1000) Upgrading the computer skill reduces the amount of time required to break into a computer security system and take control of cameras and turrets. Unlike single-player Deus Ex, all players can hack in multiplayer but your speed increases with skill level. However, you can only hack enemy-controlled or neutral computers; you can't hack a computer that has already been hacked by an ally. Weapons overview The information was taken from official Deus Ex readme file, written by Ion Storm. General There are 14 different weapons in Deus Ex multiplayer, not counting grenades. Most of them just deal damage, but a few have additional extra uses, and all of them have certain situations in which they are more effective than in others. Since you can only carry three weapons at a time, and since you often won't be equally skilled with all weapons, deciding what weapons to carry can be a tough choice. Generally you want to carry weapons that have different uses. Carrying two weapons that do almost exactly the same thing (such as carrying both shotguns) is a waste of valuable inventory space. Accuracy Unlike singleplayer, most weapons in multiplayer are perfectly accurate. They shoot exactly where you point. That doesn't mean they always hit, since your opponents may be moving as well, but you can count on your shots to go where you aim. This is not true of some multiple shot weapons. Ammo considerations With the exception of the nano sword and the combat knife, all weapons need ammo. Generally they carry about three clips worth. There are three ways to get more ammo for a weapon. The easiest is to use an ammo crate. This will replenish the ammo for the weapons you are carrying. Note that this will not replenish throwing knives if you have used all of them, since when you use your last throwing knife, you are no longer carrying that weapon. The next is to pick up another copy of the same weapon from a weapon rack. This will replenish your ammo with that weapon. Finally, if you search a corpse, and that corpse was carrying a weapon that you are carrying, your ammo will be replenished with that weapon. None of these methods restore alternate ammo (20 millimeter grenades or WP rockets). You must pick up more of that kind of ammo by finding the ammo itself. This ammo is usually stored in locked cabinets. Hit Locations There are three hit locations in Deus Ex Multiplayer. Legs, Torso, and Head. All of them have the same number of health points. The torso is the easiest to hit, and taking it out kills your opponent. Destroying your opponents legs slows him down greatly and leaves him crouched and unable to jump. Destroying your opponents head will kill him, and head shots count for double damage. Reloading Reloading is generally faster in multiplayer than it was in the singleplayer game. In addition, if you put a weapon away, it automatically reloads itself. This is not faster than the automatic reload when you expend your current clip, but it means that if you equip a weapon and have ammo left, that ammo will be loaded. Skills Weapons require different skills to use. In the basic team deathmatch game, all weapons skills are at maximum level. In other gametypes, weapon skills may start a lower levels and you may need to spend skill points to buy them up. The effect of a higher weapon skill varies from weapon to weapon, but in all cases, a higher skill means more damage. Rifle Weapons The rifle skill affects the Sniper rifle, the Assault rifle, the Assault shotgun, and the Sawed off shotgun. Sniper Rifle Advantages The sniper rifle is one of the most useful long range weapons. Bullets travel instantaneously to point of impact, and at master skill level, a head shot taken with a zoomed in sniper rifle will kill. Even torso shots will do a significant amount of damage. The vision augmentation is very handy with this weapon, since it helps you find enemies more easily. Disadvantages The sniper rifle does significantly less damage if the scope is not in use. It also has a fairly slow rate of fire, reloading after every shot. While zoomed in, you can't see a lot of the world around you, making you a prime target for being attacked from behind. Due to its slow reload time and need to be zoomed in, it is almost impossible to use this weapon effectively at close range. Opposing Ballistic defense protects somewhat against the sniper rifle. It is also very hard for someone to snipe at you if you have the speed augmentation on and are running. The cloak augmentation provides near perfect protection; since the distances involved in a sniper attack are generally much greater than the distance at which the vision augmentation perceives cloaked people, snipers will almost never be able to see cloaked people. If you don't have these augmentations, try dashing from cover to cover. Snipers have to be able to see you to shoot you. Closing very quickly with a sniper is often a good way to kill one, since his weapon is next to useless at close range. Assault Rifle Advantages The assault rifle is a fairly versatile weapon. It works at both close and medium ranges, and does a fair amount of damage. Unlike most multiplayer weapons, it is not perfectly accurate. When unskilled, it is actually fairly inaccurate, although because it has burst fire, it tends to wound the opponent some anyway. Standing still or buying higher skill levels increases this accuracy, but not to perfect accuracy. This is both an advantage and a disadvantage. It makes it easier to hit a target with some of the bullets, but makes it harder to hit with all of them. The alternate ammo, 20 millimeter, is one of the most powerful ammo types in the game. The 20 millimeter grenades arc, and can therefore be used to shoot over obstacles with indirect fire. They are also highly explosive, and can be used as splash damage weapons. Disadvantages This gun is useless at long range when loaded with bullets. It is also not perfectly accurate, and when firing, can burn through a clip pretty quickly. The 20 mm ammo is very useful at longer ranges, but the arcing, although useful for indirect fire, can take a lot of getting used to. You must also be careful not to hit yourself with the 20 mm with a stray shot into a nearby wall. Opposing Staying far away from your opponent helps, as the gun is useless at long ranges. If you can force your opponent to keep moving and firing, he will be less accurate and may run out of ammo quickly. Ballistic protection also protects well against this weapon, protecting you against both ammo types. The aggressive defense augmentation will stop the 20 mm, and, if you are close enough to your enemy, may even cause him to injure himself. Assault Shotgun Advantages The assault shotgun has a high rate of fire and does decent damage. It works at short to moderate ranges. Since it fires five pellets, it is fairly easy to hit opponents with at least one of them. If you are right up next to your enemy, you can often hit with all five pellets. Unlike the singleplayer game, higher accuracy will not reduce the spread of the pellets. This is both an advantage and a disadvantage. It is an advantage in that it makes it easier to hit enemies, but a disadvantage in that those hits are less likely to be from all pellets. Disadvantages It doesn't work at longer ranges, and unless you are right next to your enemy, you're not going to get any one shot kills, since the pellets spread out. Opposing If you keep moving around, your opponent will find it very difficult to tag you with more than one or two pellets a shot. Sawed-off Shotgun Advantages The sawed off shotgun does a lot of damage, almost twice as much as the assault shotgun. Like the assault shotgun, it works better at closer ranges, and the pellets always spread at least somewhat. Unlike the assault shotgun, it is much easier to get one shot kills. A full load of all five pellets, with skill level 3 and the targeting aug will kill someone if all pellets hit the torso. Disadvantages It has a slow refire rate, and doesn't hold much ammo in a clip. Although very dangerous at short ranges, this isn't a very dangerous weapon at longer ranges, even at ranges where the assault shotgun might still be effective. Opposing Much as with the assault shotgun, try to stay out of close range. If you must be in close range, take advantage of the slow refire rate to circle around your opponent with a much faster firing weapon. Pistol Weapons The pistol skill affects the Pistol, the Stealth pistol, and the Mini-crossbow. Pistol Advantages This weapon is a good middle-of-the-road weapon. It does a fair amount of damage, fires moderately quickly, and has a decent range. It lends itself well to a number of fast, aimed shots at a target. Disadvantages The pistol has no obvious disadvantages, but neither does it have any clear advantages. For any given purpose, there is probably another weapon that is more effective because of specialization. Opposing Escaping this weapon's most dangerous middle range is the most effect defense against it - either close quickly or get out of range. Stealth Pistol Advantages This weapon features a very quick refire rate as its main strength. It is used best on unsuspecting targets, as the quiet nature of the weapon makes eliminates one of the main cues that players use to find their attacker. In addition, it works well on stationary targets where you can land a number of shots before they have time to react. Disadvantages The relatively short range of this weapon makes it useless for most sniping uses, and it's moderate damage and fast-but-not-rapid refire rate makes it both difficult to do snap shots and impossible to hose down an area. Opposing Escaping this weapon's most dangerous middle range is the most effect defense against it - either close quickly or get out of range. Mini-Crossbow Advantages This weapon does a decent amount of damage, in addition to poisoning your target. Poisoned targets have blurred vision and continue to take damage for a short time. In fact, poison from crossbows kills more often than the actual dart impacts. This weapon also works underwater. Disadvantages The darts have limited range, and, since they are not instant hit weapons, often miss their targets. Opposing Stay a moderate distance away from your opponent and he can't hit you with the darts. If you have environmental resistance, the greatest threat (the poison) will be nullified. Heavy Weapons The heavy weapons skill affects the GEP gun, the Plasma rifle, the Flamethrower, and the LAW. GEP Gun Advantages This is a great long-range weapon. It is very useful for suppressing fire, forcing people to stay behind cover. Its locking capability is also very useful, and has been enhanced from the singleplayer version. At short to mid ranges, it is more useful than the sniper rifle is at similar ranges. It also has an alternate ammo type, the WP rocket. The WP rocket does less damage, but has a much larger blast radius, and anyone caught in the blast radius gets set on fire. The GEP comes with a sniper scope attached by default. Disadvantages There are a number of drawbacks to the GEP. First, more than any other weapon, this weapon relies on higher skill. With the GEP out, you cannot jump as high, run as fast, or turn as quickly. Skill reduces this somewhat, but does not completely eliminate it. The GEP can be almost completely stopped by the aggressive defense augmentation. It has a slow refire rate, and while you're waiting to reload, enemies can trace the trail of smoke back to figure out where you are. Also, because it causes explosions, this is not a good weapon to use at closer ranges if you have the vision aug on. Locking It is generally easier to get a lock than it was in the singleplayer game. To get a lock, try to hold your crosshair over the target. If it moves off a little bit, your lock will start slipping away, but won't go away instantly. If you generally keep it on the target, you should get a lock. Time to lock varies from 1.5 seconds to 0.25 seconds, depending on skill level. After the ammo counter indicates that you are locked, you will hear a tone. While you are getting the tone and the ammo counter indicates that you are locked, you are. If you have a lock and move your crosshairs off of the target, you have about a second to move them back on before the lock is lost. For the curious, here is how a locked on GEP chases a target: If the GEP rocket has a line of sight to the center of the target, it aims for that point. If it does not: If the GEP rocket has a line of sight to the target's head, it aims for that point. If it does not: The rocket heads for the last place where it had a line of sight to one of those two points on the target. The GEP rocket slows down a bit for turns, but it still has a significant turn radius, so it doesn't corner exceptionally well. It doesn't cheat, it only updates targeting information if it has a line of sight to the target. Opposing The cloak augmentation prevents locking. It is also very hard for someone to get a lock on you if you are moving around erratically. If a GEP round is incoming, moving out of the way when it gets close often causes it to miss, even if locked, as it has a minimum turn radius. Aggressive defense almost completely stops GEP rounds, and ballistic protection helps. Also, the rocket leaves a large smoke trail that indicates from where it was fired. Plasma Rifle Advantages The plasma rifle is an excellent suppressive-fire weapon. Fires three plasma bolts that explode on impact. It has a fairly good rate of fire and good range. If you want to force someone to keep his head down, this works very well. It is generally best employed by shooting at the ground near your opponent's feet. Disadvantages The energy shield greatly reduces the effectiveness of this weapon. The splash damage can also hurt you if you are firing too close to yourself, and it can be dangerous to teammates. The energy shield helps reduce the penalties of self inflicted wounds. Opposing Jumping helps to avoid splash damage from bolts hitting the floor. The energy shield is very effective at stopping this weapon. Flamethrower Advantages This weapon has a very high rate of fire, and, if you back someone into a corner, you can kill him with it very quickly. It also sets people on fire when it hits them. This doesn't do a lot of damage, but it makes them easy to spot, even if they are cloaked. The flamethrower can function as a sort of alternate vision augmentation. If you hear footsteps nearby but don't see anyone, spraying the area with the flamethrower may set your opponent on fire, making him easy to shoot. Disadvantages This weapon has very limited range, and the energy shield is very effective at blocking it. Opposing The energy shield is extremely effective at blocking the flamethrower. If you have the energy shield, you don't need to worry too much about the flamethrower. If you get set on fire, jump in the water or use a medkit to put it out. LAW Advantages Does massive damage in a wide area. Will even do a significant amount of damage if the other person has aggressive defense up. Disadvantages Only one shot, but it takes up a whole weapon slot. It also requires lockpicks to get. Opposing There isn't a lot you can do when one is actually coming at you. Aggressive defense alone won't prevent you from taking a lot of damage. Aggressive defense combined with ballistic protection generally works fairly well. Ducking behind cover will also reduce the damage. All of these help, but if someone shoots a LAW at the ground near you, expect to take at least some damage. Low-tech Weapons The Low-tech skill affects the Nano sword, the Combat knife, and the Throwing knives. All of the low-tech weapons are short range, all of them work underwater, and combat strength helps with all of them. The speed, cloak, and combat strength augmentations are all helpful when trying to use these. Nano Sword Advantages The nano sword does a lot of damage and has a fairly high rate of fire. In addition, unlike the singleplayer game, it has a fairly high swing arc. The closer your opponents are to you and to the center of your screen, the more damage the sword does, but you can still hit people at the ends of the arc. This weapon also works under water. Combat strength greatly enhances the damage it does. Disadvantages The weapon is fairly short range. It is also very obvious when someone is using it. Equipping it makes a very distinct sound, and it emits a blue glow around you Opposing The best defense is to stay out of reach. This isn't very hard. If you have the speed aug on, your opponent will find it very difficult to hit you with the sword, even if he has the speed aug himself. If you hear the sound of the sword being drawn, move out of the way. It might be someone uncloaking behind you with the sword. Often someone attacking you with the sword is relying on the speed augmentation. Take that out and it is pretty easy to defeat him. Combat Knife Advantages A decent amount of damage and a high rate of fire. Works underwater. Combat strength greatly enhances the damage it does. Unlike the nano sword, equipping it doesn't advertise your presence. Disadvantages Unlike the nano sword, it does not have an enhanced swing arc. Your opponent needs to be right in front of you at fairly short range. Opposing Stay out of range. If your opponent is relying on the speed aug, EMP him to eliminate that advantage. Throwing Knife Advantages The throwing knife does a lot of damage and has a high rate of fire. It works at greater ranges than the other lowtech weapons. It works underwater, and combat strength makes it do more damage. Disadvantages Limited ammo. Unlike the other lowtech weapons, you can run out of ammo with this weapon. Once you run out of ammo, the weapon is gone, and using an ammo crate won't restore your ammo. It is also not instant-hit, and therefore it can be difficult to hit with it. Opposing Back up and dodge around. Your opponent will most likely run out of ammo quickly. Grenades Grenades are affected by the demolitions skill. They include the EMP grenade, the Gas grenade, and the LAM. General Advantages Grenades are fairly handy weapons. They don't take up slots that would be used by something else; each grenade has its own belt slot. They can be placed on walls as defense systems, or thrown at enemies as an attack. Each grenade has a very different effect on an enemy, making the demolitions skill fairly versatile. The screen of the player who planted or threw a grenade will flash an appropriate color (blue for EMP, green for Gas, white for LAM) when the grenade detonates. This is useful for knowing when grenades you have planted are being detonated. Disadvantages You can only carry three grenades of each type at any time, and many of the grenades are locked up. Also, thrown grenades will blow up if an explosion goes off nearby. The two most common ways this can happen are throwing a second LAM too soon after throwing the first, or by throwing a grenade when someone is shooting a plasma rifle at you. Opposing Placed grenades can be neutralized in several ways. Radar transparency allows you to walk past them without setting them off. You can then pick them up off of the wall and place them again. This leaves them in essentially the same place, but on your side. Many enemies will assume the grenade is still friendly. If you have a higher demolitions skill than the person placing the grenade, you have some time to locate and disarm it after you hear the beeping sound. EMP explosions will disable nearby grenades, and regular explosions will set them off. Since explosions penetrate a short distance through walls, one tactic when assaulting an enemy base is to blow up a rocket on the outside of the entrance, thereby exploding any grenades inside the entrance. The explosions from the grenades may injure the defending team. The best way to deal with thrown grenades is to dodge them. Thrown grenades make distinctive noises when they bounce along the ground. If you move quickly you can avoid most of the blast. Placing When placing a grenade, remember that the targeting augmentation enhances your skill, and thus the damage done. It will make the grenade more effective when it actually goes off. Try not to place EMP grenades near other grenades, or else the explosion from your EMP grenade may disable the other grenades. The best place to place a grenade is in a location where, when your opponent comes into range to set them off, he can't quickly get away. One prime example is on the inside of a door. When he opens the door, he will often sit there for a second waiting for the door to open. During that time, the grenade can go off and kill him. On the other hand, if you place grenades where people expect them, they can blow them up or disable them and use them against you. EMP Grenade Advantages EMP grenades are one of the only two ways in the game to do EMP damage. If you hit an enemy with one of these, he will most likely run out of energy and be at a significant disadvantage. Disadvantages If placed too near other grenades, an opponent may set one of these off before your other placed grenades, thus disabling your other grenades. Also, if your opponent was already out of bio energy, then this attack will do nothing. Opposing The EMP shield provides a lot of protection against these. When you do have the EMP shield, it often allows you to catch your opponents at a disadvantage. They expect you to have run out of bioenergy, but the shield has prevented you from running out. Carrying biocells around also helps lessen the negative effects. Gas Grenade Advantages Gas grenades are a fairly safe way to slow down your opponents. They are unlikely to injure you or your opponent overmuch, but the vision blurring effect can help you run away. When combined with environmental resistance, they can be used much like flashbangs. You can toss one into a room and then charge in, immune to the gas. These grenades are also handy to place near friendly turrets. An enemy that sets off the grenade will be stumbling around while the turret fires. Disadvantages They don't do a lot of damage, and the gas clouds move unpredictably. Often you will hit yourself at least a little with these if you are not very careful. Opposing Environmental resistance works well if turned on before you get hit by any poison gas. The gas also isn't that dangerous, if your opponent is badly wounded and you are not, it can be worth pursuing him through the gas to finish him off. LAM Advantages Very dangerous as a hurled explosive. Unlike the other two grenades, the LAM deals a lot of direct damage. If a LAM explosion goes off near an enemy, either from a preplaced LAM or a well thrown one, it will most likely kill your opponent. Disadvantages They can be fairly dangerous as well. If you throw one and it blows up in midair (due to a nearby explosion) before it gets very far away from you, you are likely to kill yourself. Opposing Ballistic protection helps protect against the damage, dodging is best. Weapons damage guide Assault Rifle Assault Shotgun Baton Combat Knife Crowbar Dragon's Tooth Sword Electromagnetic Pulse (EMP) Grenade Flamethrower Gas Grenade Guided Explosive Projectile (GEP) Gun Light Anti-Tank Weapon (LAW) Lightweight Attack Munitions (LAM) Mini-Crossbow Pepper Gun Pistol Plasma Rifle PS20 Riot Prod Sawed-off Shotgun Sniper Rifle Stealth Pistol Sword Throwing Knives Assault Rifle (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 9 13 15 18 Targeting (Torso) (1 hit) 11 15 17 20 Base Damage (Head) (1 hit) 18 26 30 36 Targeting (Head) (1 hit) 22 30 34 40 Base Damage (Torso) (5 hits) 45 65 75 90 Targeting (Torso) (5 hits) 55 75 85 100 Base Damage (Head) (5 hits) 90 130 150 180 Targeting (Head) (5 hits) 110 150 170 200 Assault Rifle vs. Ballistic Protection (60% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 5 7 9 10 Targeting (Torso) (1 hit) 6 9 10 12 Base Damage (Head) (1 hit) 10 14 18 20 Targeting (Head) (1 hit) 12 18 20 24 Base Damage (Torso) (5 hits) 25 35 45 50 Targeting (Torso) (5 hits) 30 45 50 60 Base Damage (Head) (5 hits) 50 70 90 100 Targeting (Head) (5 hits) 60 90 100 120 Assault Shotgun (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 5 7 8 10 Targeting (Torso) (1 hit) 6 8 9 11 Base Damage (Head) (1 hit) 10 14 16 20 Targeting (Head) (1 hit) 12 16 18 22 Base Damage (Torso) (5 hits) 25 35 40 50 Targeting (Torso) (5 hits) 30 40 45 55 Base Damage (Head) (5 hits) 50 70 80 100 Targeting (Head) (5 hits) 60 80 90 110 Assault Shotgun vs. Ballistic Protection (60% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 3 4 4 6 Targeting (Torso) (1 hit) 3 4 5 6 Base Damage (Head) (1 hit) 6 8 8 12 Targeting (Head) (1 hit) 6 8 10 12 Base Damage (Torso) (5 hits) 15 20 20 30 Targeting (Torso) (5 hits) 15 20 25 30 Base Damage (Head) (5 hits) 30 40 40 60 Targeting (Head) (5 hits) 30 40 50 60 Baton (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 7 10 12 14 Targeting (Torso) 8 12 13 15 Combat Strength (Torso) 14 17 19 21 Target + Combat (Torso) 15 19 20 22 Base Damage (Head) 14 20 24 28 Targeting (Head) 16 24 26 30 Combat Strength (Head) 28 34 38 42 Target + Combat (Head) 30 38 40 44 Baton vs. Ballistic Protection (60% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 4 6 7 8 Targeting (Torso) 4 7 7 9 Combat Strength (Torso) 8 10 11 12 Target + Combat (Torso) 9 11 12 13 Base Damage (Head) 8 12 14 16 Targeting (Head) 8 14 14 18 Combat Strength (Head) 16 20 22 24 Target + Combat (Head) 18 22 24 26 Combat Knife (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 20 30 34 40 Targeting (Torso) 25 35 39 45 Combat Strength (Torso) 40 50 54 60 Target + Combat (Torso) 45 55 59 65 Base Damage (Head) 40 60 68 80 Targeting (Head) 50 70 78 90 Combat Strength (Head) 80 100 108 120 Target + Combat (Head) 90 110 118 130 Combat Knife vs. Ballistic Protection (60% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 12 18 20 24 Targeting (Torso) 15 21 23 27 Combat Strength (Torso) 24 30 32 36 Target + Combat (Torso) 27 33 35 39 Base Damage (Head) 24 36 40 48 Targeting (Head) 30 42 46 54 Combat Strength (Head) 48 60 64 72 Target + Combat (Head) 54 66 70 78 Crowbar (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 12 18 20 24 Targeting (Torso) 15 21 23 27 Combat Strength (Torso) 24 30 32 36 Target + Combat (Torso) 27 33 35 39 Base Damage (Head) 24 36 40 48 Targeting (Head) 30 42 46 54 Combat Strength (Head) 48 60 64 72 Target + Combat (Head) 54 66 70 78 Crowbar vs. Ballistic Protection (60% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 7 10 12 14 Targeting (Torso) 9 12 13 16 Combat Strength (Torso) 14 18 19 21 Target + Combat (Torso) 16 19 21 23 Base Damage (Head) 14 20 24 28 Targeting (Head) 18 24 26 32 Combat Strength (Head) 28 36 38 42 Target + Combat (Head) 32 38 42 46 Dragon's Tooth Sword (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 10 15 17 20 Targeting (Torso) (1 hit) 12 17 19 22 Combat Strength (Torso) (1 hit) 20 25 27 30 Target + Combat (Torso) (1 hit) 22 27 29 32 Base Damage (Head) (1 hit) 20 30 34 40 Targeting (Head) (1 hit) 24 34 38 44 Combat Strength (Head) (1 hit) 40 50 54 60 Target + Combat (Head) (1 hit) 44 54 58 64 Base Damage (Torso) (5 hits) 50 75 85 100 Targeting (Torso) (5 hits) 60 85 95 110 Combat Strength (Torso) (5 hits) 100 125 135 150 Target + Combat (Torso) (5 hits) 110 135 145 160 Base Damage (Head) (5 hits) 100 150 170 200 Targeting (Head) (5 hits) 120 170 190 220 Combat Strength (Head) (5 hits) 200 250 270 300 Target + Combat (Head) (5 hits) 220 270 290 320 Dragon's Tooth Sword vs. Ballistic Protection (60% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 6 9 10 12 Targeting (Torso) (1 hit) 7 10 11 13 Combat Strength (Torso) (1 hit) 12 15 16 18 Target + Combat (Torso) (1 hit) 13 16 17 19 Base Damage (Head) (1 hit) 12 18 20 24 Targeting (Head) (1 hit) 14 20 22 26 Combat Strength (Head) (1 hit) 24 30 32 36 Target + Combat (Head) (1 hit) 26 32 34 38 Base Damage (Torso) (5 hits) 30 45 50 60 Targeting (Torso) (5 hits) 35 50 55 65 Combat Strength (Torso) (5 hits) 60 75 80 90 Target + Combat (Torso) (5 hits) 65 80 85 95 Base Damage (Head) (5 hits) 60 90 100 120 Targeting (Head) (5 hits) 70 100 110 130 Combat Strength (Head) (5 hits) 120 150 160 180 Target + Combat (Head) (5 hits) 130 160 170 190 Electromagnetic Pulse (EMP) Grenade (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage 200 240 320 400 Targeting 250 290 370 450 Combat Strength 400 440 520 600 Target + Combat 450 490 570 650 Electromagnetic Pulse (EMP) Grenade vs. EMP Shield (5% damage) Base Damage Level 1 Level 2 Level 3 Base Damage 10 12 16 20 Targeting 12 14 18 22 Combat Strength 20 22 26 30 Target + Combat 22 24 28 32 Flamethrower (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 5 7 8 10 Targeting (Torso) (1 hit) 6 8 9 11 Base Damage (Head) (1 hit) 10 14 16 20 Targeting (Head) (1 hit) 12 16 18 22 Base Damage (Torso) (7 hits) 35 49 56 70 Targeting (Torso) (7 hits) 42 56 63 77 Base Damage (Head) (7 hits) 70 98 112 140 Targeting (Head) (7 hits) 84 112 126 154 Flamethrower vs. Energy Shield (50% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 2 3 4 5 Targeting (Torso) (1 hit) 3 4 4 5 Base Damage (Head) (1 hit) 4 6 8 10 Targeting (Head) (1 hit) 6 8 8 10 Base Damage (Torso) (7 hits) 14 21 28 35 Targeting (Torso) (7 hits) 21 28 28 35 Base Damage (Head) (7 hits) 28 42 56 70 Targeting (Head) (7 hits) 42 56 56 70 Gas Grenade (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 20 24 32 40 Targeting (Torso) 25 29 37 45 Combat Strength (Torso) 40 44 52 60 Target + Combat (Torso) 45 49 57 65 Base Damage (Head) 40 48 64 80 Targeting (Head) 50 58 74 90 Combat Strength (Head) 80 88 104 120 Target + Combat (Head) 90 98 114 130 Gas Grenade vs. Environmental Resistance (10% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 2 2 3 4 Targeting (Torso) 2 2 3 4 Combat Strength (Torso) 4 4 5 6 Target + Combat (Torso) 4 4 5 6 Base Damage (Head) 4 4 6 8 Targeting (Head) 4 4 6 8 Combat Strength (Head) 8 8 10 12 Target + Combat (Head) 8 8 10 12 Guided Explosive Projectile (GEP) Gun (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 300 450 522 600 Targeting (Torso) 375 525 597 675 Base Damage (Head) 600 900 1044 1200 Targeting (Head) 750 1050 1194 1350 Guided Explosive Projectile (GEP) Gun vs. Energy Shield (50% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 150 225 261 300 Targeting (Torso) 187 262 298 337 Base Damage (Head) 300 450 522 600 Targeting (Head) 374 524 596 674 Light Anti-Tank Weapon (LAW) (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 1000 1500 1740 2000 Targeting (Torso) 1250 1750 1990 2250 Base Damage (Head) 2000 3000 3480 4000 Targeting (Head) 2500 3500 3980 4500 Light Anti-Tank Weapon (LAW) vs. Energy Shield (50% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 500 750 870 1000 Targeting (Torso) 625 875 995 1125 Base Damage (Head) 1000 1500 1740 2000 Targeting (Head) 1250 1750 1990 2250 Lightweight Attack Munitions (LAM) (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 500 600 800 1000 Targeting (Torso) 625 725 925 1125 Combat Strength (Torso) 1000 1100 1300 1500 Target + Combat (Torso) 1125 1225 1425 1625 Base Damage (Head) 1000 1200 1600 2000 Targeting (Head) 1250 1450 1850 2250 Combat Strength (Head) 2000 2200 2600 3000 Target + Combat (Head) 2250 2450 2850 3250 Lightweight Attack Munitions (LAM) vs. Energy Shield (50% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 250 300 400 500 Targeting (Torso) 312 362 462 562 Combat Strength (Torso) 500 550 650 750 Target + Combat (Torso) 562 612 712 812 Base Damage (Head) 500 600 800 1000 Targeting (Head) 624 724 924 1124 Combat Strength (Head) 1000 1100 1300 1500 Target + Combat (Head) 1124 1224 1424 1624 Mini-Crossbow (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 10 15 17 20 Targeting (Torso) 12 17 19 22 Base Damage (Head) 20 30 34 40 Targeting (Head) 24 34 38 44 Mini-Crossbow vs. Environmental Resistance (10% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 1 1 1 2 Targeting (Torso) 1 1 1 2 Base Damage (Head) 2 2 2 4 Targeting (Head) 2 2 2 4 Pepper Gun (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 1 1 1 2 Targeting (Torso) (1 hit) 1 1 1 2 Base Damage (Head) (1 hit) 2 2 2 4 Targeting (Head) (1 hit) 2 2 2 4 Base Damage (Torso) (7 hits) 7 7 7 14 Targeting (Torso) (7 hits) 7 7 7 14 Base Damage (Head) (7 hits) 14 14 14 28 Targeting (Head) (7 hits) 14 14 14 28 Pepper Gun vs. Environmental Resistance (10% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 0 0 0 0 Targeting (Torso) (1 hit) 0 0 0 0 Base Damage (Head) (1 hit) 0 0 0 0 Targeting (Head) (1 hit) 0 0 0 0 Base Damage (Torso) (7 hits) 0 0 0 0 Targeting (Torso) (7 hits) 0 0 0 0 Base Damage (Head) (7 hits) 0 0 0 0 Targeting (Head) (7 hits) 0 0 0 0 Pistol (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 20 30 34 40 Targeting (Torso) 25 35 39 45 Base Damage (Head) 40 60 68 80 Targeting (Head) 50 70 78 90 Pistol vs. Ballistic Protection (60% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 12 18 20 24 Targeting (Torso) 15 21 23 27 Base Damage (Head) 24 36 40 48 Targeting (Head) 30 42 46 54 Plasma Rifle (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 8 12 13 16 Targeting (Torso) (1 hit) 10 14 15 18 Base Damage (Head) (1 hit) 16 24 26 32 Targeting (Head) (1 hit) 20 28 30 36 Base Damage (Torso) (3 hits) 24 36 39 48 Targeting (Torso) (3 hits) 30 42 45 54 Base Damage (Head) (3 hits) 48 72 78 96 Targeting (Head) (3 hits) 60 84 90 108 Plasma Rifle vs. Energy Shield (50% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 4 6 6 8 Targeting (Torso) (1 hit) 5 7 7 9 Base Damage (Head) (1 hit) 8 12 12 16 Targeting (Head) (1 hit) 10 14 14 18 Base Damage (Torso) (3 hits) 12 18 18 24 Targeting (Torso) (3 hits) 15 21 21 27 Base Damage (Head) (3 hits) 24 36 36 48 Targeting (Head) (3 hits) 30 42 42 54 PS20 (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 8 12 13 16 Targeting (Torso) 10 14 15 18 Base Damage (Head) 16 24 26 32 Targeting (Head) 20 28 30 36 PS20 vs. Energy Shield (50% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 4 6 6 8 Targeting (Torso) 5 7 7 9 Base Damage (Head) 8 12 12 16 Targeting (Head) 10 14 14 18 Riot Prod (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 15 22 26 30 Targeting (Torso) 18 26 29 33 Base Damage (Head) 30 44 52 60 Targeting (Head) 36 52 58 66 Sawed-off Shotgun (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 9 13 15 18 Targeting (Torso) (1 hit) 11 15 17 20 Base Damage (Head) (1 hit) 18 26 30 36 Targeting (Head) (1 hit) 22 30 34 40 Base Damage (Torso) (5 hits) 45 65 75 90 Targeting (Torso) (5 hits) 55 75 85 100 Base Damage (Head) (5 hits) 90 130 150 180 Targeting (Head) (5 hits) 110 150 170 200 Sawed-off Shotgun vs. Ballistic Protection (60% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) (1 hit) 5 7 9 10 Targeting (Torso) (1 hit) 6 9 10 12 Base Damage (Head) (1 hit) 10 14 18 20 Targeting (Head) (1 hit) 12 18 20 24 Base Damage (Torso) (5 hits) 25 35 45 50 Targeting (Torso) (5 hits) 30 45 50 60 Base Damage (Head) (5 hits) 50 70 90 100 Targeting (Head) (5 hits) 60 90 100 120 Sniper Rifle (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 8 12 15 17 Targeting (Torso) 10 15 17 19 Base Damage (Head) 16 24 30 34 Targeting (Head) 20 30 34 38 Base Damage (Scope) (Torso) 25 37 43 50 Targeting (Scope) (Torso) 31 43 49 56 Base Damage (Scope) (Head) 50 74 86 100 Targeting (Scope) (Head) 62 86 98 112 Sniper Rifle vs. Ballistic Protection (60% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 5 7 8 10 Targeting (Torso) 6 8 10 11 Base Damage (Head) 10 14 16 20 Targeting (Head) 12 16 20 22 Base Damage (Scope) (Torso) 15 22 25 30 Targeting (Scope) (Torso) 18 25 29 33 Base Damage (Scope) (Head) 30 44 50 60 Targeting (Scope) (Head) 36 50 58 66 Stealth Pistol (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 12 18 20 24 Targeting (Torso) 15 21 23 27 Base Damage (Head) 24 36 40 48 Targeting (Head) 30 42 46 54 Stealth Pistol vs. Ballistic Protection (60% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 7 10 12 14 Targeting (Torso) 9 12 13 16 Base Damage (Head) 14 20 24 28 Targeting (Head) 18 24 26 32 Sword (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 20 30 34 40 Targeting (Torso) 25 35 39 45 Combat Strength (Torso) 40 50 54 60 Target + Combat (Torso) 45 55 59 65 Base Damage (Head) 40 60 68 80 Targeting (Head) 50 70 78 90 Combat Strength (Head) 80 100 108 120 Target + Combat (Head) 90 110 118 130 Sword vs. Ballistic Protection (60% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 12 18 20 24 Targeting (Torso) 15 21 23 27 Combat Strength (Torso) 24 30 32 36 Target + Combat (Torso) 27 33 35 39 Base Damage (Head) 24 36 40 48 Targeting (Head) 30 42 46 54 Combat Strength (Head) 48 60 64 72 Target + Combat (Head) 54 66 70 78 Throwing Knives (100% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 17 25 29 34 Targeting (Torso) 21 29 33 38 Combat Strength (Torso) 34 42 46 51 Target + Combat (Torso) 38 46 50 55 Base Damage (Head) 34 50 58 68 Targeting (Head) 42 58 66 76 Combat Strength (Head) 68 84 92 102 Target + Combat (Head) 76 92 100 110 Throwing Knives vs. Ballistic Protection (60% damage) Base Damage Level 1 Level 2 Level 3 Base Damage (Torso) 10 15 17 20 Targeting (Torso) 12 17 19 22 Combat Strength (Torso) 20 25 27 30 Target + Combat (Torso) 22 27 30 33 Base Damage (Head) 20 30 34 40 Targeting (Head) 24 34 38 44 Combat Strength (Head) 40 50 54 60 Target + Combat (Head) 44 54 60 66","title":"Playing"},{"location":"playing/#launchers","text":"","title":"Launchers"},{"location":"playing/#what-is-a-launcher","text":"A launcher is effectively a replacement for the base game executables that fixes the game to run on modern computers. It'll fix things like widescreen problems, CPU issues, etc. Generally, there are two excepted Launchers for DX. Kenties, and Han's Launch.","title":"What is a Launcher?"},{"location":"playing/#but-which-one-do-i-choose","text":"Alot of people, mostly around the Steam forums, suggest using Kenties as the fix-all for every problem. The issue is, that is not entirely correct. Kenties fixes a few things, but it also adds its own problems, nameley; It causes menus to lag; Alot of users reported (me included) that the game will have a few second delay to opening menus. The delay was so much of a problem, that during multiplayer games, I would lag out of servers just from opening the menu. It moves your config files to an arbitrary location making configging things needlessly more difficult; By default, the game stores configs in /Deus Ex/System, Kenties moves that to a generic /Game/ folder in My Documents. It breaks hosting servers, dedicated servers wont work. It causes a game breaking crash in singleplayer; During LaGuardia, there is a known bug that makes the game unplayable without cheats, it's reported on Kentie's own website but as of yet, he has not fixed it. Compatibility problems with OS's and VB Runtime dependancies; Probably the one that effects the least people, but Kenties relies on VB runtimes, which makes the launcher unusable on other OS's like Linux. Launch fixes alot of the same things that Kenties does (CPU, widescreen etc), but doesn't add aditional problems and load times, it seamlessly integrates with the game. Kenties main draw is that it adds a GUI for quickly accessing certain config files properties, but alot of what's there can just be accessed from the config files yourself. With that in mind, either launcher is available to download, Launch , and Kenties .","title":"But which one do I choose?"},{"location":"playing/#general-gameplay","text":"","title":"General Gameplay"},{"location":"playing/#network","text":"Ping (or latency), accordingly to the Wikipedia article , is \"the network latency seen between their computer and the game server (or another player)\". The lower your ping is, the smoother you gameplay will be. In Deus Ex you can view your ping by using \"ping\" or \"stat net \" commands (first press \"T\", erase \"Say\" and only then type the command). Ping depends on: Your Connection speed. Your ping will be higher if you have a, e.g. 56k modem, although it will not significantly change after you upgrade to something higher than 512 kbps. Don't mix your Internet speed with Local Area (LAN) speed, which may be higher. Also, in \"Player Settings\" it is important to set connection type as close to your connection speed as possible. You may want to install a mod called DXMTL, which adds a few new options there. When you download or upload something, your speed decreases. Connection type. If you're connected to the Internet through satellite, radio ethernet, WiFi or use any other wireless devices, your ping will be higher. The fastest connection type is a fiber-optic broadband and ADSL (quality depends on phone line). Location. You may have a 100 mbit fiber-optic broadband, but if you live in e.g. Australia and the server you're willing to play is from United Kingdom, you will still have a ping of 300-500 in Deus Ex. Server's Connection speed. The higher connection speed is, the better the ping is, when more players play. Also, the better the server's connection is, the less influenced the server is for downloaders. \"Downloaders\" are those, who download the files directly from the game server (in contrary to web server, like download.dxalpha.co.uk ). Connection type. Same as above, in \"your connection type\". Location. Same as above, in \"your location\". Hardware. The better hardware specification is, the better the ping is\u2014this is mostly relevant when the server is crowded.","title":"Network"},{"location":"playing/#hardware","text":"Frame rate (or \"frame frequency\"; or \"FPS\") accordingly the Wikipedia article , is \"the measurement of how quickly an imaging device produces unique consecutive images called frames. Frame rates of approximately 25 to 30 fps are considered minimally acceptable\". The most common FPS in Deus Ex on modern video cards is above 80. The bigger your frame rate per second is, the easier it is to react on things, and more comfortable to play (you may feel a headache or sickness after playing on low FPS). FPS depends on: Video card Other computer specs, including CPU , RAM , etc. Monitor. Some monitors may not support high FPS rates, therefore fixing it on e.g. 60.","title":"Hardware"},{"location":"playing/#software","text":"Deus Ex requires you to not run any other processes which can take up quite a bit of your computer's resources. Even if Task Manager shows that both programs can run without totally using the computer, it is advisable to close any unneeded programs, such as instant messengers, or any other programs which you won't need while gaming. You may significantly improve performance of your Deus Ex by using another renderer. Accordingly to Wikipedia, a renderer is \"a carefully engineered program, based on a selective mixture of disciplines related to: light physics, visual perception, mathematics, and software development\". Most of people run Deus Ex on the normal Direct3D renderer, but you may try the enhanced OpenGL or Direct3D renderer to increase performance. You may learn how to do that here .","title":"Software"},{"location":"playing/#commodity","text":"Mouse. You should be able to move your cursor precisely to any place of your screen in a short period of time. If you can't, you might want to check: Sensivity setting. You may set mouse sensitivity in your operating system (in Windows, in Control Panel -> Mouse) and in Deus Ex (Settings -> Controls). Too sensitive mouse makes sniping harder, too insensitive mouse makes close range battles harder. Wireless/wired. Wireless mice (especially cheap ones) have a problem with response time\u2014when you move it suddenly, the cursor may move to opposite direction. Weight. Wireless mice with batteries are heavier and take more effort to move. Type. Ball mice are the past, buy something new\u2014optical mouse, at least. Mousepad. It's purely individual. The author prefers his heavy-weight \"Hirsch\" promotional mousepad , brought from United States approximately 8 years ago. Monitor. Some people believe that it's harder to play on widescreens. Also it may be hard to play if you're sitting below level of your monitor. Personal space. Your legs shouldn't lie on the table, your hand which holds the mouse shouldn't be in the air, you shouldn't strain when sitting. But this depends on you. Controls. The author uses arrows for movement (\"Shift\" for jumping and \"Ctrl\" for crouching), although many people prefer WASD keys (W\u2014forward, S\u2014back, A\u2014left, D\u2014right). You should be able to jump and duck whenever you want without doing unnecessary movements. Some Deus Ex'ers prefer to have toggle scope action bound to middle button/wheel (scope toggles not when you scroll the wheel, but when you press on it). Binds. Getting a medkit and quick reload binds may significantly improve your gameplay.","title":"Commodity"},{"location":"playing/#tips-for-dxag","text":"ArxGenus aka DXAG is a Deus Ex multiplayer modification, which involves division into classes and a factor of team work. Use ballistic protection as Medic. Use run silent when you are cloaked. Pretty much always have Energy Shield on as Engineer. Same with Targetting and Sniper. Look more than just in front of you when you are using vision. Medics may seem impossibly nuts, but any good player would exploit their weaknesses (EMP, Explosions, Flamethrowers) Always spray your allies when you have a free second. Stealth may seem a hard class to work with, but you need to use Cloak, Radar Trans and Lockpicks to their advantage, enemies DONT have eyes in the back of their heads, so go around the back. Engineers should always check up on turrets they have captured as protocol, the more turrets you own, the more control you have, and the more kills you will get. Pick your class by your strengths, if you like the Sniper rifle, pick the sniper, if you want to heal and make enemies call you a noob and get angry, go Medic \u2014 but on the flip side of that coin, if you play with more than one class, you can be flexible, making you a much more valuable team member. Written by MrBlack.","title":"Tips for DXAG"},{"location":"playing/#ping","text":"Ping (or latency), accordingly to the Wikipedia article , is \"the network latency seen between their computer and the game server (or another player)\". The lower your ping is, the smoother you gameplay will be. In Deus Ex you can view your ping by using \"ping \" or \" stat net \" commands (first press \"T\", erase \"Say\" and only then type the command). Ping is evaluated in milliseconds (ms) You shouldn't be scared by these high values of ping in Deus Ex because due to yet uncovered reasons the ping appears to be higher than it is in fact. A ping of 100 in Deus Ex is actually the same as 25 in other games. Also if you happen to play on your own dedicated server, you'll see that your ping doesn't go below 25-30, although actually it's less than 1 (ms). In Deus Ex usually a ping of 20\u2014100 is considered very low, 101\u2014150 is low, 150\u2014200 is moderate, 201\u2014250 is acceptable, 250\u2014320 is high, 320+ \u2014 very high. When the ping is high, It's important to understand that what you see in your Deus Ex is not what really happens, but the past which has already happened. How old is the \"past\" depends on ping. E.g., if your ping is 1000 (that's very high) Therefore, you always should always shoot a bit in front of an enemy.","title":"Ping"},{"location":"playing/#tips-for-playing","text":"Deus Ex provides you with a variety of ways of playing. You don't have to play like the rest \u2014 instead you may with your own style \u2014 it's harder yet interesting, but you shouldn't make these simple mistakes common for all the players. Some of them are described below \u2014 read and start winning. Don't laugh if you already knew something \u2014 the authors of this article meet experienced players who still don't know basic things. Medkits. For some reason many people ignore them and instead of using one they just surrender. If you desperate, at least don't leave a medkit in your inventory for an enemy. When playing, don't think about enemies in the first place \u2014 better find a good location which would give you an advantage, or collect inventory items such as medkits and LAMs, and while doing these things you may find someone easy to kill. Don't be afraid to run away! Just survive. Remember, success is never blamed. You may switch to other team. Press Esc (to open Main menu) -> Multiplayer -> Player Settings, change right icon e.g. of NSF to UNATCO or vice versa. Return back to game \u2014 your play should be blown to pieces. Don't use flamethrower. Flamethrower is a good weapon indeed, but only in singleplayer. Fire doesn't make much damage as you think, and could be easily distinguished by using a medkit, medbot or just jumping to water. You may use 20mm shells with assault rifle. To do that, you need to find ammo first and then to change ammo (change ammo function should be bound to a key \u2014 see Settings -> Keyboard/Mouse window). Buy skills (press \"B\") in gametypes which require them. In ATDM (see \" Gametypes \" if you don't understand what does ATDM mean) people always forget about skills and complain about their guns being innacurate or medkits only healing 1/3 of what they should heal. In Deus Ex the most used weapons are: sniper rifle, assault shotgun, assault rifle, although in ATDM many people use Dragon Tooth sword and throwing knives (usually with Combat Strength augmentation, which almost doubles their damage). In gametypes with augmentations there are protective augmentations against plasma rifle (\"Energy Shield\") and GEP gun (\"Aggressive Defence System\"). Sniper rifle does triple damage when you shoot with scope. In fact, the damage it does without scope is unnoticable. Always aim at head even if you feel that the majority of bullets hit walls instead and even if 2 bullets out of 10 hit your enemy's head, its better than 10 out of 10 hit body. In gametypes with augmentations only newbies call GEP guns \"noobish\" (because they think it's \"cheap\"). There's an augmentation called \"Aggresive Defence System\" which could repulse any GEP rocket (not a LAM though!). If you manage to kill an enemy with it, it's entirely enemy's fault that he or she is vulnerable to such things. These weapons may be lethal with one shot to head: Sniper Rifle (with scope). Assault shotgun. Sawed-off shotgun. Dragon Tooth sword. Throwing knife (when \"Combat Strength\" augmentation enabled). GEP Gun (indeed!). You may stick grenades to walls \u2014 they will work as proximity mines. There are several things many people forget about this feature: You may disable opponent's grenade by clicking on it. You may also use \"Radar Transparency\" augmentation if available, or throw an EMP grenade. Using an EMP grenade as a mine together with LAM or gas grenade doesn't make sense, as when EMP explodes it disables the rest. You don't need to place more than one LAM on one place unless you want your enemy to blow into even smaller pieces (the screenshot above was taken by newbies). If an enemy knows about your mine, eventually he or she will certainly manage to disable both grenades using any of possible ways. You need around 4-5 gas grenade mines to kill an enemy when they explode. You need to place them close to each other and if possible, closer to ceiling because then the gas will affect head, not only body. Never stop running. It's not Counter Strike or Battlefield where you have to wait in an ambush and then suddenly attack your opponent. You getting sniped too often? It means that you should crouch and jump, and change direction more frequently. Of course you may make your way to a certain place, but trajectory should look like a zigzag. Just look how good players play and try to snipe them. Hard, yeah? Many elites are annoyed that others call them cheaters. In fact, a cheater is like a poltergeist: everyone heard, but hardly ever seen. In 95% cases it's not a cheater, but a good player. There are lots of good players in the community who play for a long time \u2014 the game was released long ago and they had time to train. In the beginning your scores may be depressing. Don't worry about that \u2014 very soon you'll become a lot better. You may try to watch some demorecs or setup binds .","title":"Tips for Playing"},{"location":"playing/#overviews","text":"","title":"Overviews"},{"location":"singleplayer/","text":"Deus Ex: Nihilum # Author : FastGamerr Type : Story Link : here (https://www.moddb.com/mods/nihilum) Summary : DXN - Deus Ex: Nihilum is a First Person Shooter mod set in an alternate Deus Ex continuity. It features made-from-scratch original content while also extensively featuring material from the UNATCO Born mod. GMDX # Author : Totalitarian (Now RoSoDude) Type : Conversion Link : here (https://www.moddb.com/mods/gmdx) Summary : GMDX is a large-scale modification for the 2000 PC classic Deus Ex, overhauling many systems, and including Kentei's Launcher, New Vision textures, and HDTP models. Deus Ex: Revision # Author : Caustic Creative Type : Conversion Link : here (https://www.moddb.com/mods/deus-ex-revision) Summary : Deus Ex: Revision is a large-scale re-imagining of the world of Deus Ex, bringing a tightly integrated aesthetic-oriented approach to the original gameplay. Malkavian # Author : Catbag Type : Meme Link : here (https://www.moddb.com/mods/malkavian-mod) Summary : Malkavian is a silly mod featuring remixed voice acting. There's little gameplay, but it's very meme. If there was no insanity, it would be necessary to create it. -Catbag The Nameless Mod # Author : Off-Topic Productions Type : Story Link : here (https://www.moddb.com/mods/the-nameless-mod) Summary : TNM is a huge singleplayer mod for Deus Ex based on the gaming community, finally released after 7 years of development. Vanilla Matters # Author : Markie Type : Conversion Link : here (https://www.moddb.com/mods/vanilla-matters) Summary : Vanilla Matters is a light-weight mod aimed to smooth out the rough edges of the vanilla Deus Ex experience. It does not try to alter the way you should experience the game, nor make any trade-off or compromise to the original experience. Vanilla Matters fixes numerous bugs and exploits, adds in quality of life features and most importantly rebalances the game to allow more diverse, fun character developments. Redsun 2020 # Author : Senju Type : Story Link : here (https://www.moddb.com/mods/redsun-2020) Summary : Redsun 2020 is a new singleplayer story following Joseph, the newest Nanotech agent developed by UNATCO. ZODIAC # Author : Steve Tack Type : Story Link : here (https://www.moddb.com/mods/zodiac) Summary : ZODIAC is a set of six single player missions for Deus Ex. As Paul Denton, the augmented brother of JC Denton, you will: * Discover why the President is risking a nuclear confrontation. * Break into CIA headquarters in Langley, Virginia to uncover some of the world's best kept secrets. * Solve the mystery of dozens of missing UNATCO troops. * Use all-new weapons and meet new characters. * Travel to new locations including: CIA Headquarters, Buenos Aires, Page Biotech, Holloman Air Force Base, and more! * Full custom soundtrack by Steve Foxon (\"Orak\") Hotel Carone # Author : Carone Type : Story Link : here (https://www.moddb.com/mods/hotel-carone) Summary : An SP mission that lets you stay with UNATCO a little longer, an option many people, like myself, have missed while playing Deus Ex. This is not a simple 'shoot'em all'-type mission, the player has to proceed with care. Stealth is actually important, though probably not 100% necessary if you know what you have to do. ;) Especially in the main map the player is not forced to move around in a certain way. The level design provides many possible paths and different outcomes, the order for completing the objectives is not important, you can even fail some of them. 29 MB download, a couple of hours playtime. Have fun. :) Burden of 80 Proof # Author : ScottC Type : Story Link : here (https://www.moddb.com/mods/burden-of-80-proof) Summary : You take on the role of Peter Kent: gallant gamer, put-upon party-goer, ersatz errand boy, suburban swashbuckler. Navigate a middle-class morass of whiny girlfriends, surly cops, slippery coworkers, surly bartenders, surly bosses, and more. Your mission: procure an ever-growing list of supplies to ensure an appropriately inappropriate weekend of drinking, revelry, and what have you. Project 2027 # Author : Ded Type : Story Link : here (https://www.moddb.com/mods/2027) Summary : 2027 is a modification and a prequel to Deus Ex. New stunning DirectX 9 based graphics. The story is flexible, nonlinear, and allows much wider exploration than before. The final outcone depends entirely on you and your actions. The solutions to any challenge depend only on your imagination. Lots of new weapons and equipment. You will be able to purchase weapons in shops, unlike in the original game. You will be able to improve your weaponry in different ways. New skills, perks and augmentations have been added. A player will be able to use portable spider bots, which he can control and use for exploring a territory and attack. It is also possible to repair and recharge these bots. Weather effects, ranging from a light drizzle to thunderstorms and snowfall. Almost all the locations are based on real photos and maps, and the levels in 2027 will be wider than in the original game. Many cutscenes and intros give a real atmosphere to the rich storyline. New high quality fonts with anti-aliasing. A lot of bugs from the original game have been fixed. Shifter & Shifter+Biomod # Author : Y|yukichigai [Shifter], Clorf [Biomod] Type : Conversion Link [Shifter] : here (https://www.moddb.com/mods/shifter1) Link [Biomod] : here (https://www.moddb.com/mods/biomod) Summary : \"Removing the suck from Deus Ex.\" It's an odd slogan, but that's what Shifter does, what little of it there is. In my opinion anyway. A little mod that started off as an effort to get the damn laser sight to turn on automatically now includes additional augmentations, unique weapons, new game mechanics, bugfixes, restored game content, and even a complete and working alt-fire option for almost every weapon. All of this, seamlessly integrated into the existing game, capable of running simultaneously with almost any other Deus Ex mod. Play your favorite mod, then play it again, \"Shifter-ized\". BioMod is an extension of Y|yukichigai's excellent Shifter mod for Deus Ex. While I still think Shifter is a definite improvement over the original game, I sometimes felt while playing it that it was too conservative for my tastes. Eventually I decided to make my own mod which would contain some radical changes that might give some people pause, but would hopefully breathe new life into the game for everyone else. As the name suggests, BioMod is primarily concerned with Deus Ex's augmentations, with the aim of making them more balanced, but also a lot easier to manage. Most augs are now automated, using energy only when they're actually doing their jobs. Some augs that were less useful or that would be a pain to manage have been made free or given extra abilities, while those that I thought were un-salvageable have been replaced with entirely new augs. In addition to the augmentation system, BioMod also makes some general gameplay changes, such as the addition of pickpocketing, an autosave feature, achievement-like challenges, and a Thief style ledge grabbing system.","title":"Singleplayer Mods"},{"location":"singleplayer/#deus-ex-nihilum","text":"Author : FastGamerr Type : Story Link : here (https://www.moddb.com/mods/nihilum) Summary : DXN - Deus Ex: Nihilum is a First Person Shooter mod set in an alternate Deus Ex continuity. It features made-from-scratch original content while also extensively featuring material from the UNATCO Born mod.","title":"Deus Ex: Nihilum"},{"location":"singleplayer/#gmdx","text":"Author : Totalitarian (Now RoSoDude) Type : Conversion Link : here (https://www.moddb.com/mods/gmdx) Summary : GMDX is a large-scale modification for the 2000 PC classic Deus Ex, overhauling many systems, and including Kentei's Launcher, New Vision textures, and HDTP models.","title":"GMDX"},{"location":"singleplayer/#deus-ex-revision","text":"Author : Caustic Creative Type : Conversion Link : here (https://www.moddb.com/mods/deus-ex-revision) Summary : Deus Ex: Revision is a large-scale re-imagining of the world of Deus Ex, bringing a tightly integrated aesthetic-oriented approach to the original gameplay.","title":"Deus Ex: Revision"},{"location":"singleplayer/#malkavian","text":"Author : Catbag Type : Meme Link : here (https://www.moddb.com/mods/malkavian-mod) Summary : Malkavian is a silly mod featuring remixed voice acting. There's little gameplay, but it's very meme. If there was no insanity, it would be necessary to create it. -Catbag","title":"Malkavian"},{"location":"singleplayer/#the-nameless-mod","text":"Author : Off-Topic Productions Type : Story Link : here (https://www.moddb.com/mods/the-nameless-mod) Summary : TNM is a huge singleplayer mod for Deus Ex based on the gaming community, finally released after 7 years of development.","title":"The Nameless Mod"},{"location":"singleplayer/#vanilla-matters","text":"Author : Markie Type : Conversion Link : here (https://www.moddb.com/mods/vanilla-matters) Summary : Vanilla Matters is a light-weight mod aimed to smooth out the rough edges of the vanilla Deus Ex experience. It does not try to alter the way you should experience the game, nor make any trade-off or compromise to the original experience. Vanilla Matters fixes numerous bugs and exploits, adds in quality of life features and most importantly rebalances the game to allow more diverse, fun character developments.","title":"Vanilla Matters"},{"location":"singleplayer/#redsun-2020","text":"Author : Senju Type : Story Link : here (https://www.moddb.com/mods/redsun-2020) Summary : Redsun 2020 is a new singleplayer story following Joseph, the newest Nanotech agent developed by UNATCO.","title":"Redsun 2020"},{"location":"singleplayer/#zodiac","text":"Author : Steve Tack Type : Story Link : here (https://www.moddb.com/mods/zodiac) Summary : ZODIAC is a set of six single player missions for Deus Ex. As Paul Denton, the augmented brother of JC Denton, you will: * Discover why the President is risking a nuclear confrontation. * Break into CIA headquarters in Langley, Virginia to uncover some of the world's best kept secrets. * Solve the mystery of dozens of missing UNATCO troops. * Use all-new weapons and meet new characters. * Travel to new locations including: CIA Headquarters, Buenos Aires, Page Biotech, Holloman Air Force Base, and more! * Full custom soundtrack by Steve Foxon (\"Orak\")","title":"ZODIAC"},{"location":"singleplayer/#hotel-carone","text":"Author : Carone Type : Story Link : here (https://www.moddb.com/mods/hotel-carone) Summary : An SP mission that lets you stay with UNATCO a little longer, an option many people, like myself, have missed while playing Deus Ex. This is not a simple 'shoot'em all'-type mission, the player has to proceed with care. Stealth is actually important, though probably not 100% necessary if you know what you have to do. ;) Especially in the main map the player is not forced to move around in a certain way. The level design provides many possible paths and different outcomes, the order for completing the objectives is not important, you can even fail some of them. 29 MB download, a couple of hours playtime. Have fun. :)","title":"Hotel Carone"},{"location":"singleplayer/#burden-of-80-proof","text":"Author : ScottC Type : Story Link : here (https://www.moddb.com/mods/burden-of-80-proof) Summary : You take on the role of Peter Kent: gallant gamer, put-upon party-goer, ersatz errand boy, suburban swashbuckler. Navigate a middle-class morass of whiny girlfriends, surly cops, slippery coworkers, surly bartenders, surly bosses, and more. Your mission: procure an ever-growing list of supplies to ensure an appropriately inappropriate weekend of drinking, revelry, and what have you.","title":"Burden of 80 Proof"},{"location":"singleplayer/#project-2027","text":"Author : Ded Type : Story Link : here (https://www.moddb.com/mods/2027) Summary : 2027 is a modification and a prequel to Deus Ex. New stunning DirectX 9 based graphics. The story is flexible, nonlinear, and allows much wider exploration than before. The final outcone depends entirely on you and your actions. The solutions to any challenge depend only on your imagination. Lots of new weapons and equipment. You will be able to purchase weapons in shops, unlike in the original game. You will be able to improve your weaponry in different ways. New skills, perks and augmentations have been added. A player will be able to use portable spider bots, which he can control and use for exploring a territory and attack. It is also possible to repair and recharge these bots. Weather effects, ranging from a light drizzle to thunderstorms and snowfall. Almost all the locations are based on real photos and maps, and the levels in 2027 will be wider than in the original game. Many cutscenes and intros give a real atmosphere to the rich storyline. New high quality fonts with anti-aliasing. A lot of bugs from the original game have been fixed.","title":"Project 2027"},{"location":"singleplayer/#shifter-shifterbiomod","text":"Author : Y|yukichigai [Shifter], Clorf [Biomod] Type : Conversion Link [Shifter] : here (https://www.moddb.com/mods/shifter1) Link [Biomod] : here (https://www.moddb.com/mods/biomod) Summary : \"Removing the suck from Deus Ex.\" It's an odd slogan, but that's what Shifter does, what little of it there is. In my opinion anyway. A little mod that started off as an effort to get the damn laser sight to turn on automatically now includes additional augmentations, unique weapons, new game mechanics, bugfixes, restored game content, and even a complete and working alt-fire option for almost every weapon. All of this, seamlessly integrated into the existing game, capable of running simultaneously with almost any other Deus Ex mod. Play your favorite mod, then play it again, \"Shifter-ized\". BioMod is an extension of Y|yukichigai's excellent Shifter mod for Deus Ex. While I still think Shifter is a definite improvement over the original game, I sometimes felt while playing it that it was too conservative for my tastes. Eventually I decided to make my own mod which would contain some radical changes that might give some people pause, but would hopefully breathe new life into the game for everyone else. As the name suggests, BioMod is primarily concerned with Deus Ex's augmentations, with the aim of making them more balanced, but also a lot easier to manage. Most augs are now automated, using energy only when they're actually doing their jobs. Some augs that were less useful or that would be a pain to manage have been made free or given extra abilities, while those that I thought were un-salvageable have been replaced with entirely new augs. In addition to the augmentation system, BioMod also makes some general gameplay changes, such as the addition of pickpocketing, an autosave feature, achievement-like challenges, and a Thief style ledge grabbing system.","title":"Shifter &amp; Shifter+Biomod"},{"location":"troubleshooting/","text":"Procedure Entry Point error # It's most likely caused by improperly installed renderer's driver. The majority of people get this error when they try to change to OpenGL renderer \u2014 because they download a wrong driver for Unreal Tournament from Chris Dohnal's website . To solve the problem, re-download the driver which is meant to be used with Deus Ex, not Unreal Tournament. The section with Deus Ex drivers is below section with UT drivers. Unreal Tournament drivers don't work with the game and cause this error. Mismatching # So, you see a server with your favourite map on, or your fellow clan mate playing on it. You swiftly attempt to join the server when SMASH , you're stopped in your tracks by a large \" Filename _MisMatch error\", or a similar message. I\u2019ve had enough of these in the past, and although not life-threatening, they can be a hefty nuisance. I'm going to briefly go over the simplest way to fix this problem, let's look at probably the most common example: Fixing MisMatch Errors # You see a popular server, 8/10 slots full, 80 ping, playing on DXMP_Cathedral. You attempt to join and you get the old MisMatch error (I'll explain why later). Now the best way to fix this is: Close down all instances of Deus Ex. Locate your Maps folder, generally in MyComputer>C:>DeusEx>Maps. Locate DXMP_Cathedral, most likely near the bottom. Either Drag this onto your desktop or some other place, or delete it. Now attempt to re-join the server. You should be able to join without error. If you still get the MisMatch error, and you have definitely taken DXMP_Cathedral away from your Deus Ex folder, it may be required that you purge your cache. The cache, in brief, stores all of the Downloads you have taken from servers, so Gun Mods, Maps, Anti-Cheating Mods, etc. Either delete all of that or take about 3-5 out at a time, then try to re-join the server. Why do MisMatch Errors occur? # If we take DXMP_Cathedral for example, several versions of the same map were released under the name DXMP_Cathedral. That means that it attempts to fetch the DXMP_Cathedral in your /Maps folder, because it sees you are joining a map with the name DXMP_Cathedral. If the server is running a different version however, Deus Ex tends to just get confused and give up, leaving you to mop up the pieces and sort it out! Another typical example is CaroneElevatorSet.u, a clever mod used to help make lift-making simpler in Deus Ex Editor/SDK. The maker, Carone I believe, released several versions under the same name. The map DXMP_RPGCity apparently uses it, must be in the crane or something - but I will usually get a MisMatch Error if I have been using CaroneElevator in a map I was making, and forgotten to remove it from /System. So to re-cap, if you get MisMatch errors, look at what the filename/map it is, then close Deus Ex and take that map/file out of your /DeusEx Folder! Bad Name error and/or New/None Actor Channel # This problem appears when one of the system files of Deus Ex is corrupted, usually it's \"DeusEx.u\" or \"Engine.u\". Other issues may also be involved. There are various ways to solve this: Insert your Deus Ex CD, open it for browsing. Find System/ folder and copy \"DeusEx.u\" to your DeusEx/System/ folder. If it doesn't work, try copying all the files with .u extension to your DeusEx/System/ folder. Ask someone to give you the file(s). The easiest way is to reinstall Deus Ex. If you don't want to lose the settings, move/copy User.ini, Defuser.ini, DeusEx.ini and Default.ini from DeusEx/System to a safe place during installation and when it's finished, move them back. Other things to try : Try turning off GUI fix/other fixes in Kenteis. Either change renderer, then change back to original, or ingame type debug gpf then restart. Thanks to Clix for the solution. Clientdeath # What is it? # This is a bug of the game, called \"client death\". \"Client death\" is when you hear your own death scream, your user interface disappears, but you can still move (from a technical point of view, the player dies on your computer, but it doesn't die on the server, so the server doesn't clean your inventory, respawn and fine a death point on the scoreboard). Fixing # When happened, just press \"Esc\" button on your keyboard, it will show the main menu, then return to the game. Your interface should appear again. Don't pay attention to your \"dead\" body \u2014 the bug will go as soon as you're injured. Causes # The glitch occurs when the multiplayer replication code de-syncs between the client and server, which can happen for many reasons, including server lag, bad coding or other rare glitches. Basically, the server didn't expect the death to occur, but something on the client forced the death, which causes the desync. Bad Name Index # This problem appears when one of the system files of Deus Ex is corrupted, usually it's \"DeusEx.u\" or \"Engine.u\". Other issues may also be involved. There are various ways to solve this: Insert your Deus Ex CD, open it for browsing. Find System/ folder and copy \"DeusEx.u\" to your DeusEx/System/ folder. If it doesn't work, try copying all the files with .u extension to your DeusEx/System/ folder. Ask someone to give you the file(s). The easiest way is to reinstall Deus Ex. If you don't want to lose the settings, move/copy User.ini, Defuser.ini, DeusEx.ini and Default.ini from DeusEx/System to a safe place during installation and when it's finished, move them back. Other things to try : Try turning off GUI fix/other fixes in Kenteis. New/None actor channel: Either change renderer, then change back to original, or ingame type debug gpf then restart. Thanks to Clix for the solution.","title":"Troubleshooting"},{"location":"troubleshooting/#procedure-entry-point-error","text":"It's most likely caused by improperly installed renderer's driver. The majority of people get this error when they try to change to OpenGL renderer \u2014 because they download a wrong driver for Unreal Tournament from Chris Dohnal's website . To solve the problem, re-download the driver which is meant to be used with Deus Ex, not Unreal Tournament. The section with Deus Ex drivers is below section with UT drivers. Unreal Tournament drivers don't work with the game and cause this error.","title":"Procedure Entry Point error"},{"location":"troubleshooting/#mismatching","text":"So, you see a server with your favourite map on, or your fellow clan mate playing on it. You swiftly attempt to join the server when SMASH , you're stopped in your tracks by a large \" Filename _MisMatch error\", or a similar message. I\u2019ve had enough of these in the past, and although not life-threatening, they can be a hefty nuisance. I'm going to briefly go over the simplest way to fix this problem, let's look at probably the most common example:","title":"Mismatching"},{"location":"troubleshooting/#fixing-mismatch-errors","text":"You see a popular server, 8/10 slots full, 80 ping, playing on DXMP_Cathedral. You attempt to join and you get the old MisMatch error (I'll explain why later). Now the best way to fix this is: Close down all instances of Deus Ex. Locate your Maps folder, generally in MyComputer>C:>DeusEx>Maps. Locate DXMP_Cathedral, most likely near the bottom. Either Drag this onto your desktop or some other place, or delete it. Now attempt to re-join the server. You should be able to join without error. If you still get the MisMatch error, and you have definitely taken DXMP_Cathedral away from your Deus Ex folder, it may be required that you purge your cache. The cache, in brief, stores all of the Downloads you have taken from servers, so Gun Mods, Maps, Anti-Cheating Mods, etc. Either delete all of that or take about 3-5 out at a time, then try to re-join the server.","title":"Fixing MisMatch Errors"},{"location":"troubleshooting/#why-do-mismatch-errors-occur","text":"If we take DXMP_Cathedral for example, several versions of the same map were released under the name DXMP_Cathedral. That means that it attempts to fetch the DXMP_Cathedral in your /Maps folder, because it sees you are joining a map with the name DXMP_Cathedral. If the server is running a different version however, Deus Ex tends to just get confused and give up, leaving you to mop up the pieces and sort it out! Another typical example is CaroneElevatorSet.u, a clever mod used to help make lift-making simpler in Deus Ex Editor/SDK. The maker, Carone I believe, released several versions under the same name. The map DXMP_RPGCity apparently uses it, must be in the crane or something - but I will usually get a MisMatch Error if I have been using CaroneElevator in a map I was making, and forgotten to remove it from /System. So to re-cap, if you get MisMatch errors, look at what the filename/map it is, then close Deus Ex and take that map/file out of your /DeusEx Folder!","title":"Why do MisMatch Errors occur?"},{"location":"troubleshooting/#bad-name-error-andor-newnone-actor-channel","text":"This problem appears when one of the system files of Deus Ex is corrupted, usually it's \"DeusEx.u\" or \"Engine.u\". Other issues may also be involved. There are various ways to solve this: Insert your Deus Ex CD, open it for browsing. Find System/ folder and copy \"DeusEx.u\" to your DeusEx/System/ folder. If it doesn't work, try copying all the files with .u extension to your DeusEx/System/ folder. Ask someone to give you the file(s). The easiest way is to reinstall Deus Ex. If you don't want to lose the settings, move/copy User.ini, Defuser.ini, DeusEx.ini and Default.ini from DeusEx/System to a safe place during installation and when it's finished, move them back. Other things to try : Try turning off GUI fix/other fixes in Kenteis. Either change renderer, then change back to original, or ingame type debug gpf then restart. Thanks to Clix for the solution.","title":"Bad Name error and/or New/None Actor Channel"},{"location":"troubleshooting/#clientdeath","text":"","title":"Clientdeath"},{"location":"troubleshooting/#what-is-it","text":"This is a bug of the game, called \"client death\". \"Client death\" is when you hear your own death scream, your user interface disappears, but you can still move (from a technical point of view, the player dies on your computer, but it doesn't die on the server, so the server doesn't clean your inventory, respawn and fine a death point on the scoreboard).","title":"What is it?"},{"location":"troubleshooting/#fixing","text":"When happened, just press \"Esc\" button on your keyboard, it will show the main menu, then return to the game. Your interface should appear again. Don't pay attention to your \"dead\" body \u2014 the bug will go as soon as you're injured.","title":"Fixing"},{"location":"troubleshooting/#causes","text":"The glitch occurs when the multiplayer replication code de-syncs between the client and server, which can happen for many reasons, including server lag, bad coding or other rare glitches. Basically, the server didn't expect the death to occur, but something on the client forced the death, which causes the desync.","title":"Causes"},{"location":"troubleshooting/#bad-name-index","text":"This problem appears when one of the system files of Deus Ex is corrupted, usually it's \"DeusEx.u\" or \"Engine.u\". Other issues may also be involved. There are various ways to solve this: Insert your Deus Ex CD, open it for browsing. Find System/ folder and copy \"DeusEx.u\" to your DeusEx/System/ folder. If it doesn't work, try copying all the files with .u extension to your DeusEx/System/ folder. Ask someone to give you the file(s). The easiest way is to reinstall Deus Ex. If you don't want to lose the settings, move/copy User.ini, Defuser.ini, DeusEx.ini and Default.ini from DeusEx/System to a safe place during installation and when it's finished, move them back. Other things to try : Try turning off GUI fix/other fixes in Kenteis. New/None actor channel: Either change renderer, then change back to original, or ingame type debug gpf then restart. Thanks to Clix for the solution.","title":"Bad Name Index"}]}